(undo-tree-save-format-version . 1)
"54dd673cfa4ed67411370014dd1d46e0cd4efc0e"
[nil nil nil nil (25356 52552 557202 624000) 0 nil]
([nil nil ((353 . 354) (t 25356 51702 654284 258000)) nil (25356 52552 557201 261000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-type-face fontified t)) . -353) (undo-tree-id0 . -1) 354) nil (25356 52552 557198 565000) 0 nil])
([nil nil ((319 . 321)) nil (25356 52552 556920 485000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -319) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -320) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 321 (t 25356 52552 567655 725000)) nil (25356 52568 353011 434000) 0 nil])
([nil nil ((1078 . 1088) (t 25356 52568 364323 100000)) nil (25356 52621 869949 681000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1073) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -1074) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -1075) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -1076) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("s" 0 1 (fontified t)) . -1078) (undo-tree-id43 . -1) (#("t" 0 1 (fontified t)) . -1079) (undo-tree-id44 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1080) (undo-tree-id45 . -1) (#("e" 0 1 (fontified t)) . -1081) (undo-tree-id46 . -1) (#("a" 0 1 (fontified t)) . -1082) (undo-tree-id47 . -1) (#("m" 0 1 (fontified t)) . -1083) (undo-tree-id48 . -1) (#("." 0 1 (fontified t)) . -1084) (undo-tree-id49 . -1) (#("n" 0 1 (fontified t)) . -1085) (undo-tree-id50 . -1) (#("o" 0 1 (fontified t)) . -1086) (undo-tree-id51 . -1) (#("w" 0 1 (fontified t)) . -1087) (undo-tree-id52 . -1) 1088) nil (25356 52621 869944 713000) 0 nil])
([nil nil ((353 . 358)) nil (25356 52621 869919 727000) 0 nil])
([nil nil ((358 . 365)) nil (25356 52621 869918 498000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -363) (undo-tree-id26 . -1) (#("o" 0 1 (fontified t)) . -364) (undo-tree-id27 . -1) 365) nil (25356 52621 869916 764000) 0 nil])
([nil nil ((363 . 365)) nil (25356 52621 869913 807000) 0 nil])
([nil nil ((363 . 372) (#("ti" 0 2 (fontified nil)) . 363) (363 . 365) (#("timestamp" 0 9 (fontified nil)) . -363) (363 . 372) (#("ti" 0 2 (fontified t)) . -363) (undo-tree-id25 . -2) 365) nil (25356 52621 869912 253000) 0 nil])
([nil nil ((372 . 374)) nil (25356 52621 869908 927000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -372) (undo-tree-id23 . -1) (#("n" 0 1 (fontified t)) . -373) (undo-tree-id24 . -1) 374) nil (25356 52621 869907 613000) 0 nil])
([nil nil ((372 . 374)) nil (25356 52621 869904 755000) 0 nil])
([nil nil ((374 . 376)) nil (25356 52621 869903 590000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -375) (undo-tree-id22 . -1) 376) nil (25356 52621 869902 432000) 0 nil])
([nil nil ((375 . 383) (#("callback" 0 8 (fontified nil)) . -375) (375 . 383)) nil (25356 52621 869900 357000) 0 nil])
([nil nil ((383 . 385)) nil (25356 52621 869899 31000) 0 nil])
([nil nil ((385 . 387)) nil (25356 52621 869898 74000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -383) (undo-tree-id16 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -384) (undo-tree-id17 . -1) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (#("." 0 1 (fontified t)) . -385) (undo-tree-id20 . -1) (#("n" 0 1 (fontified t)) . -386) (undo-tree-id21 . -1) 387) nil (25356 52621 869896 45000) 0 nil])
([nil nil ((383 . 384)) nil (25356 52621 869889 307000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -383) (undo-tree-id15 . -1) 384) nil (25356 52621 869887 829000) 0 nil])
([nil nil ((383 . 384)) nil (25356 52621 869885 698000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -383) (undo-tree-id14 . -1) 384) nil (25356 52621 869884 454000) 0 nil])
([nil nil ((383 . 386)) nil (25356 52621 869882 432000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -385) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 386) nil (25356 52621 869880 978000) 0 nil])
([nil nil ((#("info.timestamp().callback.n" 0 5 (fontified t) 5 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 17 (fontified t) 17 27 (fontified t)) . 358) (undo-tree-id7 . -17) (undo-tree-id8 . -15) (undo-tree-id9 . -27) (undo-tree-id10 . -27) (undo-tree-id11 . -27)) nil (25356 52621 869876 736000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 358) (undo-tree-id5 . 1) (undo-tree-id6 . -1)) nil (25356 52621 869867 752000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -354) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) 358 (t 25356 52621 910992 168000)) nil (25356 52622 845314 997000) 0 nil])
([nil nil ((155 . 157) (t 25356 52622 857658 877000)) nil (25356 55532 56386 919000) 0 nil])
([nil nil ((156 . 170)) nil (25356 55532 56385 902000) 0 nil])
([nil nil ((170 . 173)) nil (25356 55532 56385 162000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 172) (undo-tree-id86 . -1) (173 . 174)) nil (25356 55532 56384 154000) 0 nil])
([nil nil ((155 . 156)) nil (25356 55532 56382 497000) 0 nil])
([nil nil ((157 . 158)) nil (25356 55532 56381 723000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face fontified t)) . 157)) nil (25356 55532 56380 874000) 0 nil])
([nil nil ((173 . 183)) nil (25356 55532 56380 56000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -180) (undo-tree-id83 . -1) (#("r" 0 1 (fontified t)) . -181) (undo-tree-id84 . -1) (#("h" 0 1 (fontified t)) . -182) (undo-tree-id85 . -1) 183) nil (25356 55532 56378 703000) 0 nil])
([nil nil ((180 . 183)) nil (25356 55532 56375 92000) 0 nil])
([nil nil ((179 . 185) (#("thre" 0 4 (fontified nil)) . 179) (179 . 183) (#("thread" 0 6 (fontified nil)) . -179) (179 . 185) (#("thre" 0 4 (fontified t)) . -179) (undo-tree-id82 . -4) 183) nil (25356 55532 56373 761000) 0 nil])
([nil nil ((185 . 193)) nil (25356 55532 56371 152000) 0 nil])
([nil nil ((#("thread::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -179) (undo-tree-id81 . -8) 187) nil (25356 55532 56370 98000) 0 nil])
([nil nil ((#("atomic" 0 6 (fontified t)) . -179) (undo-tree-id80 . -6) 185) nil (25356 55532 56368 17000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -177) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(":" 0 1 (fontified t)) . -178) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 179) nil (25356 55532 56365 745000) 0 nil])
([nil nil ((177 . 181)) nil (25356 55532 56361 458000) 0 nil])
([nil nil ((179 . 183) (#("sy" 0 2 (fontified nil)) . 179) (179 . 181) (#("sync" 0 4 (fontified nil)) . -179) (179 . 183) (#("sy" 0 2 (fontified t)) . -179) (undo-tree-id75 . -2) 181) nil (25356 55532 56359 937000) 0 nil])
([nil nil ((183 . 186)) nil (25356 55532 56357 51000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -185) (undo-tree-id74 . -1) 186) nil (25356 55532 56356 162000) 0 nil])
([nil nil ((185 . 187)) nil (25356 55532 56354 357000) 0 nil])
([nil nil ((185 . 191) (#("at" 0 2 (fontified nil)) . 185) (185 . 187) (#("atomic" 0 6 (fontified nil)) . -185) (185 . 191) (#("at" 0 2 (fontified t)) . -185) (undo-tree-id73 . -2) 187) nil (25356 55532 56352 917000) 0 nil])
([nil nil ((191 . 195)) nil (25356 55532 56349 479000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-type-face fontified t)) . -194) (undo-tree-id72 . -1) 195) nil (25356 55532 56348 440000) 0 nil])
([nil nil ((194 . 199)) nil (25356 55532 56345 176000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-type-face fontified t)) . -198) (undo-tree-id71 . -1) 199) nil (25356 55532 56343 988000) 0 nil])
([nil nil ((198 . 199)) nil (25356 55532 56341 896000) 0 nil])
([nil nil ((193 . 200) ("atomics" . -193) (nil fontified t 194 . 200) (nil face font-lock-type-face 194 . 200) (#("Atomic" 0 6 (face font-lock-type-face fontified t)) . -193) (199 . 206) 199) nil (25356 55532 56340 620000) 0 nil])
([nil nil ((193 . 203) ("atomic_ref" . -193) (nil fontified t 196 . 203) (nil face font-lock-type-face 196 . 203) (#("Atomics" 0 7 (face font-lock-type-face fontified t)) . -193) (200 . 210) 200) nil (25356 55532 56338 199000) 0 nil])
([nil nil ((nil fontified t 193 . 203) (nil face font-lock-type-face 193 . 203) (#("Atomic_Ref" 0 10 (face font-lock-type-face fontified t)) . -193) (203 . 213) 203) nil (25356 55532 56335 964000) 0 nil])
([nil nil ((nil fontified t 194 . 204) (nil face font-lock-type-face 194 . 204) (#("AtomicBool" 0 10 (face font-lock-type-face fontified t)) . -193) (203 . 214) 203) nil (25356 55532 56334 103000) 0 nil])
([nil nil ((nil fontified t 193 . 204) (nil face font-lock-type-face 193 . 204) (#("AtomicIsize" 0 11 (face font-lock-type-face fontified t)) . -193) (204 . 215) 204) nil (25356 55532 56332 176000) 0 nil])
([nil nil ((nil fontified t 193 . 201) (nil face font-lock-type-face 193 . 201) (#("AtomicUsize" 0 11 (face font-lock-type-face fontified t)) . -193) (204 . 212) 204) nil (25356 55532 56330 165000) 0 nil])
([nil nil ((nil fontified t 194 . 202) (nil face font-lock-type-face 194 . 202) (#("AtomicI8" 0 8 (face font-lock-type-face fontified t)) . -193) (201 . 210) 201) nil (25356 55532 56328 209000) 0 nil])
([nil nil ((193 . 203) ("atomically" . -193) (nil fontified t 194 . 203) (nil face font-lock-type-face 194 . 203) (#("AtomicU16" 0 9 (face font-lock-type-face fontified t)) . -193) (202 . 212) 202) nil (25356 55532 56326 196000) 0 nil])
([nil nil ((nil fontified t 193 . 202) (nil face font-lock-type-face 193 . 202) (#("Atomically" 0 10 (face font-lock-type-face fontified t)) . -193) (203 . 212) 203) nil (25356 55532 56324 4000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-type-face fontified t)) . -200) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("4" 0 1 (face font-lock-type-face fontified t)) . -201) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 202) nil (25356 55532 56321 860000) 0 nil])
([nil nil ((200 . 201)) nil (25356 55532 56315 982000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -200) (undo-tree-id64 . -1) 201) nil (25356 55532 56314 928000) 0 nil])
([nil nil ((200 . 205)) nil (25356 55532 56312 915000) 0 nil])
([nil nil ((155 . 162)) nil (25356 55532 56312 48000) 0 nil])
([nil nil ((162 . 164)) nil (25356 55532 56311 137000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-constant-face fontified t)) . -162) (undo-tree-id62 . -1) (#("L" 0 1 (face font-lock-constant-face fontified t)) . -163) (undo-tree-id63 . -1) 164) nil (25356 55532 56309 819000) 0 nil])
([nil nil ((162 . 167)) nil (25356 55532 56292 3000) 0 nil])
([nil nil ((164 . 168) (#("syn" 0 3 (fontified nil)) . 164) (164 . 167) (#("sync" 0 4 (fontified nil)) . -164) (164 . 168) (#("syn" 0 3 (fontified t)) . -164) (undo-tree-id61 . -3) 167) nil (25356 55532 56290 479000) 0 nil])
([nil nil ((168 . 172)) nil (25356 55532 56287 321000) 0 nil])
([nil nil ((170 . 176) (#("at" 0 2 (fontified nil)) . 170) (170 . 172) (#("atomic" 0 6 (fontified nil)) . -170) (170 . 176) (#("at" 0 2 (fontified t)) . -170) (undo-tree-id60 . -2) 172) nil (25356 55532 56285 787000) 0 nil])
([nil nil ((176 . 179)) nil (25356 55532 56282 600000) 0 nil])
([nil nil ((178 . 187) (#("A" 0 1 (fontified nil)) . 178) (178 . 179) (#("AtomicU64" 0 9 (fontified nil)) . -178) (178 . 187) (#("A" 0 1 (face font-lock-type-face fontified t)) . -178) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 179) nil (25356 55532 56280 31000) 0 nil])
([nil nil ((187 . 188)) nil (25356 55532 56267 692000) 0 nil])
([nil nil ((#("atomic::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -218) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) 226 (t 25356 55532 97789 448000)) nil (25356 55554 704503 942000) 0 nil])
([nil nil ((#("sync::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -212) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) 218) nil (25356 55554 704495 902000) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -207) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) 212) nil (25356 55554 704487 206000) 0 nil])
([nil nil ((219 . 222)) nil (25356 55554 704479 821000) 0 nil])
([nil nil ((222 . 226)) nil (25356 55554 704478 798000) 0 nil])
([nil nil ((nil fontified t 221 . 228) (nil face font-lock-type-face 221 . 228) (#("AtomicU" 0 7 (face font-lock-type-face fontified t)) . -219) (226 . 235) 226) nil (25356 55554 704477 374000) 0 nil])
([nil nil ((nil fontified nil 221 . 230) (#("AtomicU64" 0 9 (fontified nil)) . -219) (228 . 239) 228) nil (25356 55554 704475 29000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -226) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -227) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("z" 0 1 (face font-lock-type-face fontified t)) . -228) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -229) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 230) nil (25356 55554 704469 313000) 0 nil])
([nil nil ((226 . 233)) nil (25356 55554 703446 593000) 0 nil])
([nil nil ((234 . 235) (233 . 235)) nil (25356 55554 703444 585000) 0 nil])
([nil nil ((236 . 237)) nil (25356 55554 703438 435000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -196) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("r" 0 1 (fontified t)) . -197) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("e" 0 1 (fontified t)) . -198) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -199) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 200 (t 25356 55554 704457 128000)) nil (25356 55573 103559 108000) 0 nil])
([nil nil ((#("time" 0 4 (face font-lock-variable-name-face fontified t)) . -197) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) 201 (t 25356 55573 144457 956000)) nil (25356 55585 88974 918000) 0 nil])
([nil nil ((197 . 204)) nil (25356 55585 88960 445000) 0 nil])
([nil nil ((317 . 322) (t 25356 55585 101125 158000)) nil (25356 55658 747067 191000) 0 nil])
([nil nil ((322 . 323)) nil (25356 55658 747066 46000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -322) (undo-tree-id165 . -1) 323) nil (25356 55658 747064 916000) 0 nil])
([nil nil ((322 . 328)) nil (25356 55658 747062 675000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -327) (undo-tree-id164 . -1) 328) nil (25356 55658 747061 612000) 0 nil])
([nil nil ((327 . 330)) nil (25356 55658 747059 107000) 0 nil])
([nil nil ((330 . 343)) nil (25356 55658 747058 148000) 0 nil])
([nil nil ((340 . 350) (#("chu" 0 3 (fontified nil)) . 340) (340 . 343) (#("chunks_mut" 0 10 (fontified nil)) . -340) (340 . 350) (#("chu" 0 3 (fontified t)) . -340) (undo-tree-id162 . -3) (undo-tree-id163 . -3) 343) nil (25356 55658 747055 965000) 0 nil])
([nil nil ((351 . 352) (350 . 352)) nil (25356 55658 747045 442000) 0 nil])
([nil nil ((353 . 356)) nil (25356 55658 747043 322000) 0 nil])
([nil nil ((356 . 357) (357 . 361) (#("	" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 356) (356 . 357) (355 . 357)) nil (25356 55658 747037 882000) 0 nil])
([nil nil ((#("    for sample in data.iter_mut() {
        *sample = Sample::from(&0.0);
    }" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 17 (face font-lock-keyword-face fontified t) 17 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-2-face) fontified t) 35 54 (fontified t) 54 60 (face font-lock-type-face fontified t) 60 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-3-face) fontified t) 67 68 (face rust-ampersand-face fontified t) 68 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-3-face) fontified t) 72 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-2-face) fontified t)) . 364) (undo-tree-id166 . -79) (undo-tree-id167 . -7) (undo-tree-id168 . -79) (undo-tree-id169 . -79) (t 25356 55658 787795 129000)) nil (25356 55667 752332 639000) 0 nil])
([nil nil ((nil rear-nonsticky nil 434 . 435) (nil fontified nil 434 . 435) (nil fontified nil 428 . 434) (nil fontified nil 427 . 428) (nil fontified nil 424 . 427) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 416 . 422) (nil fontified nil 410 . 416) (nil fontified nil 391 . 410) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 373 . 387) (nil fontified nil 371 . 373) (nil fontified nil 370 . 371) (nil fontified nil 364 . 370) (nil fontified nil 363 . 364) (nil fontified nil 360 . 363) (nil fontified nil 356 . 360) (356 . 435)) nil (25356 55667 752320 307000) 0 nil])
([nil nil ((356 . 357) (#("    " 0 4 (fontified t)) . 356) 361) nil (25356 55667 752314 756000) 0 nil])
([nil nil ((397 . 401) 398) nil (25356 55667 752312 175000) 0 nil])
([nil nil ((431 . 432) (#("    " 0 4 (fontified t)) . 431) 437) nil (25356 55667 752306 419000) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . -371) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) 375 (t 25356 55667 794462 200000)) nil (25356 55686 189213 628000) 0 nil])
([nil nil ((371 . 374)) nil (25356 55686 189208 168000) 0 nil])
([nil nil ((371 . 376) (#("fra" 0 3 (fontified nil)) . 371) (371 . 374) (#("frame" 0 5 (fontified t)) . -371) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (371 . 376) (#("fra" 0 3 (fontified t)) . -371) (undo-tree-id172 . -3) (undo-tree-id173 . -3) 374) nil (25356 55686 189202 895000) 0 nil])
([nil nil ((238 . 246) (t 25356 55686 207796 358000)) nil (25364 39391 641182 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 412 . 413) (nil fontified nil 241 . 413) (241 . 413)) nil (25364 39391 641181 244000) 0 nil])
([nil nil ((#("   pub id: Option<usize>," 0 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 9 (fontified t face font-lock-variable-name-face) 9 11 (fontified t) 11 17 (fontified t face font-lock-type-face) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 23 (fontified t face font-lock-type-face) 23 24 (fontified t face (rainbow-delimiters-depth-2-face)) 24 25 (fontified t)) . 282) (undo-tree-id2 . -25)) nil (25364 39391 641179 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 282) (undo-tree-id1 . -1)) nil (25364 39391 641177 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -285) 282) nil (25364 39391 641754 854000) 0 nil])
([nil nil ((#("pub date: DateTime<Utc>," 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 8 (fontified t face font-lock-variable-name-face) 8 10 (fontified t) 10 18 (fontified t face font-lock-type-face) 18 19 (fontified t face (rainbow-delimiters-depth-2-face)) 19 22 (fontified t face font-lock-type-face) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 24 (fontified t)) . 307) (undo-tree-id4 . -24)) nil (25364 39397 930898 893000) 0 nil] [nil nil ((#("pub samples: Vec<f32>," 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 11 (fontified t face font-lock-variable-name-face) 11 13 (fontified t) 13 16 (fontified t face font-lock-type-face) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 20 (fontified t face font-lock-type-face) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (fontified t)) . 336) (undo-tree-id0 . -22)) ((336 . 358)) (25364 39391 641170 957000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 307) (undo-tree-id3 . -1)) nil (25364 39397 930895 673000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -307)) nil (25364 39397 930884 498000) 0 nil])
([nil nil ((360 . 363) (t 25364 39397 974307 600000)) nil (25364 39465 126227 567000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -362) (undo-tree-id89 . -1) 363) nil (25364 39465 126226 260000) 0 nil])
([nil nil ((362 . 369)) nil (25364 39465 126224 702000) 0 nil])
([nil nil ((365 . 374) (#("Audi" 0 4 (fontified nil)) . 365) (365 . 369) (#("AudioClip" 0 9 (fontified nil)) . -365) (365 . 374) (#("Audi" 0 4 (fontified t face font-lock-type-face)) . -365) (undo-tree-id88 . -4) 369) nil (25364 39465 126223 540000) 0 nil])
([nil nil ((374 . 377)) nil (25364 39465 126221 164000) 0 nil])
([nil nil ((377 . 381) (#("    " 0 4 (fontified nil face (rainbow-delimiters-depth-1-face))) . 377) (377 . 381) (376 . 378)) nil (25364 39465 126220 174000) 0 nil])
([nil nil ((381 . 384)) nil (25364 39465 126218 847000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -381) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -382) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . -383) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 384) nil (25364 39465 126216 810000) 0 nil])
([nil nil ((381 . 385)) nil (25364 39465 126202 96000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -384) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 385) nil (25364 39465 126200 948000) 0 nil])
([nil nil ((384 . 388)) nil (25364 39465 126196 748000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -381) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("u" 0 1 (fontified t)) . -382) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("b" 0 1 (fontified t face font-lock-keyword-face)) . -383) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -384) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("f" 0 1 (fontified t)) . -385) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -386) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -387) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 388) nil (25364 39465 126192 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1095 . 1096) (nil fontified nil 381 . 1096) (381 . 1096)) nil (25364 39465 126151 841000) 0 nil])
([nil nil ((#(" id: self.id," 0 1 (fontified t) 1 3 (fontified t face font-lock-variable-name-face) 3 5 (fontified t) 5 9 (fontified t face font-lock-keyword-face) 9 13 (fontified t)) . 739) (undo-tree-id10 . -1) (undo-tree-id11 . -12) (undo-tree-id12 . -13)) nil (25364 39465 126150 452000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 739) (undo-tree-id9 . -1)) nil (25364 39465 126147 429000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . -740) 739) nil (25364 39465 126145 838000) 0 nil])
([nil nil ((#("date: self.date," 0 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 16 (fontified t)) . 777) (undo-tree-id6 . -2) (undo-tree-id7 . -15) (undo-tree-id8 . -16)) nil (25364 39465 126144 473000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 777) (undo-tree-id5 . -1)) nil (25364 39465 126140 433000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -777)) nil (25364 39465 126131 367000) 0 nil])
([nil nil ((154 . 157) (t 25364 39465 167645 60000)) nil (25364 39496 108260 937000) 0 nil])
([nil nil ((nil rear-nonsticky nil 569 . 570) (nil fontified nil 155 . 570) (155 . 570)) nil (25364 39496 108254 674000) 0 nil])
([nil nil ((607 . 610) (t 25364 39496 120980 293000)) nil (25364 39594 190909 880000) 0 nil])
([nil nil ((571 . 572)) nil (25364 39594 190908 266000) 0 nil])
([nil nil ((nil rear-nonsticky nil 601 . 602) (nil fontified nil 572 . 602) (572 . 602)) nil (25364 39594 190903 606000) 0 nil])
([nil nil ((1770 . 1775) (t 25364 39594 234319 649000)) nil (25364 39608 335797 278000) 0 nil])
([nil nil ((1775 . 1780)) nil (25364 39608 335796 152000) 0 nil])
([nil nil ((1775 . 1785) (#("envlo" 0 5 (fontified nil)) . 1775) (1775 . 1780) (#("env_logger" 0 10 (fontified nil)) . -1775) (1775 . 1785) (#("envlo" 0 5 (fontified t)) . -1775) (undo-tree-id95 . -5) (undo-tree-id96 . -4) (undo-tree-id97 . -5) (undo-tree-id98 . -5) 1780) nil (25364 39608 335794 652000) 0 nil])
([nil nil ((1785 . 1790)) nil (25364 39608 335789 529000) 0 nil])
([nil nil ((1787 . 1791) (#("ini" 0 3 (fontified nil)) . 1787) (1787 . 1790) (#("init" 0 4 (fontified nil)) . -1787) (1787 . 1791) (#("ini" 0 3 (fontified t)) . -1787) (undo-tree-id90 . -3) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -3) (undo-tree-id94 . -3) 1790) nil (25364 39608 335787 392000) 0 nil])
([nil nil ((1791 . 1793)) nil (25364 39608 335775 153000) 0 nil])
([nil nil ((1793 . 1794)) nil (25364 39608 335770 910000) 0 nil])
([nil nil ((1794 . 1795) (t 25364 39608 377653 851000)) nil (25364 39610 4252 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1794) (undo-tree-id99 . -1) 1795) nil (25364 39610 4248 633000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -833) 892 (t 25364 39610 17653 952000)) nil (25364 39650 965794 681000) 0 nil])
([nil nil ((1492 . 1496) (#("    " 0 4 (fontified nil)) . 1491) (undo-tree-id100 . -4) (1490 . 1496) (t 25364 39651 7656 469000)) nil (25364 39654 578415 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6710 . 6711) (nil fontified nil 1496 . 6711) (1496 . 6711) (t 25364 39654 594323 356000)) nil (25364 39747 874171 81000) 0 nil])
([nil nil ((3303 . 3307) 3329) nil (25364 39747 874168 795000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1496) 1520) nil (25364 39747 874163 927000) 0 nil])
([nil nil ((#("track\"))" 0 6 (fontified t face font-lock-string-face) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-3-face))) . -2808) (undo-tree-id120 . -8) (undo-tree-id121 . 1) (undo-tree-id122 . -8) 2816 (t 25364 39747 887662 416000)) nil (25364 39768 751410 800000) 0 nil])
([nil nil ((#("default " 0 8 (fontified t face font-lock-string-face)) . -2800) (undo-tree-id119 . -8) 2808) nil (25364 39768 751259 996000) 0 nil])
([nil nil ((#("No " 0 3 (fontified t face font-lock-string-face)) . -2797) (undo-tree-id118 . -3) 2800) nil (25364 39768 751258 148000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (fontified t face font-lock-preprocessor-face) 5 6 (fontified t face (rainbow-delimiters-depth-4-face)) 6 7 (fontified t face font-lock-string-face)) . -2790) (undo-tree-id116 . -7) (undo-tree-id117 . -4) 2797) nil (25364 39768 751256 203000) 0 nil])
([nil nil ((#("else(|| " 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 8 (fontified t)) . -2782) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) 2790) nil (25364 39768 751253 566000) 0 nil])
([nil nil ((#("or_" 0 3 (fontified t)) . -2779) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) 2782) nil (25364 39768 762591 742000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2769) (undo-tree-id128 . -1) (#(" " 0 1 (fontified t)) . -2770) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#(" " 0 1 (fontified t)) . -2771) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -2772) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -2773) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -2774) (undo-tree-id135 . -1) (#("." 0 1 (fontified t)) . -2775) (undo-tree-id136 . -1) (#("o" 0 1 (fontified t)) . -2776) (undo-tree-id137 . -1) (#("k" 0 1 (fontified t)) . -2777) (undo-tree-id138 . -1) (#("_" 0 1 (fontified t)) . -2778) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 2779) nil (25364 39775 467770 69000) 0 nil] [nil nil ((#("ok_" 0 3 (fontified t)) . -2776) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) 2779) ((2776 . 2779)) (25364 39768 752006 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2762) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -2763) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -2764) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -2765) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -2766) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t)) . -2767) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -2768) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 2769) nil (25364 39783 966537 301000) 0 nil] [nil nil ((#("track()
      " 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t) 8 14 (fontified t)) . -2755) (undo-tree-id123 . -14) (undo-tree-id124 . -8) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -14) 2769) ((2755 . 2769)) (25364 39775 467448 853000) 0 nil])
([nil nil ((#("track()
            ." 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t) 8 21 (fontified t)) . -2755) (undo-tree-id101 . -21) (undo-tree-id102 . -8) (undo-tree-id103 . -21) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -21) 2776) ((2755 . 2776)) (25364 39768 751238 842000) 0 nil])
([nil nil ((#(".default_track()?;" 0 9 (fontified t) 9 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-3-face)) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 17 (fontified t face rust-question-mark) 17 18 (fontified t)) . 2746) (undo-tree-id159 . -16) (undo-tree-id160 . -17) (undo-tree-id161 . -18) (t 25364 39779 234331 6000)) nil (25364 39813 72796 494000) 0 nil] [nil nil ((#("format
            " 0 7 (fontified t) 7 19 (fontified t)) . -2727) (undo-tree-id150 . -19) (undo-tree-id151 . -19) (undo-tree-id152 . -7) (undo-tree-id153 . -6) (undo-tree-id154 . -6) 2746 (t 25364 39779 234331 6000)) ((2727 . 2746)) (25364 39783 966184 566000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 2750 . 2751) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2742 . 2747) (nil fontified nil 2733 . 2742) (2733 . 2751)) nil (25364 39817 352937 341000) 0 nil] [nil nil ((nil rear-nonsticky nil 2745 . 2746) (nil fontified nil 2745 . 2746) (nil fontified nil 2733 . 2745) (2733 . 2746)) ((#("            
" 0 12 (fontified nil) 12 13 (fontified nil rear-nonsticky nil)) . 2733) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -1) (undo-tree-id165 . -13) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (nil rear-nonsticky t 2745 . 2746)) (25364 39813 72386 61000) 0 nil] [nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 2734) (undo-tree-id155 . -12) (undo-tree-id156 . -12) (undo-tree-id157 . -13) (undo-tree-id158 . -13)) ((2734 . 2747)) (25364 39806 2071 914000) 0 nil])
nil
([nil nil ((#("count\"))" 0 6 (fontified t face font-lock-string-face) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-3-face))) . -3225) (undo-tree-id199 . -7) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . 1) (undo-tree-id203 . -8) 3233 (t 25364 39817 394333 348000)) nil (25364 39846 920956 958000) 0 nil])
nil
nil
([nil nil ((#("channel " 0 8 (fontified t face font-lock-string-face)) . -3217) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) 3225) nil (25364 39846 920951 286000) 0 nil])
([nil nil ((#("Unknown " 0 8 (fontified t face font-lock-string-face)) . -3209) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (undo-tree-id195 . -8) 3217) nil (25364 39846 920947 643000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (fontified t face font-lock-preprocessor-face) 5 6 (fontified t face (rainbow-delimiters-depth-4-face)) 6 7 (fontified t face font-lock-string-face)) . -3202) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -4) (undo-tree-id192 . -7) 3209) nil (25364 39846 920943 757000) 0 nil])
([nil nil ((#("else(|| " 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 8 (fontified t)) . -3194) (undo-tree-id184 . -8) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) 3202) nil (25364 39846 920939 112000) 0 nil])
([nil nil ((#("or_" 0 3 (fontified t)) . -3191) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) 3194) nil (25364 39846 920933 408000) 0 nil])
([nil nil ((#("ok_" 0 3 (fontified t)) . -3188) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) 3191) nil (25364 39846 921201 115000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3187) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 3188) nil (25364 39878 672428 871000) 0 nil] [nil nil ((#("channels
            ." 0 9 (fontified t) 9 22 (fontified t)) . -3166) (undo-tree-id168 . -22) (undo-tree-id169 . -22) (undo-tree-id170 . -22) (undo-tree-id171 . -22) (undo-tree-id172 . -21) (undo-tree-id173 . -22) 3188) ((3166 . 3188)) (25364 39846 920917 609000) 0 nil])
([nil nil ((#("            ?;" 0 12 (fontified t) 12 13 (fontified t face rust-question-mark) 13 14 (fontified t)) . 3175) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -14) (undo-tree-id220 . -14)) nil (25364 39878 672424 627000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 3175) (undo-tree-id214 . -1) (undo-tree-id215 . -1)) nil (25364 39878 672420 802000) 0 nil])
([nil nil ((3174 . 3176)) nil (25364 39878 672418 512000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3186) 3216) nil (25364 39878 672417 604000) 0 nil])
([nil nil ((#("id: None," 0 2 (fontified t face font-lock-variable-name-face) 2 4 (fontified t) 4 8 (fontified t face font-lock-type-face) 8 9 (fontified t)) . 3225) (undo-tree-id209 . -9) (undo-tree-id210 . -9) (undo-tree-id211 . -8) (undo-tree-id212 . -9) (undo-tree-id213 . -9)) nil (25364 39878 672416 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3225) (undo-tree-id208 . -1)) nil (25364 39878 672412 124000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3225)) nil (25364 39878 672410 226000) 0 nil])
([nil nil ((#("date: DateTime::<Utc>::from(creation_time)," 0 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 14 (fontified t face font-lock-type-face) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 20 (fontified t face font-lock-type-face) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-4-face)) 42 43 (fontified t)) . 3243) (undo-tree-id205 . -42) (undo-tree-id206 . -2) (undo-tree-id207 . -43)) nil (25364 39878 672408 952000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3243) (undo-tree-id204 . -1)) nil (25364 39878 672404 509000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3243)) nil (25364 39878 672394 948000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -3175) (3175 . 3176) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -3175) (3175 . 3176) (3174 . 3176) (t 25364 39878 714337 113000)) nil (25364 39886 340598 293000) 0 nil])
([nil nil ((3176 . 3177) (t 25364 39886 384337 584000)) nil (25364 39909 17082 660000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3174) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3175) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . 1) (undo-tree-id234 . -1) (#("\\" 0 1 (fontified t)) . -3176) (undo-tree-id235 . -1) 3177) nil (25364 39909 17080 641000) 0 nil])
([nil nil ((3174 . 3175)) nil (25364 39909 17073 151000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3174) (undo-tree-id228 . -1) 3175) nil (25364 39909 17071 907000) 0 nil])
([nil nil ((3174 . 3177)) nil (25364 39909 17069 741000) 0 nil])
([nil nil ((3175 . 3181) (#("un" 0 2 (fontified t)) . -3175) (undo-tree-id227 . -2) 3177) nil (25364 39909 17068 302000) 0 nil])
([nil nil ((3175 . 3181) (#("unwrap" 0 6 (fontified nil)) . 3175) (3175 . 3181) (#("unwrap" 0 6 (fontified t)) . -3175) (undo-tree-id226 . -6) 3181) nil (25364 39909 17063 791000) 0 nil])
([nil nil ((3181 . 3183)) nil (25364 39909 17050 770000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -3183) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 3184 (t 25364 39909 24338 974000)) nil (25364 39911 962053 109000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3130) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -3131) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -3132) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#(" " 0 1 (fontified t)) . -3133) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -3134) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -3135) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t)) . -3136) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -3137) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -3138) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 3139 (t 25364 39912 4339 157000)) nil (25364 39922 401988 607000) 0 nil])
([nil nil ((3127 . 3132) (#("   " 0 3 (fontified t)) . 3127) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) 3130) nil (25364 39922 401967 940000) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t face (rainbow-delimiters-depth-3-face))) . -3168) (undo-tree-id243 . -8) (undo-tree-id244 . -7) (undo-tree-id245 . 1) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . 1) (undo-tree-id249 . -8) (undo-tree-id250 . 2) (undo-tree-id251 . -7) 3176) nil (25364 39922 401364 601000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3167) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 3168) nil (25364 39922 401356 400000) 0 nil])
([nil nil ((3167 . 3168)) nil (25364 39922 401343 899000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -3167) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 3168 (t 25364 39922 414339 796000)) nil (25364 40001 736522 319000) 0 nil])
([nil nil ((3167 . 3170)) nil (25364 40001 736518 758000) 0 nil])
([nil nil ((3168 . 3173) (#("ok" 0 2 (fontified nil)) . 3168) (3168 . 3170) (#("ok_or" 0 5 (fontified nil)) . -3168) (3168 . 3173) (#("ok" 0 2 (fontified t)) . -3168) (undo-tree-id325 . -2) 3170) nil (25364 40001 736516 642000) 0 nil])
([nil nil ((3173 . 3175)) nil (25364 40001 736512 919000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3170) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("o" 0 1 (fontified t)) . -3171) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("r" 0 1 (fontified t)) . -3172) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3173) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -3174) (undo-tree-id322 . -1) (undo-tree-id323 . 1) (undo-tree-id324 . -1) 3175) nil (25364 40001 736507 819000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3168) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("k" 0 1 (fontified t)) . -3169) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 3170) nil (25364 40001 735075 400000) 0 nil])
([nil nil ((3168 . 3171)) nil (25364 40001 735070 749000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3167) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("o" 0 1 (fontified t)) . -3168) (undo-tree-id307 . -1) (#("k" 0 1 (fontified t)) . -3169) (undo-tree-id308 . -1) (#("j" 0 1 (fontified t)) . -3170) (undo-tree-id309 . -1) 3171) nil (25364 40001 735068 834000) 0 nil])
([nil nil ((3167 . 3170)) nil (25364 40001 735062 755000) 0 nil])
([nil nil ((3168 . 3178) (#("ok" 0 2 (fontified nil)) . 3168) (3168 . 3170) (#("ok_or_else" 0 10 (fontified t)) . -3168) (undo-tree-id303 . -10) (3168 . 3178) (#("ok" 0 2 (fontified t)) . -3168) (undo-tree-id304 . -2) 3170) nil (25364 40001 735061 53000) 0 nil])
([nil nil ((3178 . 3180)) nil (25364 40001 735057 271000) 0 nil])
([nil nil ((3179 . 3181) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -3179) (3179 . 3180)) nil (25364 40001 735056 229000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -3179) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 3180)) nil (25364 40001 735054 505000) 0 nil])
([nil nil ((3179 . 3184)) nil (25364 40001 735051 801000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3182) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("r" 0 1 (fontified t)) . -3183) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 3184) nil (25364 40001 735050 323000) 0 nil])
([nil nil ((3182 . 3185)) nil (25364 40001 735045 880000) 0 nil])
([nil nil ((3182 . 3189) (#("Err" 0 3 (fontified nil)) . 3182) (3182 . 3185) (#("Err(…)" 0 6 (fontified nil)) . -3182) (3182 . 3188) (#("Err" 0 3 (fontified t face font-lock-type-face)) . -3182) (undo-tree-id295 . -3) (undo-tree-id296 . -3) 3185) nil (25364 40001 735044 80000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -3187) (undo-tree-id292 . -1) (undo-tree-id293 . 1) (undo-tree-id294 . -1) 3188) nil (25364 40001 735039 887000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -3186) (undo-tree-id291 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . 3187)) nil (25364 40001 735035 708000) 0 nil])
([nil nil ((3186 . 3188) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -3186) (3186 . 3187)) nil (25364 40001 735033 497000) 0 nil])
([nil nil ((3187 . 3188)) nil (25364 40001 735032 185000) 0 nil])
([nil nil ((3188 . 3192)) nil (25364 40001 735031 311000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3191) (undo-tree-id290 . -1) 3192) nil (25364 40001 735030 141000) 0 nil])
([nil nil ((3191 . 3192)) nil (25364 40001 735028 63000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -3189) (undo-tree-id287 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3190) (undo-tree-id288 . -1) (#("=" 0 1 (fontified t face font-lock-string-face)) . -3191) (undo-tree-id289 . -1) 3192) nil (25364 40001 735026 347000) 0 nil])
([nil nil ((3189 . 3194)) nil (25364 40001 735021 718000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3192) (undo-tree-id285 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -3193) (undo-tree-id286 . -1) 3194) nil (25364 40001 735020 238000) 0 nil])
([nil nil ((3192 . 3205)) nil (25364 40001 735016 870000) 0 nil])
([nil nil ((#("channel" 0 7 (fontified t face font-lock-string-face)) . -3198) (undo-tree-id284 . -7) 3205) nil (25364 40001 735015 519000) 0 nil])
([nil nil ((3198 . 3201)) nil (25364 40001 735013 187000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3199) (undo-tree-id282 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3200) (undo-tree-id283 . -1) 3201) nil (25364 40001 735010 992000) 0 nil])
([nil nil ((3199 . 3200)) nil (25364 40001 735002 181000) 0 nil])
([nil nil ((3200 . 3203)) nil (25364 40001 734997 250000) 0 nil])
([nil nil ((3204 . 3205) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -3204) (3204 . 3205) (t 25364 40001 791011 335000)) nil (25364 40013 257240 594000) 0 nil])
([nil nil ((#("rate\")" 0 5 (fontified t face font-lock-string-face) 5 6 (fontified t face (rainbow-delimiters-depth-5-face))) . -3438) (undo-tree-id342 . -6) (undo-tree-id343 . 1) (undo-tree-id344 . -6) 3444 (t 25364 40013 271012 40000)) nil (25364 40047 757496 596000) 0 nil])
([nil nil ((#("sample " 0 7 (fontified t face font-lock-string-face)) . -3431) (undo-tree-id341 . -7) 3438) nil (25364 40047 757493 37000) 0 nil])
([nil nil ((#("Unknown " 0 8 (fontified t face font-lock-string-face)) . -3423) (undo-tree-id340 . -8) 3431) nil (25364 40047 757491 129000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (fontified t face font-lock-preprocessor-face) 5 6 (fontified t face (rainbow-delimiters-depth-5-face)) 6 7 (fontified t face font-lock-string-face)) . -3416) (undo-tree-id339 . -7) 3423) nil (25364 40047 757489 294000) 0 nil])
([nil nil ((3416 . 3419)) nil (25364 40047 757487 664000) 0 nil])
([nil nil ((3416 . 3423) (#("Err" 0 3 (fontified nil)) . 3416) (3416 . 3419) (#("Err(…)" 0 6 (fontified nil)) . -3416) (3416 . 3422) (#("Err" 0 3 (fontified t face font-lock-type-face)) . -3416) (undo-tree-id338 . -3) 3419) nil (25364 40047 757486 223000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . -3421) (undo-tree-id335 . -1) (undo-tree-id336 . 1) (undo-tree-id337 . -1) 3422) nil (25364 40047 757483 7000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -3420) (undo-tree-id334 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . 3421)) nil (25364 40047 757479 363000) 0 nil])
([nil nil ((3420 . 3421) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -3420) (3420 . 3421)) nil (25364 40047 757477 383000) 0 nil])
([nil nil ((3421 . 3422) (3420 . 3422) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -3420) (3420 . 3421)) nil (25364 40047 757475 885000) 0 nil])
([nil nil ((3422 . 3423)) nil (25364 40047 757474 472000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face font-lock-string-face)) . -3421) (undo-tree-id332 . -1) (#("=" 0 1 (fontified t face font-lock-string-face)) . -3422) (undo-tree-id333 . -1) 3423) nil (25364 40047 757473 145000) 0 nil])
([nil nil ((3421 . 3433)) nil (25364 40047 757470 458000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -3432) (undo-tree-id331 . -1) 3433) nil (25364 40047 757469 346000) 0 nil])
([nil nil ((3432 . 3441)) nil (25364 40047 757467 238000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3438) (undo-tree-id328 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3439) (undo-tree-id329 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3440) (undo-tree-id330 . -1) 3441) nil (25364 40047 757464 639000) 0 nil])
([nil nil ((3438 . 3440)) nil (25364 40047 757453 684000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -3443) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 3444 (t 25364 40047 771014 158000)) nil (25364 40054 166211 469000) 0 nil])
([nil nil ((3443 . 3444) (t 25364 40054 181014 552000)) nil (25364 40058 796225 223000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -3443) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 3444 (t 25364 40058 811014 835000)) nil (25364 40079 796539 710000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -2749) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 2750 (t 25364 40079 811016 125000)) nil (25364 40140 990290 998000) 0 nil])
([nil nil ((2749 . 2752)) nil (25364 40140 990287 802000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2750) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("n" 0 1 (fontified t)) . -2751) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 2752) nil (25364 40140 990286 466000) 0 nil])
([nil nil ((2750 . 2753)) nil (25364 40140 990281 522000) 0 nil])
([nil nil ((2750 . 2756) (#("exp" 0 3 (fontified nil)) . 2750) (2750 . 2753) (#("expect" 0 6 (fontified nil)) . -2750) (2750 . 2756) (#("exp" 0 3 (fontified t)) . -2750) (undo-tree-id360 . -3) (undo-tree-id361 . -1) (undo-tree-id362 . -2) (undo-tree-id363 . -3) 2753) nil (25364 40140 990279 995000) 0 nil])
([nil nil ((2758 . 2760) (2757 . 2759) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -2757) (2757 . 2758) (2756 . 2758)) nil (25364 40140 990275 387000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . -2758) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2759) (undo-tree-id358 . -1) (undo-tree-id359 . -1) 2760) nil (25364 40140 990273 243000) 0 nil])
([nil nil ((2758 . 2760)) nil (25364 40140 990268 884000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -2758) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2759) (undo-tree-id354 . -1) (undo-tree-id355 . -1) 2760) nil (25364 40140 990266 595000) 0 nil])
([nil nil ((2758 . 2774)) nil (25364 40140 990254 883000) 0 nil])
([nil nil ((571 . 573) (t 25364 40141 4353 214000)) nil (25364 40178 417888 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 617 . 618) (nil fontified nil 571 . 618) (571 . 618)) nil (25364 40178 417886 778000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -617) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 618) nil (25364 40178 417881 656000) 0 nil])
([nil nil ((#("   pub fn import(name: String, path: String) -> Result<AudioClip> {
        // Create a media source. Note that the MediaSource trait is automatically implemented for File,
        // among other types.
        let file = Box::new(File::open(Path::new(&path))?);

        let creation_time = file.metadata()?.created()?;

        // Create the media source stream using the boxed media source from above.
        let mss = MediaSourceStream::new(file, Default::default());

        // Create a hint to help the format registry guess what format reader is appropriate. In this
        // example we'll leave it empty.
        let hint = Hint::new();

        // Use the default options when reading and decoding.
        let format_opts: FormatOptions = Default::default();
        let metadata_opts: MetadataOptions = Default::default();
        let decoder_opts: DecoderOptions = Default::default();

        // Probe the media source stream for a format.
        let probed =
            symphonia::default::get_probe().format(&hint, mss, &format_opts, &metadata_opts)?;

        // Get the format reader yielded by the probe operation.
        let mut format = probed.format;

        // Get the default track.
        let track = format.default_track().expect(\"No default track\");
            

        // Create a decoder for the track.
        let mut decoder =
            symphonia::default::get_codecs().make(&track.codec_params, &decoder_opts)?;

        // Store the track identifier, we'll use it to filter packets.
        let track_id = track.id;

        let mut sample_count = 0;
        let mut sample_buf = None;
        let channels = track
	    .codec_params
            .channels.ok_or_else(|| Err(\"No default track\"));

        let mut clip = AudioClip {
            name,
            samples: Vec::new(),
            sample_rate: track
                .codec_params
                .sample_rate
                .ok_or_else(|| Err(\"Unknown sample rate\")),
        };

        loop {
            // Get the next packet from the format reader.
            let packet = match format.next_packet() {
                Ok(packet_ok) => packet_ok,
                Err(Error::IoError(ref packet_err))
                    if packet_err.kind() == std::io::ErrorKind::UnexpectedEof =>
                {
                    break;
                }
                Err(packet_err) => {
                    return Err(packet_err.into());
                }
            };

            // If the packet does not belong to the selected track, skip it.
            if packet.track_id() != track_id {
                continue;
            }

            // Decode the packet into audio samples, ignoring any decode errors.
            match decoder.decode(&packet) {
                Ok(audio_buf) => {
                    // The decoded audio samples may now be accessed via the audio buffer if per-channel
                    // slices of samples in their native decoded format is desired. Use-cases where
                    // the samples need to be accessed in an interleaved order or converted into
                    // another sample format, or a byte buffer is required, are covered by copying the
                    // audio buffer into a sample buffer or raw sample buffer, respectively. In the
                    // example below, we will copy the audio buffer into a sample buffer in an
                    // interleaved order while also converting to a f32 sample format.

                    // If this is the *first* decoded packet, create a sample buffer matching the
                    // decoded audio buffer format.
                    if sample_buf.is_none() {
                        // Get the audio buffer specification.
                        let spec = *audio_buf.spec();

                        // Get the capacity of the decoded buffer. Note: This is capacity, not length!
                        let duration = audio_buf.capacity() as u64;

                        // Create the f32 sample buffer.
                        sample_buf = Some(SampleBuffer::<f32>::new(duration, spec));
                    }

                    // Copy the decoded audio buffer into the sample buffer in an interleaved format.
                    if let Some(buf) = &mut sample_buf {
                        buf.copy_interleaved_ref(audio_buf);
                        let mono: Vec<f32> = buf
                            .samples()
                            .iter()
                            .step_by(channels.count())
                            .copied()
                            .collect();
                        clip.samples.extend_from_slice(&mono);

                        // The samples may now be access via the `samples()` function.
                        sample_count += buf.samples().len();
                        log::info!(\"\\rDecoded {} samples\", sample_count);
                    }
                }
                Err(Error::DecodeError(_)) => (),
                Err(_) => break,
            }
        }

        Ok(clip)
    }" 0 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 21 (fontified t face font-lock-variable-name-face) 21 23 (fontified t) 23 29 (fontified t face font-lock-type-face) 29 31 (fontified t) 31 35 (fontified t face font-lock-variable-name-face) 35 37 (fontified t) 37 43 (fontified t face font-lock-type-face) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 46 (fontified t) 46 47 (fontified t syntax-table (1)) 47 48 (fontified t) 48 54 (fontified t face font-lock-type-face) 54 55 (fontified t face (rainbow-delimiters-depth-2-face)) 55 64 (fontified t face font-lock-type-face) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-2-face)) 67 68 (fontified t) 68 76 (fontified t) 76 79 (fontified t face font-lock-comment-delimiter-face) 79 173 (fontified t face font-lock-comment-face) 173 181 (fontified t) 181 184 (fontified t face font-lock-comment-delimiter-face) 184 203 (fontified t face font-lock-comment-face) 203 211 (fontified t) 211 214 (fontified t face font-lock-keyword-face) 214 215 (fontified t) 215 219 (fontified t face font-lock-variable-name-face) 219 222 (fontified t) 222 225 (fontified t face font-lock-type-face) 225 230 (fontified t) 230 231 (fontified t face (rainbow-delimiters-depth-3-face)) 231 235 (fontified t face font-lock-type-face) 235 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-4-face)) 242 246 (fontified t face font-lock-type-face) 246 251 (fontified t) 251 252 (fontified t face (rainbow-delimiters-depth-5-face)) 252 253 (fontified t face rust-ampersand-face) 253 257 (fontified t) 257 258 (fontified t face (rainbow-delimiters-depth-5-face)) 258 259 (fontified t face (rainbow-delimiters-depth-4-face)) 259 260 (fontified t face rust-question-mark) 260 261 (fontified t face (rainbow-delimiters-depth-3-face)) 261 272 (fontified t) 272 275 (fontified t face font-lock-keyword-face) 275 276 (fontified t) 276 289 (fontified t face font-lock-variable-name-face) 289 305 (fontified t) 305 306 (fontified t face (rainbow-delimiters-depth-3-face)) 306 307 (fontified t face (rainbow-delimiters-depth-3-face)) 307 308 (fontified t face rust-question-mark) 308 316 (fontified t) 316 317 (fontified t face (rainbow-delimiters-depth-3-face)) 317 318 (fontified t face (rainbow-delimiters-depth-3-face)) 318 319 (fontified t face rust-question-mark) 319 330 (fontified t) 330 333 (fontified t face font-lock-comment-delimiter-face) 333 405 (fontified t face font-lock-comment-face) 405 413 (fontified t) 413 416 (fontified t face font-lock-keyword-face) 416 417 (fontified t) 417 420 (fontified t face font-lock-variable-name-face) 420 423 (fontified t) 423 440 (fontified t face font-lock-type-face) 440 445 (fontified t) 445 446 (fontified t face (rainbow-delimiters-depth-3-face)) 446 452 (fontified t) 452 459 (fontified t face font-lock-type-face) 459 468 (fontified t) 468 469 (fontified t face (rainbow-delimiters-depth-4-face)) 469 470 (fontified t face (rainbow-delimiters-depth-4-face)) 470 471 (fontified t face (rainbow-delimiters-depth-3-face)) 471 482 (fontified t) 482 485 (fontified t face font-lock-comment-delimiter-face) 485 576 (fontified t face font-lock-comment-face) 576 577 (fontified t) 577 579 (fontified t) 579 584 (fontified t) 584 587 (face font-lock-comment-delimiter-face fontified t) 587 617 (face font-lock-comment-face fontified t) 617 625 (fontified t) 625 628 (fontified t face font-lock-keyword-face) 628 629 (fontified t) 629 633 (fontified t face font-lock-variable-name-face) 633 636 (fontified t) 636 640 (fontified t face font-lock-type-face) 640 645 (fontified t) 645 646 (fontified t face (rainbow-delimiters-depth-3-face)) 646 647 (fontified t face (rainbow-delimiters-depth-3-face)) 647 658 (fontified t) 658 661 (fontified t face font-lock-comment-delimiter-face) 661 712 (fontified t face font-lock-comment-face) 712 720 (fontified t) 720 723 (fontified t face font-lock-keyword-face) 723 724 (fontified t) 724 735 (fontified t face font-lock-variable-name-face) 735 737 (fontified t) 737 750 (fontified t face font-lock-type-face) 750 753 (fontified t) 753 760 (fontified t face font-lock-type-face) 760 769 (fontified t) 769 770 (fontified t face (rainbow-delimiters-depth-3-face)) 770 771 (fontified t face (rainbow-delimiters-depth-3-face)) 771 781 (fontified t) 781 784 (fontified t face font-lock-keyword-face) 784 785 (fontified t) 785 798 (fontified t face font-lock-variable-name-face) 798 800 (fontified t) 800 815 (fontified t face font-lock-type-face) 815 818 (fontified t) 818 825 (fontified t face font-lock-type-face) 825 834 (fontified t) 834 835 (fontified t face (rainbow-delimiters-depth-3-face)) 835 836 (fontified t face (rainbow-delimiters-depth-3-face)) 836 846 (fontified t) 846 849 (fontified t face font-lock-keyword-face) 849 850 (fontified t) 850 862 (fontified t face font-lock-variable-name-face) 862 864 (fontified t) 864 878 (fontified t face font-lock-type-face) 878 881 (fontified t) 881 888 (fontified t face font-lock-type-face) 888 897 (fontified t) 897 898 (fontified t face (rainbow-delimiters-depth-3-face)) 898 899 (fontified t face (rainbow-delimiters-depth-3-face)) 899 910 (fontified t) 910 913 (fontified t face font-lock-comment-delimiter-face) 913 957 (fontified t face font-lock-comment-face) 957 965 (fontified t) 965 968 (fontified t face font-lock-keyword-face) 968 969 (fontified t) 969 975 (fontified t face font-lock-variable-name-face) 975 990 (fontified t) 990 999 (fontified t face font-lock-constant-face) 999 1001 (fontified t) 1001 1008 (fontified t face font-lock-constant-face) 1008 1019 (fontified t) 1019 1020 (fontified t face (rainbow-delimiters-depth-3-face)) 1020 1021 (fontified t face (rainbow-delimiters-depth-3-face)) 1021 1028 (fontified t) 1028 1029 (fontified t face (rainbow-delimiters-depth-3-face)) 1029 1030 (fontified t face rust-ampersand-face) 1030 1041 (fontified t) 1041 1042 (fontified t face rust-ampersand-face) 1042 1055 (fontified t) 1055 1056 (fontified t face rust-ampersand-face) 1056 1069 (fontified t) 1069 1070 (fontified t face (rainbow-delimiters-depth-3-face)) 1070 1071 (fontified t face rust-question-mark) 1071 1082 (fontified t) 1082 1085 (fontified t face font-lock-comment-delimiter-face) 1085 1139 (fontified t face font-lock-comment-face) 1139 1147 (fontified t) 1147 1150 (fontified t face font-lock-keyword-face) 1150 1151 (fontified t) 1151 1154 (fontified t face font-lock-keyword-face) 1154 1155 (fontified t) 1155 1161 (fontified t face font-lock-variable-name-face) 1161 1188 (fontified t) 1188 1191 (fontified t face font-lock-comment-delimiter-face) 1191 1214 (fontified t face font-lock-comment-face) 1214 1222 (fontified t) 1222 1225 (fontified t face font-lock-keyword-face) 1225 1226 (fontified t) 1226 1231 (fontified t face font-lock-variable-name-face) 1231 1234 (fontified t) 1234 1240 (fontified t) 1240 1249 (fontified t) 1249 1254 (fontified t) 1254 1255 (fontified t face (rainbow-delimiters-depth-3-face)) 1255 1256 (fontified t face (rainbow-delimiters-depth-3-face)) 1256 1257 (fontified t) 1257 1263 (fontified t) 1263 1264 (fontified t face (rainbow-delimiters-depth-3-face)) 1264 1282 (fontified t face font-lock-string-face) 1282 1283 (fontified t face (rainbow-delimiters-depth-3-face)) 1283 1284 (rear-nonsticky t fontified t) 1284 1285 (fontified t) 1285 1297 (fontified t) 1297 1298 (fontified t) 1298 1299 (fontified t) 1299 1307 (fontified t) 1307 1310 (fontified t face font-lock-comment-delimiter-face) 1310 1342 (fontified t face font-lock-comment-face) 1342 1350 (fontified t) 1350 1353 (fontified t face font-lock-keyword-face) 1353 1354 (fontified t) 1354 1357 (fontified t face font-lock-keyword-face) 1357 1358 (fontified t) 1358 1365 (fontified t face font-lock-variable-name-face) 1365 1380 (fontified t) 1380 1389 (fontified t face font-lock-constant-face) 1389 1391 (fontified t) 1391 1398 (fontified t face font-lock-constant-face) 1398 1410 (fontified t) 1410 1411 (fontified t face (rainbow-delimiters-depth-3-face)) 1411 1412 (fontified t face (rainbow-delimiters-depth-3-face)) 1412 1417 (fontified t) 1417 1418 (fontified t face (rainbow-delimiters-depth-3-face)) 1418 1419 (fontified t face rust-ampersand-face) 1419 1439 (fontified t) 1439 1440 (fontified t face rust-ampersand-face) 1440 1452 (fontified t) 1452 1453 (fontified t face (rainbow-delimiters-depth-3-face)) 1453 1454 (fontified t face rust-question-mark) 1454 1465 (fontified t) 1465 1467 (fontified t face font-lock-comment-delimiter-face) 1467 1468 (fontified t face font-lock-comment-delimiter-face) 1468 1528 (fontified t face font-lock-comment-face) 1528 1536 (fontified t) 1536 1539 (fontified t face font-lock-keyword-face) 1539 1540 (fontified t) 1540 1548 (fontified t face font-lock-variable-name-face) 1548 1561 (fontified t) 1561 1562 (fontified t) 1562 1570 (fontified t) 1570 1573 (fontified t face font-lock-keyword-face) 1573 1574 (fontified t) 1574 1577 (fontified t face font-lock-keyword-face) 1577 1578 (fontified t) 1578 1590 (fontified t face font-lock-variable-name-face) 1590 1596 (fontified t) 1596 1604 (fontified t) 1604 1607 (fontified t face font-lock-keyword-face) 1607 1608 (fontified t) 1608 1611 (fontified t face font-lock-keyword-face) 1611 1612 (fontified t) 1612 1622 (fontified t face font-lock-variable-name-face) 1622 1625 (fontified t) 1625 1629 (fontified t face font-lock-type-face) 1629 1631 (fontified t) 1631 1639 (fontified t) 1639 1642 (fontified t face font-lock-keyword-face) 1642 1643 (fontified t) 1643 1651 (fontified t face font-lock-variable-name-face) 1651 1660 (fontified t) 1660 1665 (fontified t) 1665 1679 (fontified t) 1679 1692 (fontified t) 1692 1701 (fontified t) 1701 1711 (fontified t) 1711 1712 (fontified t face (rainbow-delimiters-depth-3-face)) 1712 1715 (fontified t) 1715 1718 (fontified t face font-lock-type-face) 1718 1719 (fontified t face (rainbow-delimiters-depth-4-face)) 1719 1737 (fontified t face font-lock-string-face) 1737 1738 (fontified t face (rainbow-delimiters-depth-4-face)) 1738 1739 (fontified t face (rainbow-delimiters-depth-3-face)) 1739 1740 (fontified t) 1740 1741 (fontified t) 1741 1742 (fontified t) 1742 1750 (fontified t) 1750 1753 (fontified t face font-lock-keyword-face) 1753 1754 (fontified t) 1754 1757 (fontified t face font-lock-keyword-face) 1757 1758 (fontified t) 1758 1762 (fontified t face font-lock-variable-name-face) 1762 1765 (fontified t) 1765 1774 (fontified t face font-lock-type-face) 1774 1775 (fontified t) 1775 1776 (fontified t face (rainbow-delimiters-depth-3-face)) 1776 1777 (fontified t) 1777 1789 (fontified t) 1789 1795 (fontified t) 1795 1807 (fontified t) 1807 1814 (fontified t face font-lock-variable-name-face) 1814 1816 (fontified t) 1816 1819 (fontified t face font-lock-type-face) 1819 1824 (fontified t) 1824 1825 (fontified t face (rainbow-delimiters-depth-4-face)) 1825 1826 (fontified t face (rainbow-delimiters-depth-4-face)) 1826 1828 (fontified t) 1828 1840 (fontified t) 1840 1851 (fontified t face font-lock-variable-name-face) 1851 1859 (fontified t) 1859 1889 (fontified t) 1889 1918 (fontified t) 1918 1945 (fontified t) 1945 1946 (fontified t face (rainbow-delimiters-depth-4-face)) 1946 1949 (fontified t) 1949 1952 (fontified t face font-lock-type-face) 1952 1953 (fontified t face (rainbow-delimiters-depth-5-face)) 1953 1974 (fontified t face font-lock-string-face) 1974 1975 (fontified t face (rainbow-delimiters-depth-5-face)) 1975 1976 (fontified t face (rainbow-delimiters-depth-4-face)) 1976 1978 (fontified t) 1978 1986 (fontified t) 1986 1987 (fontified t face (rainbow-delimiters-depth-3-face)) 1987 1989 (fontified t) 1989 1990 (fontified t) 1990 1998 (fontified t) 1998 2002 (fontified t face font-lock-keyword-face) 2002 2003 (fontified t) 2003 2004 (fontified t face (rainbow-delimiters-depth-3-face)) 2004 2005 (fontified t) 2005 2017 (fontified t) 2017 2020 (fontified t face font-lock-comment-delimiter-face) 2020 2064 (fontified t face font-lock-comment-face) 2064 2076 (fontified t) 2076 2079 (fontified t face font-lock-keyword-face) 2079 2080 (fontified t) 2080 2086 (fontified t face font-lock-variable-name-face) 2086 2089 (fontified t) 2089 2094 (fontified t face font-lock-keyword-face) 2094 2113 (fontified t) 2113 2114 (fontified t face (rainbow-delimiters-depth-4-face)) 2114 2115 (fontified t face (rainbow-delimiters-depth-4-face)) 2115 2116 (fontified t) 2116 2117 (fontified t face (rainbow-delimiters-depth-4-face)) 2117 2118 (fontified t) 2118 2134 (fontified t) 2134 2136 (fontified t face font-lock-type-face) 2136 2137 (fontified t face (rainbow-delimiters-depth-5-face)) 2137 2146 (fontified t) 2146 2147 (fontified t face (rainbow-delimiters-depth-5-face)) 2147 2149 (fontified t) 2149 2150 (syntax-table (1) fontified t) 2150 2162 (fontified t) 2162 2178 (fontified t) 2178 2181 (fontified t face font-lock-type-face) 2181 2182 (fontified t face (rainbow-delimiters-depth-5-face)) 2182 2187 (fontified t face font-lock-type-face) 2187 2189 (fontified t) 2189 2196 (fontified t face font-lock-type-face) 2196 2197 (fontified t face (rainbow-delimiters-depth-6-face)) 2197 2200 (fontified t face font-lock-keyword-face) 2200 2201 (fontified t) 2201 2211 (fontified t face font-lock-variable-name-face) 2211 2212 (fontified t face (rainbow-delimiters-depth-6-face)) 2212 2213 (fontified t face (rainbow-delimiters-depth-5-face)) 2213 2214 (fontified t) 2214 2234 (fontified t) 2234 2236 (fontified t face font-lock-keyword-face) 2236 2252 (fontified t) 2252 2253 (fontified t face (rainbow-delimiters-depth-5-face)) 2253 2254 (fontified t face (rainbow-delimiters-depth-5-face)) 2254 2258 (fontified t) 2258 2261 (fontified t face font-lock-constant-face) 2261 2263 (fontified t) 2263 2265 (fontified t face font-lock-constant-face) 2265 2267 (fontified t) 2267 2276 (fontified t face font-lock-type-face) 2276 2278 (fontified t) 2278 2291 (fontified t face font-lock-type-face) 2291 2293 (fontified t) 2293 2294 (syntax-table (1) fontified t) 2294 2295 (fontified t) 2295 2311 (fontified t) 2311 2312 (fontified t face (rainbow-delimiters-depth-5-face)) 2312 2313 (fontified t) 2313 2333 (fontified t) 2333 2338 (fontified t face font-lock-keyword-face) 2338 2340 (fontified t) 2340 2356 (fontified t) 2356 2357 (fontified t face (rainbow-delimiters-depth-5-face)) 2357 2358 (fontified t) 2358 2374 (fontified t) 2374 2377 (fontified t face font-lock-type-face) 2377 2378 (fontified t face (rainbow-delimiters-depth-5-face)) 2378 2388 (fontified t) 2388 2389 (fontified t face (rainbow-delimiters-depth-5-face)) 2389 2391 (fontified t) 2391 2392 (syntax-table (1) fontified t) 2392 2393 (fontified t) 2393 2394 (fontified t face (rainbow-delimiters-depth-5-face)) 2394 2395 (fontified t) 2395 2415 (fontified t) 2415 2421 (fontified t face font-lock-keyword-face) 2421 2422 (fontified t) 2422 2425 (fontified t face font-lock-type-face) 2425 2426 (fontified t face (rainbow-delimiters-depth-6-face)) 2426 2441 (fontified t) 2441 2442 (fontified t face (rainbow-delimiters-depth-7-face)) 2442 2443 (fontified t face (rainbow-delimiters-depth-7-face)) 2443 2444 (fontified t face (rainbow-delimiters-depth-6-face)) 2444 2446 (fontified t) 2446 2462 (fontified t) 2462 2463 (fontified t face (rainbow-delimiters-depth-5-face)) 2463 2464 (fontified t) 2464 2476 (fontified t) 2476 2477 (fontified t face (rainbow-delimiters-depth-4-face)) 2477 2479 (fontified t) 2479 2480 (fontified t) 2480 2492 (fontified t) 2492 2495 (fontified t face font-lock-comment-delimiter-face) 2495 2557 (fontified t face font-lock-comment-face) 2557 2569 (fontified t) 2569 2571 (fontified t face font-lock-keyword-face) 2571 2587 (fontified t) 2587 2588 (fontified t face (rainbow-delimiters-depth-4-face)) 2588 2589 (fontified t face (rainbow-delimiters-depth-4-face)) 2589 2602 (fontified t) 2602 2603 (fontified t face (rainbow-delimiters-depth-4-face)) 2603 2604 (fontified t) 2604 2620 (fontified t) 2620 2628 (fontified t face font-lock-keyword-face) 2628 2630 (fontified t) 2630 2642 (fontified t) 2642 2643 (fontified t face (rainbow-delimiters-depth-4-face)) 2643 2644 (fontified t) 2644 2645 (fontified t) 2645 2657 (fontified t) 2657 2660 (fontified t face font-lock-comment-delimiter-face) 2660 2672 (fontified t face font-lock-comment-face) 2672 2685 (fontified t face font-lock-comment-face) 2685 2686 (fontified t face font-lock-comment-face) 2686 2726 (fontified t face font-lock-comment-face) 2726 2738 (fontified t) 2738 2743 (fontified t face font-lock-keyword-face) 2743 2758 (fontified t) 2758 2759 (fontified t face (rainbow-delimiters-depth-4-face)) 2759 2760 (fontified t face rust-ampersand-face) 2760 2766 (fontified t) 2766 2767 (fontified t face (rainbow-delimiters-depth-4-face)) 2767 2768 (fontified t) 2768 2769 (fontified t face (rainbow-delimiters-depth-4-face)) 2769 2770 (fontified t) 2770 2785 (fontified t) 2785 2786 (fontified t) 2786 2788 (fontified t face font-lock-type-face) 2788 2789 (fontified t face (rainbow-delimiters-depth-5-face)) 2789 2798 (fontified t) 2798 2799 (fontified t face (rainbow-delimiters-depth-5-face)) 2799 2801 (fontified t) 2801 2802 (syntax-table (1) fontified t) 2802 2803 (fontified t) 2803 2804 (fontified t face (rainbow-delimiters-depth-5-face)) 2804 2805 (fontified t) 2805 2825 (fontified t) 2825 2828 (fontified t face font-lock-comment-delimiter-face) 2828 2910 (fontified t face font-lock-comment-face) 2910 2930 (fontified t) 2930 2933 (fontified t face font-lock-comment-delimiter-face) 2933 2948 (fontified t face font-lock-comment-face) 2948 3010 (fontified t face font-lock-comment-face) 3010 3030 (fontified t) 3030 3033 (fontified t face font-lock-comment-delimiter-face) 3033 3103 (fontified t face font-lock-comment-face) 3103 3107 (fontified t face font-lock-comment-face) 3107 3111 (fontified t) 3111 3127 (fontified t) 3127 3130 (fontified t face font-lock-comment-delimiter-face) 3130 3156 (fontified t face font-lock-comment-face) 3156 3157 (fontified t face font-lock-comment-face) 3157 3196 (fontified t face font-lock-comment-face) 3196 3206 (fontified t face font-lock-comment-face) 3206 3210 (fontified t face font-lock-comment-face) 3210 3214 (fontified t) 3214 3230 (fontified t) 3230 3233 (fontified t face font-lock-comment-delimiter-face) 3233 3236 (fontified t face font-lock-comment-face) 3236 3238 (fontified t face font-lock-comment-face) 3238 3310 (fontified t face font-lock-comment-face) 3310 3325 (fontified t) 3325 3330 (fontified t) 3330 3333 (fontified t face font-lock-comment-delimiter-face) 3333 3405 (fontified t face font-lock-comment-face) 3405 3421 (fontified t) 3421 3425 (fontified t) 3425 3428 (fontified t face font-lock-comment-delimiter-face) 3428 3478 (fontified t face font-lock-comment-face) 3478 3492 (fontified t face font-lock-comment-face) 3492 3493 (fontified t) 3493 3513 (fontified t) 3513 3516 (fontified t face font-lock-comment-delimiter-face) 3516 3591 (fontified t face font-lock-comment-face) 3591 3611 (fontified t) 3611 3614 (fontified t face font-lock-comment-delimiter-face) 3614 3618 (fontified t face font-lock-comment-face) 3618 3643 (face font-lock-comment-face fontified t) 3643 3663 (fontified t) 3663 3665 (fontified t face font-lock-keyword-face) 3665 3684 (fontified t) 3684 3685 (fontified t face (rainbow-delimiters-depth-6-face)) 3685 3686 (fontified t face (rainbow-delimiters-depth-6-face)) 3686 3687 (fontified t) 3687 3688 (fontified t face (rainbow-delimiters-depth-6-face)) 3688 3689 (fontified t) 3689 3713 (fontified t) 3713 3716 (fontified t face font-lock-comment-delimiter-face) 3716 3752 (fontified t face font-lock-comment-face) 3752 3776 (fontified t) 3776 3779 (fontified t face font-lock-keyword-face) 3779 3780 (fontified t) 3780 3784 (fontified t face font-lock-variable-name-face) 3784 3802 (fontified t) 3802 3803 (fontified t face (rainbow-delimiters-depth-7-face)) 3803 3804 (fontified t face (rainbow-delimiters-depth-7-face)) 3804 3806 (fontified t) 3806 3807 (fontified t) 3807 3831 (fontified t) 3831 3834 (fontified t face font-lock-comment-delimiter-face) 3834 3910 (fontified t face font-lock-comment-face) 3910 3934 (fontified t) 3934 3937 (fontified t face font-lock-keyword-face) 3937 3938 (fontified t) 3938 3946 (fontified t face font-lock-variable-name-face) 3946 3967 (fontified t) 3967 3968 (fontified t face (rainbow-delimiters-depth-7-face)) 3968 3969 (fontified t face (rainbow-delimiters-depth-7-face)) 3969 3970 (fontified t) 3970 3972 (fontified t face font-lock-keyword-face) 3972 3973 (fontified t) 3973 3976 (fontified t face font-lock-type-face) 3976 3978 (fontified t) 3978 3979 (fontified t) 3979 4003 (fontified t) 4003 4006 (fontified t face font-lock-comment-delimiter-face) 4006 4036 (fontified t face font-lock-comment-face) 4036 4073 (fontified t) 4073 4077 (fontified t face font-lock-type-face) 4077 4078 (fontified t face (rainbow-delimiters-depth-7-face)) 4078 4090 (fontified t face font-lock-type-face) 4090 4092 (fontified t) 4092 4093 (fontified t face (rainbow-delimiters-depth-8-face)) 4093 4096 (fontified t face font-lock-type-face) 4096 4097 (fontified t face (rainbow-delimiters-depth-8-face)) 4097 4102 (fontified t) 4102 4103 (fontified t face (rainbow-delimiters-depth-8-face)) 4103 4117 (fontified t) 4117 4118 (fontified t face (rainbow-delimiters-depth-8-face)) 4118 4119 (fontified t face (rainbow-delimiters-depth-7-face)) 4119 4141 (fontified t) 4141 4142 (fontified t face (rainbow-delimiters-depth-6-face)) 4142 4164 (fontified t) 4164 4167 (fontified t face font-lock-comment-delimiter-face) 4167 4246 (fontified t face font-lock-comment-face) 4246 4266 (fontified t) 4266 4268 (fontified t face font-lock-keyword-face) 4268 4269 (fontified t) 4269 4272 (fontified t face font-lock-keyword-face) 4272 4273 (fontified t) 4273 4277 (fontified t face font-lock-type-face) 4277 4278 (fontified t face (rainbow-delimiters-depth-6-face)) 4278 4281 (fontified t) 4281 4282 (fontified t face (rainbow-delimiters-depth-6-face)) 4282 4285 (fontified t) 4285 4286 (fontified t face rust-ampersand-face) 4286 4289 (fontified t face font-lock-keyword-face) 4289 4301 (fontified t) 4301 4302 (fontified t face (rainbow-delimiters-depth-6-face)) 4302 4351 (fontified t) 4351 4352 (fontified t face (rainbow-delimiters-depth-7-face)) 4352 4361 (fontified t) 4361 4362 (fontified t face (rainbow-delimiters-depth-7-face)) 4362 4388 (fontified t) 4388 4391 (fontified t face font-lock-keyword-face) 4391 4392 (fontified t) 4392 4396 (fontified t face font-lock-variable-name-face) 4396 4398 (fontified t) 4398 4401 (fontified t face font-lock-type-face) 4401 4402 (fontified t face (rainbow-delimiters-depth-7-face)) 4402 4405 (fontified t face font-lock-type-face) 4405 4406 (fontified t face (rainbow-delimiters-depth-7-face)) 4406 4449 (fontified t) 4449 4450 (fontified t face (rainbow-delimiters-depth-7-face)) 4450 4451 (fontified t face (rainbow-delimiters-depth-7-face)) 4451 4485 (fontified t) 4485 4486 (fontified t face (rainbow-delimiters-depth-7-face)) 4486 4487 (fontified t face (rainbow-delimiters-depth-7-face)) 4487 4524 (fontified t) 4524 4525 (fontified t face (rainbow-delimiters-depth-7-face)) 4525 4539 (fontified t) 4539 4540 (fontified t face (rainbow-delimiters-depth-8-face)) 4540 4541 (fontified t face (rainbow-delimiters-depth-8-face)) 4541 4542 (fontified t face (rainbow-delimiters-depth-7-face)) 4542 4578 (fontified t) 4578 4579 (fontified t face (rainbow-delimiters-depth-7-face)) 4579 4580 (fontified t face (rainbow-delimiters-depth-7-face)) 4580 4617 (fontified t) 4617 4618 (fontified t face (rainbow-delimiters-depth-7-face)) 4618 4619 (fontified t face (rainbow-delimiters-depth-7-face)) 4619 4675 (fontified t) 4675 4676 (fontified t face (rainbow-delimiters-depth-7-face)) 4676 4677 (fontified t face rust-ampersand-face) 4677 4681 (fontified t) 4681 4682 (fontified t face (rainbow-delimiters-depth-7-face)) 4682 4709 (fontified t) 4709 4712 (fontified t face font-lock-comment-delimiter-face) 4712 4772 (fontified t face font-lock-comment-face) 4772 4823 (fontified t) 4823 4824 (fontified t face (rainbow-delimiters-depth-7-face)) 4824 4825 (fontified t face (rainbow-delimiters-depth-7-face)) 4825 4829 (fontified t) 4829 4830 (fontified t face (rainbow-delimiters-depth-7-face)) 4830 4831 (fontified t face (rainbow-delimiters-depth-7-face)) 4831 4857 (fontified t) 4857 4860 (fontified t face font-lock-constant-face) 4860 4862 (fontified t) 4862 4867 (fontified t face font-lock-preprocessor-face) 4867 4868 (fontified t face (rainbow-delimiters-depth-7-face)) 4868 4890 (fontified t face font-lock-string-face) 4890 4904 (fontified t) 4904 4905 (fontified t face (rainbow-delimiters-depth-7-face)) 4905 4927 (fontified t) 4927 4928 (fontified t face (rainbow-delimiters-depth-6-face)) 4928 4945 (fontified t) 4945 4946 (fontified t face (rainbow-delimiters-depth-5-face)) 4946 4963 (fontified t) 4963 4966 (fontified t face font-lock-type-face) 4966 4967 (fontified t face (rainbow-delimiters-depth-5-face)) 4967 4972 (fontified t face font-lock-type-face) 4972 4974 (fontified t) 4974 4985 (fontified t face font-lock-type-face) 4985 4986 (fontified t face (rainbow-delimiters-depth-6-face)) 4986 4987 (fontified t) 4987 4988 (fontified t face (rainbow-delimiters-depth-6-face)) 4988 4989 (fontified t face (rainbow-delimiters-depth-5-face)) 4989 4991 (fontified t) 4991 4992 (syntax-table (1) fontified t) 4992 4993 (fontified t) 4993 4994 (fontified t face (rainbow-delimiters-depth-5-face)) 4994 4995 (fontified t face (rainbow-delimiters-depth-5-face)) 4995 5013 (fontified t) 5013 5016 (fontified t face font-lock-type-face) 5016 5017 (fontified t face (rainbow-delimiters-depth-5-face)) 5017 5018 (fontified t) 5018 5019 (fontified t face (rainbow-delimiters-depth-5-face)) 5019 5021 (fontified t) 5021 5022 (syntax-table (1) fontified t) 5022 5023 (fontified t) 5023 5028 (fontified t face font-lock-keyword-face) 5028 5042 (fontified t) 5042 5043 (fontified t face (rainbow-delimiters-depth-4-face)) 5043 5052 (fontified t) 5052 5053 (fontified t face (rainbow-delimiters-depth-3-face)) 5053 5063 (fontified t) 5063 5065 (fontified t face font-lock-type-face) 5065 5066 (fontified t face (rainbow-delimiters-depth-3-face)) 5066 5070 (fontified t) 5070 5071 (fontified t face (rainbow-delimiters-depth-3-face)) 5071 5072 (fontified t) 5072 5076 (fontified t) 5076 5077 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 1541) (undo-tree-id391 . -5077) (undo-tree-id392 . -3) (undo-tree-id393 . -1240) (undo-tree-id394 . -1240) (undo-tree-id395 . -629) (undo-tree-id396 . -1741) (undo-tree-id397 . -1740) (undo-tree-id398 . -901) (undo-tree-id399 . -1264) (undo-tree-id400 . 3796) (undo-tree-id401 . -1789) (undo-tree-id402 . -2726) (undo-tree-id403 . -1853) (undo-tree-id404 . -1976) (undo-tree-id405 . -4534) (undo-tree-id406 . -4539) (undo-tree-id407 . -4533) (undo-tree-id408 . -4534) (undo-tree-id409 . -10) (undo-tree-id410 . -5077) (undo-tree-id411 . -5077) (undo-tree-id412 . -5077) (t 25364 40178 464355 513000)) nil (25364 40261 451935 883000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1540) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 1541) nil (25364 40261 451415 710000) 0 nil])
([nil nil ((1541 . 1545) (#("    " 0 4 (fontified nil)) . 1540) (1540 . 1544) (1540 . 1541)) nil (25364 40261 451398 323000) 0 nil])
([nil nil ((1540 . 1544)) nil (25364 40267 371338 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6758 . 6759) (nil fontified nil 1544 . 6759) (1544 . 6759)) nil (25364 40275 442025 864000) 0 nil] [nil nil ((nil rear-nonsticky nil 4561 . 4562) (nil fontified nil 1544 . 4562) (1544 . 4562)) ((#("    pub fn play(&self, host: AudioBackend) -> Result<PlayHandle> {
        let host = host.host().wrap_err(\"Could not open specified host\")?;
        let device = host
            .default_output_device()
            .ok_or_else(|| eyre!(\"No output device\"))?;
        log::info!(\"Output device: {}\", device.name()?);
        let config = device.default_output_config()?;

        log::info!(\"Begin playback...\");

        let sample_rate = config.sample_rate().0;
        let state = PlaybackState {
            time: 0,
            samples: self.resample(sample_rate).samples,
            done_cbs: vec![],
            changed_cbs: vec![],
            changed_cbs_triggered_at: 0,
            sample_rate: sample_rate as usize,
        };
        let state: PlaybackStateHandle = Arc::new(Mutex::new(Some(state)));
        let state_2 = state.clone();
        let channels = config.channels();

        let err_fn = move |err| {
            log::error!(\"an error occurred on stream: {}\", err);
        };

        fn write_output_data<T>(output: &mut [T], channels: u16, writer: &PlaybackStateHandle)
        where
            T: cpal::Sample,
        {
            if let Ok(mut guard) = writer.try_lock() {
                if let Some(state) = guard.as_mut() {
                    for frame in output.chunks_mut(channels.into()) {
                        for sample in frame.iter_mut() {
                            *sample =
                                cpal::Sample::from(state.samples.get(state.time).unwrap_or(&0f32));
                        }
                        state.time += 1;
                    }
                    if state.time >= state.samples.len() {
                        for cb in &*state.done_cbs {
                            cb();
                        }
                    }
                    if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                        for cb in &*state.changed_cbs {
                            cb();
                        }
                        state.changed_cbs_triggered_at = state.time;
                    }
                }
            }
        }

        let stream = match config.sample_format() {
            cpal::SampleFormat::F32 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<f32>(data, channels, &state),
                err_fn,
            )?,
            cpal::SampleFormat::I16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<i16>(data, channels, &state),
                err_fn,
            )?,
            cpal::SampleFormat::U16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<u16>(data, channels, &state),
                err_fn,
            )?,
        };

        stream.play()?;

        Ok(PlayHandle {
            _stream: stream,
            state: state_2,
        })
    }
" 0 4 (fontified nil) 4 7 (fontified nil face font-lock-keyword-face) 7 8 (fontified nil) 8 10 (fontified nil face font-lock-keyword-face) 10 11 (fontified nil) 11 15 (fontified nil face font-lock-function-name-face) 15 16 (fontified nil face (rainbow-delimiters-depth-2-face)) 16 17 (fontified nil face rust-ampersand-face) 17 21 (fontified nil face font-lock-keyword-face) 21 23 (fontified nil) 23 27 (fontified nil face font-lock-variable-name-face) 27 29 (fontified nil) 29 41 (fontified nil face font-lock-type-face) 41 42 (fontified nil face (rainbow-delimiters-depth-2-face)) 42 44 (fontified nil) 44 45 (fontified nil syntax-table (1)) 45 46 (fontified nil) 46 52 (fontified nil face font-lock-type-face) 52 53 (fontified nil face (rainbow-delimiters-depth-2-face)) 53 63 (fontified nil face font-lock-type-face) 63 64 (fontified nil face (rainbow-delimiters-depth-2-face)) 64 65 (fontified nil) 65 66 (fontified nil face (rainbow-delimiters-depth-2-face)) 66 75 (fontified nil) 75 78 (fontified nil face font-lock-keyword-face) 78 79 (fontified nil) 79 83 (fontified nil face font-lock-variable-name-face) 83 95 (fontified nil) 95 96 (fontified nil face (rainbow-delimiters-depth-3-face)) 96 97 (fontified nil face (rainbow-delimiters-depth-3-face)) 97 106 (fontified nil) 106 107 (fontified nil face (rainbow-delimiters-depth-3-face)) 107 138 (fontified nil face font-lock-string-face) 138 139 (fontified nil face (rainbow-delimiters-depth-3-face)) 139 140 (fontified nil face rust-question-mark) 140 150 (fontified nil) 150 153 (fontified nil face font-lock-keyword-face) 153 154 (fontified nil) 154 160 (fontified nil face font-lock-variable-name-face) 160 202 (fontified nil) 202 203 (fontified nil face (rainbow-delimiters-depth-3-face)) 203 204 (fontified nil face (rainbow-delimiters-depth-3-face)) 204 228 (fontified nil) 228 229 (fontified nil face (rainbow-delimiters-depth-3-face)) 229 232 (fontified nil) 232 237 (fontified nil face font-lock-preprocessor-face) 237 238 (fontified nil face (rainbow-delimiters-depth-4-face)) 238 256 (fontified nil face font-lock-string-face) 256 257 (fontified nil face (rainbow-delimiters-depth-4-face)) 257 258 (fontified nil face (rainbow-delimiters-depth-3-face)) 258 259 (fontified nil face rust-question-mark) 259 269 (fontified nil) 269 272 (fontified nil face font-lock-constant-face) 272 274 (fontified nil) 274 279 (fontified nil face font-lock-preprocessor-face) 279 280 (fontified nil face (rainbow-delimiters-depth-3-face)) 280 299 (fontified nil face font-lock-string-face) 299 312 (fontified nil) 312 313 (fontified nil face (rainbow-delimiters-depth-4-face)) 313 314 (fontified nil face (rainbow-delimiters-depth-4-face)) 314 315 (fontified nil face rust-question-mark) 315 316 (fontified nil face (rainbow-delimiters-depth-3-face)) 316 326 (fontified nil) 326 329 (fontified nil face font-lock-keyword-face) 329 330 (fontified nil) 330 336 (fontified nil face font-lock-variable-name-face) 336 367 (fontified nil) 367 368 (fontified nil face (rainbow-delimiters-depth-3-face)) 368 369 (fontified nil face (rainbow-delimiters-depth-3-face)) 369 370 (fontified nil face rust-question-mark) 370 381 (fontified nil) 381 384 (fontified nil face font-lock-constant-face) 384 386 (fontified nil) 386 391 (fontified nil face font-lock-preprocessor-face) 391 392 (fontified nil face (rainbow-delimiters-depth-3-face)) 392 411 (fontified nil face font-lock-string-face) 411 412 (fontified nil face (rainbow-delimiters-depth-3-face)) 412 423 (fontified nil) 423 426 (fontified nil face font-lock-keyword-face) 426 427 (fontified nil) 427 438 (fontified nil face font-lock-variable-name-face) 438 459 (fontified nil) 459 460 (fontified nil face (rainbow-delimiters-depth-3-face)) 460 461 (fontified nil face (rainbow-delimiters-depth-3-face)) 461 473 (fontified nil) 473 476 (fontified nil face font-lock-keyword-face) 476 477 (fontified nil) 477 482 (fontified nil face font-lock-variable-name-face) 482 485 (fontified nil) 485 498 (fontified nil face font-lock-type-face) 498 499 (fontified nil) 499 500 (fontified nil face (rainbow-delimiters-depth-3-face)) 500 513 (fontified nil) 513 517 (fontified nil face font-lock-variable-name-face) 517 534 (fontified nil) 534 541 (fontified nil face font-lock-variable-name-face) 541 543 (fontified nil) 543 547 (fontified nil face font-lock-keyword-face) 547 556 (fontified nil) 556 557 (fontified nil face (rainbow-delimiters-depth-4-face)) 557 568 (fontified nil) 568 569 (fontified nil face (rainbow-delimiters-depth-4-face)) 569 591 (fontified nil) 591 599 (fontified nil face font-lock-variable-name-face) 599 601 (fontified nil) 601 605 (fontified nil face font-lock-preprocessor-face) 605 606 (fontified nil face (rainbow-delimiters-depth-4-face)) 606 607 (fontified nil face (rainbow-delimiters-depth-4-face)) 607 621 (fontified nil) 621 632 (fontified nil face font-lock-variable-name-face) 632 634 (fontified nil) 634 638 (fontified nil face font-lock-preprocessor-face) 638 639 (fontified nil face (rainbow-delimiters-depth-4-face)) 639 640 (fontified nil face (rainbow-delimiters-depth-4-face)) 640 654 (fontified nil) 654 678 (fontified nil face font-lock-variable-name-face) 678 695 (fontified nil) 695 706 (fontified nil face font-lock-variable-name-face) 706 720 (fontified nil) 720 722 (fontified nil face font-lock-keyword-face) 722 723 (fontified nil) 723 728 (fontified nil face font-lock-type-face) 728 738 (fontified nil) 738 739 (fontified nil face (rainbow-delimiters-depth-3-face)) 739 749 (fontified nil) 749 752 (fontified nil face font-lock-keyword-face) 752 753 (fontified nil) 753 758 (fontified nil face font-lock-variable-name-face) 758 760 (fontified nil) 760 779 (fontified nil face font-lock-type-face) 779 782 (fontified nil) 782 785 (fontified nil face font-lock-type-face) 785 790 (fontified nil) 790 791 (fontified nil face (rainbow-delimiters-depth-3-face)) 791 796 (fontified nil face font-lock-type-face) 796 801 (fontified nil) 801 802 (fontified nil face (rainbow-delimiters-depth-4-face)) 802 806 (fontified nil face font-lock-type-face) 806 807 (fontified nil face (rainbow-delimiters-depth-5-face)) 807 812 (fontified nil) 812 813 (fontified nil face (rainbow-delimiters-depth-5-face)) 813 814 (fontified nil face (rainbow-delimiters-depth-4-face)) 814 815 (fontified nil face (rainbow-delimiters-depth-3-face)) 815 825 (fontified nil) 825 828 (fontified nil face font-lock-keyword-face) 828 829 (fontified nil) 829 836 (fontified nil face font-lock-variable-name-face) 836 850 (fontified nil) 850 851 (fontified nil face (rainbow-delimiters-depth-3-face)) 851 852 (fontified nil face (rainbow-delimiters-depth-3-face)) 852 862 (fontified nil) 862 865 (fontified nil face font-lock-keyword-face) 865 866 (fontified nil) 866 874 (fontified nil face font-lock-variable-name-face) 874 892 (fontified nil) 892 893 (fontified nil face (rainbow-delimiters-depth-3-face)) 893 894 (fontified nil face (rainbow-delimiters-depth-3-face)) 894 905 (fontified nil) 905 908 (fontified nil face font-lock-keyword-face) 908 909 (fontified nil) 909 915 (fontified nil face font-lock-variable-name-face) 915 918 (fontified nil) 918 922 (fontified nil face font-lock-keyword-face) 922 929 (fontified nil) 929 930 (fontified nil face (rainbow-delimiters-depth-3-face)) 930 943 (fontified nil) 943 946 (fontified nil face font-lock-constant-face) 946 948 (fontified nil) 948 954 (fontified nil face font-lock-preprocessor-face) 954 955 (fontified nil face (rainbow-delimiters-depth-4-face)) 955 988 (fontified nil face font-lock-string-face) 988 993 (fontified nil) 993 994 (fontified nil face (rainbow-delimiters-depth-4-face)) 994 1004 (fontified nil) 1004 1005 (fontified nil face (rainbow-delimiters-depth-3-face)) 1005 1016 (fontified nil) 1016 1018 (fontified nil face font-lock-keyword-face) 1018 1019 (fontified nil) 1019 1036 (fontified nil face font-lock-function-name-face) 1036 1037 (fontified nil face (rainbow-delimiters-depth-3-face)) 1037 1038 (fontified nil face font-lock-type-face) 1038 1039 (fontified nil face (rainbow-delimiters-depth-3-face)) 1039 1040 (fontified nil face (rainbow-delimiters-depth-3-face)) 1040 1046 (fontified nil face font-lock-variable-name-face) 1046 1048 (fontified nil) 1048 1049 (fontified nil face rust-ampersand-face) 1049 1052 (fontified nil face font-lock-keyword-face) 1052 1053 (fontified nil) 1053 1054 (fontified nil face (rainbow-delimiters-depth-4-face)) 1054 1055 (fontified nil face font-lock-type-face) 1055 1056 (fontified nil face (rainbow-delimiters-depth-4-face)) 1056 1058 (fontified nil) 1058 1066 (fontified nil face font-lock-variable-name-face) 1066 1068 (fontified nil) 1068 1071 (fontified nil face font-lock-type-face) 1071 1073 (fontified nil) 1073 1079 (fontified nil face font-lock-variable-name-face) 1079 1081 (fontified nil) 1081 1082 (fontified nil face rust-ampersand-face) 1082 1101 (fontified nil face font-lock-type-face) 1101 1102 (fontified nil face (rainbow-delimiters-depth-3-face)) 1102 1111 (fontified nil) 1111 1116 (fontified nil face font-lock-keyword-face) 1116 1129 (fontified nil) 1129 1130 (fontified nil face font-lock-variable-name-face) 1130 1132 (fontified nil) 1132 1136 (fontified nil face font-lock-constant-face) 1136 1138 (fontified nil) 1138 1144 (fontified nil face font-lock-type-face) 1144 1154 (fontified nil) 1154 1155 (fontified nil face (rainbow-delimiters-depth-3-face)) 1155 1168 (fontified nil) 1168 1170 (fontified nil face font-lock-keyword-face) 1170 1171 (fontified nil) 1171 1174 (fontified nil face font-lock-keyword-face) 1174 1175 (fontified nil) 1175 1177 (fontified nil face font-lock-type-face) 1177 1178 (fontified nil face (rainbow-delimiters-depth-4-face)) 1178 1181 (fontified nil face font-lock-keyword-face) 1181 1187 (fontified nil) 1187 1188 (fontified nil face (rainbow-delimiters-depth-4-face)) 1188 1206 (fontified nil) 1206 1207 (fontified nil face (rainbow-delimiters-depth-4-face)) 1207 1208 (fontified nil face (rainbow-delimiters-depth-4-face)) 1208 1209 (fontified nil) 1209 1210 (fontified nil face (rainbow-delimiters-depth-4-face)) 1210 1227 (fontified nil) 1227 1229 (fontified nil face font-lock-keyword-face) 1229 1230 (fontified nil) 1230 1233 (fontified nil face font-lock-keyword-face) 1233 1234 (fontified nil) 1234 1238 (fontified nil face font-lock-type-face) 1238 1239 (fontified nil face (rainbow-delimiters-depth-5-face)) 1239 1244 (fontified nil) 1244 1245 (fontified nil face (rainbow-delimiters-depth-5-face)) 1245 1260 (fontified nil) 1260 1261 (fontified nil face (rainbow-delimiters-depth-5-face)) 1261 1262 (fontified nil face (rainbow-delimiters-depth-5-face)) 1262 1263 (fontified nil) 1263 1264 (fontified nil face (rainbow-delimiters-depth-5-face)) 1264 1285 (fontified nil) 1285 1288 (fontified nil face font-lock-keyword-face) 1288 1289 (fontified nil) 1289 1294 (fontified nil face font-lock-variable-name-face) 1294 1295 (fontified nil) 1295 1297 (fontified nil face font-lock-keyword-face) 1297 1315 (fontified nil) 1315 1316 (fontified nil face (rainbow-delimiters-depth-6-face)) 1316 1329 (fontified nil) 1329 1330 (fontified nil face (rainbow-delimiters-depth-7-face)) 1330 1331 (fontified nil face (rainbow-delimiters-depth-7-face)) 1331 1332 (fontified nil face (rainbow-delimiters-depth-6-face)) 1332 1333 (fontified nil) 1333 1334 (fontified nil face (rainbow-delimiters-depth-6-face)) 1334 1359 (fontified nil) 1359 1362 (fontified nil face font-lock-keyword-face) 1362 1363 (fontified nil) 1363 1369 (fontified nil face font-lock-variable-name-face) 1369 1370 (fontified nil) 1370 1372 (fontified nil face font-lock-keyword-face) 1372 1387 (fontified nil) 1387 1388 (fontified nil face (rainbow-delimiters-depth-7-face)) 1388 1389 (fontified nil face (rainbow-delimiters-depth-7-face)) 1389 1390 (fontified nil) 1390 1391 (fontified nil face (rainbow-delimiters-depth-7-face)) 1391 1462 (fontified nil) 1462 1466 (fontified nil face font-lock-constant-face) 1466 1468 (fontified nil) 1468 1474 (fontified nil face font-lock-type-face) 1474 1480 (fontified nil) 1480 1481 (fontified nil face (rainbow-delimiters-depth-8-face)) 1481 1496 (fontified nil) 1496 1498 (fontified nil) 1498 1499 (fontified nil face (rainbow-delimiters-depth-9-face)) 1499 1509 (fontified nil) 1509 1510 (fontified nil face (rainbow-delimiters-depth-9-face)) 1510 1520 (fontified nil) 1520 1521 (fontified nil face (rainbow-delimiters-depth-9-face)) 1521 1522 (fontified nil face rust-ampersand-face) 1522 1523 (fontified nil) 1523 1526 (fontified nil face font-lock-type-face) 1526 1527 (fontified nil face (rainbow-delimiters-depth-9-face)) 1527 1528 (fontified nil face (rainbow-delimiters-depth-8-face)) 1528 1530 (fontified nil) 1530 1554 (fontified nil) 1554 1555 (fontified nil face (rainbow-delimiters-depth-7-face)) 1555 1556 (fontified nil) 1556 1597 (fontified nil) 1597 1617 (fontified nil) 1617 1618 (fontified nil face (rainbow-delimiters-depth-6-face)) 1618 1619 (fontified nil) 1619 1639 (fontified nil) 1639 1641 (fontified nil face font-lock-keyword-face) 1641 1653 (fontified nil) 1653 1654 (syntax-table (1) fontified nil) 1654 1673 (fontified nil) 1673 1674 (fontified nil face (rainbow-delimiters-depth-6-face)) 1674 1675 (fontified nil face (rainbow-delimiters-depth-6-face)) 1675 1676 (fontified nil) 1676 1677 (fontified nil face (rainbow-delimiters-depth-6-face)) 1677 1678 (fontified nil) 1678 1702 (fontified nil) 1702 1705 (fontified nil face font-lock-keyword-face) 1705 1706 (fontified nil) 1706 1708 (fontified nil face font-lock-variable-name-face) 1708 1709 (fontified nil) 1709 1711 (fontified nil face font-lock-keyword-face) 1711 1712 (fontified nil) 1712 1713 (fontified nil face rust-ampersand-face) 1713 1729 (fontified nil) 1729 1730 (fontified nil face (rainbow-delimiters-depth-7-face)) 1730 1731 (fontified nil) 1731 1761 (fontified nil) 1761 1762 (fontified nil face (rainbow-delimiters-depth-8-face)) 1762 1763 (fontified nil face (rainbow-delimiters-depth-8-face)) 1763 1765 (fontified nil) 1765 1789 (fontified nil) 1789 1790 (fontified nil face (rainbow-delimiters-depth-7-face)) 1790 1791 (fontified nil) 1791 1811 (fontified nil) 1811 1812 (fontified nil face (rainbow-delimiters-depth-6-face)) 1812 1813 (fontified nil) 1813 1833 (fontified nil) 1833 1835 (fontified nil face font-lock-keyword-face) 1835 1847 (fontified nil) 1847 1848 (syntax-table (1) fontified nil) 1848 1907 (fontified nil) 1907 1908 (fontified nil face (rainbow-delimiters-depth-6-face)) 1908 1909 (fontified nil) 1909 1933 (fontified nil) 1933 1936 (fontified nil face font-lock-keyword-face) 1936 1937 (fontified nil) 1937 1939 (fontified nil face font-lock-variable-name-face) 1939 1940 (fontified nil) 1940 1942 (fontified nil face font-lock-keyword-face) 1942 1943 (fontified nil) 1943 1944 (fontified nil face rust-ampersand-face) 1944 1963 (fontified nil) 1963 1964 (fontified nil face (rainbow-delimiters-depth-7-face)) 1964 1965 (fontified nil) 1965 1995 (fontified nil) 1995 1996 (fontified nil face (rainbow-delimiters-depth-8-face)) 1996 1997 (fontified nil face (rainbow-delimiters-depth-8-face)) 1997 1999 (fontified nil) 1999 2023 (fontified nil) 2023 2024 (fontified nil face (rainbow-delimiters-depth-7-face)) 2024 2025 (fontified nil) 2025 2094 (fontified nil) 2094 2114 (fontified nil) 2114 2115 (fontified nil face (rainbow-delimiters-depth-6-face)) 2115 2116 (fontified nil) 2116 2132 (fontified nil) 2132 2133 (fontified nil face (rainbow-delimiters-depth-5-face)) 2133 2134 (fontified nil) 2134 2146 (fontified nil) 2146 2147 (fontified nil face (rainbow-delimiters-depth-4-face)) 2147 2148 (fontified nil) 2148 2156 (fontified nil) 2156 2157 (fontified nil face (rainbow-delimiters-depth-3-face)) 2157 2158 (fontified nil) 2158 2159 (fontified nil) 2159 2167 (fontified nil) 2167 2170 (fontified nil face font-lock-keyword-face) 2170 2171 (fontified nil) 2171 2177 (fontified nil face font-lock-variable-name-face) 2177 2180 (fontified nil) 2180 2185 (fontified nil face font-lock-keyword-face) 2185 2206 (fontified nil) 2206 2207 (fontified nil face (rainbow-delimiters-depth-3-face)) 2207 2208 (fontified nil face (rainbow-delimiters-depth-3-face)) 2208 2209 (fontified nil) 2209 2210 (fontified nil face (rainbow-delimiters-depth-3-face)) 2210 2211 (fontified nil) 2211 2223 (fontified nil) 2223 2227 (fontified nil face font-lock-constant-face) 2227 2229 (fontified nil) 2229 2241 (fontified nil face font-lock-type-face) 2241 2243 (fontified nil) 2243 2246 (fontified nil face font-lock-type-face) 2246 2248 (fontified nil) 2248 2249 (syntax-table (1) fontified nil) 2249 2276 (fontified nil) 2276 2277 (fontified nil face (rainbow-delimiters-depth-4-face)) 2277 2278 (fontified nil) 2278 2294 (fontified nil) 2294 2295 (fontified nil face rust-ampersand-face) 2295 2306 (fontified nil) 2306 2307 (fontified nil face (rainbow-delimiters-depth-5-face)) 2307 2308 (fontified nil face (rainbow-delimiters-depth-5-face)) 2308 2310 (fontified nil) 2310 2326 (fontified nil) 2326 2330 (fontified nil face font-lock-keyword-face) 2330 2338 (fontified nil) 2338 2339 (fontified nil face font-lock-variable-name-face) 2339 2341 (fontified nil) 2341 2342 (fontified nil face rust-ampersand-face) 2342 2364 (fontified nil) 2364 2365 (fontified nil face (rainbow-delimiters-depth-5-face)) 2365 2368 (fontified nil face font-lock-type-face) 2368 2369 (fontified nil face (rainbow-delimiters-depth-5-face)) 2369 2370 (fontified nil face (rainbow-delimiters-depth-5-face)) 2370 2386 (fontified nil) 2386 2387 (fontified nil face rust-ampersand-face) 2387 2392 (fontified nil) 2392 2393 (fontified nil face (rainbow-delimiters-depth-5-face)) 2393 2395 (fontified nil) 2395 2419 (fontified nil) 2419 2431 (fontified nil) 2431 2432 (fontified nil face (rainbow-delimiters-depth-4-face)) 2432 2433 (fontified nil face rust-question-mark) 2433 2435 (fontified nil) 2435 2447 (fontified nil) 2447 2451 (fontified nil face font-lock-constant-face) 2451 2453 (fontified nil) 2453 2465 (fontified nil face font-lock-type-face) 2465 2467 (fontified nil) 2467 2470 (fontified nil face font-lock-type-face) 2470 2472 (fontified nil) 2472 2473 (syntax-table (1) fontified nil) 2473 2500 (fontified nil) 2500 2501 (fontified nil face (rainbow-delimiters-depth-4-face)) 2501 2518 (fontified nil) 2518 2519 (fontified nil face rust-ampersand-face) 2519 2530 (fontified nil) 2530 2531 (fontified nil face (rainbow-delimiters-depth-5-face)) 2531 2532 (fontified nil face (rainbow-delimiters-depth-5-face)) 2532 2550 (fontified nil) 2550 2554 (fontified nil face font-lock-keyword-face) 2554 2562 (fontified nil) 2562 2563 (fontified nil face font-lock-variable-name-face) 2563 2565 (fontified nil) 2565 2566 (fontified nil face rust-ampersand-face) 2566 2588 (fontified nil) 2588 2589 (fontified nil face (rainbow-delimiters-depth-5-face)) 2589 2592 (fontified nil face font-lock-type-face) 2592 2593 (fontified nil face (rainbow-delimiters-depth-5-face)) 2593 2594 (fontified nil face (rainbow-delimiters-depth-5-face)) 2594 2610 (fontified nil) 2610 2611 (fontified nil face rust-ampersand-face) 2611 2616 (fontified nil) 2616 2617 (fontified nil face (rainbow-delimiters-depth-5-face)) 2617 2655 (fontified nil) 2655 2656 (fontified nil face (rainbow-delimiters-depth-4-face)) 2656 2657 (fontified nil face rust-question-mark) 2657 2671 (fontified nil) 2671 2675 (fontified nil face font-lock-constant-face) 2675 2677 (fontified nil) 2677 2689 (fontified nil face font-lock-type-face) 2689 2691 (fontified nil) 2691 2694 (fontified nil face font-lock-type-face) 2694 2696 (fontified nil) 2696 2697 (syntax-table (1) fontified nil) 2697 2724 (fontified nil) 2724 2725 (fontified nil face (rainbow-delimiters-depth-4-face)) 2725 2742 (fontified nil) 2742 2743 (fontified nil face rust-ampersand-face) 2743 2754 (fontified nil) 2754 2755 (fontified nil face (rainbow-delimiters-depth-5-face)) 2755 2756 (fontified nil face (rainbow-delimiters-depth-5-face)) 2756 2774 (fontified nil) 2774 2778 (fontified nil face font-lock-keyword-face) 2778 2786 (fontified nil) 2786 2787 (fontified nil face font-lock-variable-name-face) 2787 2789 (fontified nil) 2789 2790 (fontified nil face rust-ampersand-face) 2790 2812 (fontified nil) 2812 2813 (fontified nil face (rainbow-delimiters-depth-5-face)) 2813 2816 (fontified nil face font-lock-type-face) 2816 2817 (fontified nil face (rainbow-delimiters-depth-5-face)) 2817 2818 (fontified nil face (rainbow-delimiters-depth-5-face)) 2818 2834 (fontified nil) 2834 2835 (fontified nil face rust-ampersand-face) 2835 2840 (fontified nil) 2840 2841 (fontified nil face (rainbow-delimiters-depth-5-face)) 2841 2879 (fontified nil) 2879 2880 (fontified nil face (rainbow-delimiters-depth-4-face)) 2880 2881 (fontified nil face rust-question-mark) 2881 2891 (fontified nil) 2891 2892 (fontified nil face (rainbow-delimiters-depth-3-face)) 2892 2914 (fontified nil) 2914 2915 (fontified nil face (rainbow-delimiters-depth-3-face)) 2915 2916 (fontified nil face (rainbow-delimiters-depth-3-face)) 2916 2917 (fontified nil face rust-question-mark) 2917 2928 (fontified nil) 2928 2930 (fontified nil face font-lock-type-face) 2930 2931 (fontified nil face (rainbow-delimiters-depth-3-face)) 2931 2941 (fontified nil face font-lock-type-face) 2941 2942 (fontified nil) 2942 2943 (fontified nil face (rainbow-delimiters-depth-4-face)) 2943 2956 (fontified nil) 2956 2963 (fontified nil face font-lock-variable-name-face) 2963 2985 (fontified nil) 2985 2990 (fontified nil face font-lock-variable-name-face) 2990 3009 (fontified nil) 3009 3010 (fontified nil face (rainbow-delimiters-depth-4-face)) 3010 3011 (fontified nil face (rainbow-delimiters-depth-3-face)) 3011 3012 (fontified nil) 3012 3016 (fontified nil) 3016 3017 (fontified nil face (rainbow-delimiters-depth-2-face)) 3017 3018 (rear-nonsticky nil fontified nil)) . 1544) (undo-tree-id413 . -261) (undo-tree-id414 . -168) (undo-tree-id415 . -29) (undo-tree-id416 . -41) (undo-tree-id417 . -53) (undo-tree-id418 . -63) (undo-tree-id419 . -485) (undo-tree-id420 . -498) (undo-tree-id421 . -760) (undo-tree-id422 . -779) (undo-tree-id423 . -1082) (undo-tree-id424 . -1101) (undo-tree-id425 . -2386) (undo-tree-id426 . -2392) (undo-tree-id427 . -2610) (undo-tree-id428 . -2616) (undo-tree-id429 . -2834) (undo-tree-id430 . -2840) (undo-tree-id431 . -2931) (undo-tree-id432 . -2941) (undo-tree-id433 . -1642) (undo-tree-id434 . -1647) (undo-tree-id435 . -522) (undo-tree-id436 . -11) (undo-tree-id437 . -1019) (nil fontified t 4555 . 4556) (nil fontified t 4554 . 4555) (nil fontified t 4553 . 4554) (nil fontified t 4534 . 4553) (nil fontified t 4529 . 4534) (nil fontified t 4507 . 4529) (nil fontified t 4500 . 4507) (nil fontified t 4487 . 4500) (nil fontified t 4486 . 4487) (nil fontified t 4485 . 4486) (nil fontified t 4475 . 4485) (nil fontified t 4474 . 4475) (nil fontified t 4472 . 4474) (nil fontified t 4461 . 4472) (nil fontified t 4460 . 4461) (nil fontified t 4459 . 4460) (nil fontified t 4458 . 4459) (nil fontified t 4436 . 4458) (nil fontified t 4435 . 4436) (nil fontified t 4425 . 4435) (nil fontified t 4424 . 4425) (nil fontified t 4423 . 4424) (nil fontified t 4385 . 4423) (nil fontified t 4384 . 4385) (nil fontified t 4379 . 4384) (nil fontified t 4378 . 4379) (nil fontified t 4362 . 4378) (nil fontified t 4361 . 4362) (nil fontified t 4360 . 4361) (nil fontified t 4357 . 4360) (nil fontified t 4356 . 4357) (nil fontified t 4334 . 4356) (nil fontified t 4333 . 4334) (nil fontified t 4331 . 4333) (nil fontified t 4330 . 4331) (nil fontified t 4322 . 4330) (nil fontified t 4318 . 4322) (nil fontified t 4300 . 4318) (nil fontified t 4299 . 4300) (nil fontified t 4298 . 4299) (nil fontified t 4287 . 4298) (nil fontified t 4286 . 4287) (nil fontified t 4269 . 4286) (nil fontified t 4268 . 4269) (nil fontified t 4241 . 4268) (nil fontified t 4240 . 4241) (nil fontified t 4238 . 4240) (nil fontified t 4235 . 4238) (nil fontified t 4233 . 4235) (nil fontified t 4221 . 4233) (nil fontified t 4219 . 4221) (nil fontified t 4215 . 4219) (nil fontified t 4201 . 4215) (nil fontified t 4200 . 4201) (nil fontified t 4199 . 4200) (nil fontified t 4161 . 4199) (nil fontified t 4160 . 4161) (nil fontified t 4155 . 4160) (nil fontified t 4154 . 4155) (nil fontified t 4138 . 4154) (nil fontified t 4137 . 4138) (nil fontified t 4136 . 4137) (nil fontified t 4133 . 4136) (nil fontified t 4132 . 4133) (nil fontified t 4110 . 4132) (nil fontified t 4109 . 4110) (nil fontified t 4107 . 4109) (nil fontified t 4106 . 4107) (nil fontified t 4098 . 4106) (nil fontified t 4094 . 4098) (nil fontified t 4076 . 4094) (nil fontified t 4075 . 4076) (nil fontified t 4074 . 4075) (nil fontified t 4063 . 4074) (nil fontified t 4062 . 4063) (nil fontified t 4045 . 4062) (nil fontified t 4044 . 4045) (nil fontified t 4017 . 4044) (nil fontified t 4016 . 4017) (nil fontified t 4014 . 4016) (nil fontified t 4011 . 4014) (nil fontified t 4009 . 4011) (nil fontified t 3997 . 4009) (nil fontified t 3995 . 3997) (nil fontified t 3991 . 3995) (nil fontified t 3979 . 3991) (nil fontified t 3977 . 3979) (nil fontified t 3976 . 3977) (nil fontified t 3975 . 3976) (nil fontified t 3963 . 3975) (nil fontified t 3939 . 3963) (nil fontified t 3937 . 3939) (nil fontified t 3936 . 3937) (nil fontified t 3931 . 3936) (nil fontified t 3930 . 3931) (nil fontified t 3914 . 3930) (nil fontified t 3913 . 3914) (nil fontified t 3912 . 3913) (nil fontified t 3909 . 3912) (nil fontified t 3908 . 3909) (nil fontified t 3886 . 3908) (nil fontified t 3885 . 3886) (nil fontified t 3883 . 3885) (nil fontified t 3882 . 3883) (nil fontified t 3874 . 3882) (nil fontified t 3870 . 3874) (nil fontified t 3854 . 3870) (nil fontified t 3852 . 3854) (nil fontified t 3851 . 3852) (nil fontified t 3850 . 3851) (nil fontified t 3839 . 3850) (nil fontified t 3838 . 3839) (nil fontified t 3822 . 3838) (nil fontified t 3821 . 3822) (nil fontified t 3820 . 3821) (nil fontified t 3793 . 3820) (nil fontified t 3792 . 3793) (nil fontified t 3790 . 3792) (nil fontified t 3787 . 3790) (nil fontified t 3785 . 3787) (nil fontified t 3773 . 3785) (nil fontified t 3771 . 3773) (nil fontified t 3767 . 3771) (nil fontified t 3755 . 3767) (nil fontified t 3754 . 3755) (nil fontified t 3753 . 3754) (nil fontified t 3752 . 3753) (nil fontified t 3751 . 3752) (nil fontified t 3750 . 3751) (nil fontified t 3729 . 3750) (nil fontified t 3724 . 3729) (nil fontified t 3721 . 3724) (nil fontified t 3715 . 3721) (nil fontified t 3714 . 3715) (nil fontified t 3711 . 3714) (nil fontified t 3703 . 3711) (nil fontified t 3702 . 3703) (nil fontified t 3701 . 3702) (nil fontified t 3700 . 3701) (nil fontified t 3692 . 3700) (nil fontified t 3691 . 3692) (nil fontified t 3690 . 3691) (nil fontified t 3678 . 3690) (nil fontified t 3677 . 3678) (nil fontified t 3676 . 3677) (nil fontified t 3660 . 3676) (nil fontified t 3659 . 3660) (nil fontified t 3658 . 3659) (nil fontified t 3638 . 3658) (nil fontified t 3569 . 3638) (nil fontified t 3568 . 3569) (nil fontified t 3567 . 3568) (nil fontified t 3543 . 3567) (nil fontified t 3541 . 3543) (nil fontified t 3540 . 3541) (nil fontified t 3539 . 3540) (nil fontified t 3509 . 3539) (nil fontified t 3508 . 3509) (nil fontified t 3507 . 3508) (nil fontified t 3488 . 3507) (nil fontified t 3487 . 3488) (nil fontified t 3486 . 3487) (nil fontified t 3484 . 3486) (nil fontified t 3483 . 3484) (nil fontified t 3481 . 3483) (nil fontified t 3480 . 3481) (nil fontified t 3477 . 3480) (nil fontified t 3453 . 3477) (nil fontified t 3452 . 3453) (nil fontified t 3451 . 3452) (nil fontified t 3392 . 3451) (nil fontified t 3391 . 3392) (nil fontified t 3379 . 3391) (nil fontified t 3377 . 3379) (nil fontified t 3357 . 3377) (nil fontified t 3356 . 3357) (nil fontified t 3355 . 3356) (nil fontified t 3335 . 3355) (nil fontified t 3334 . 3335) (nil fontified t 3333 . 3334) (nil fontified t 3309 . 3333) (nil fontified t 3307 . 3309) (nil fontified t 3306 . 3307) (nil fontified t 3305 . 3306) (nil fontified t 3275 . 3305) (nil fontified t 3274 . 3275) (nil fontified t 3273 . 3274) (nil fontified t 3257 . 3273) (nil fontified t 3256 . 3257) (nil fontified t 3255 . 3256) (nil fontified t 3253 . 3255) (nil fontified t 3252 . 3253) (nil fontified t 3250 . 3252) (nil fontified t 3249 . 3250) (nil fontified t 3246 . 3249) (nil fontified t 3222 . 3246) (nil fontified t 3221 . 3222) (nil fontified t 3220 . 3221) (nil fontified t 3219 . 3220) (nil fontified t 3218 . 3219) (nil fontified t 3217 . 3218) (nil fontified t 3198 . 3217) (nil fontified t 3197 . 3198) (nil fontified t 3185 . 3197) (nil fontified t 3183 . 3185) (nil fontified t 3163 . 3183) (nil fontified t 3162 . 3163) (nil fontified t 3161 . 3162) (nil fontified t 3141 . 3161) (nil fontified t 3100 . 3141) (nil fontified t 3099 . 3100) (nil fontified t 3098 . 3099) (nil fontified t 3074 . 3098) (nil fontified t 3072 . 3074) (nil fontified t 3071 . 3072) (nil fontified t 3070 . 3071) (nil fontified t 3067 . 3070) (nil fontified t 3066 . 3067) (nil fontified t 3065 . 3066) (nil fontified t 3064 . 3065) (nil fontified t 3054 . 3064) (nil fontified t 3053 . 3054) (nil fontified t 3043 . 3053) (nil fontified t 3042 . 3043) (nil fontified t 3040 . 3042) (nil fontified t 3025 . 3040) (nil fontified t 3024 . 3025) (nil fontified t 3018 . 3024) (nil fontified t 3012 . 3018) (nil fontified t 3010 . 3012) (nil fontified t 3006 . 3010) (nil fontified t 2935 . 3006) (nil fontified t 2934 . 2935) (nil fontified t 2933 . 2934) (nil fontified t 2932 . 2933) (nil fontified t 2931 . 2932) (nil fontified t 2916 . 2931) (nil fontified t 2914 . 2916) (nil fontified t 2913 . 2914) (nil fontified t 2907 . 2913) (nil fontified t 2906 . 2907) (nil fontified t 2903 . 2906) (nil fontified t 2878 . 2903) (nil fontified t 2877 . 2878) (nil fontified t 2876 . 2877) (nil fontified t 2875 . 2876) (nil fontified t 2874 . 2875) (nil fontified t 2873 . 2874) (nil fontified t 2860 . 2873) (nil fontified t 2859 . 2860) (nil fontified t 2841 . 2859) (nil fontified t 2839 . 2841) (nil fontified t 2838 . 2839) (nil fontified t 2833 . 2838) (nil fontified t 2832 . 2833) (nil fontified t 2829 . 2832) (nil fontified t 2808 . 2829) (nil fontified t 2807 . 2808) (nil fontified t 2806 . 2807) (nil fontified t 2805 . 2806) (nil fontified t 2804 . 2805) (nil fontified t 2789 . 2804) (nil fontified t 2788 . 2789) (nil fontified t 2783 . 2788) (nil fontified t 2782 . 2783) (nil fontified t 2778 . 2782) (nil fontified t 2777 . 2778) (nil fontified t 2774 . 2777) (nil fontified t 2773 . 2774) (nil fontified t 2771 . 2773) (nil fontified t 2754 . 2771) (nil fontified t 2753 . 2754) (nil fontified t 2752 . 2753) (nil fontified t 2751 . 2752) (nil fontified t 2750 . 2751) (nil fontified t 2732 . 2750) (nil fontified t 2731 . 2732) (nil fontified t 2725 . 2731) (nil fontified t 2722 . 2725) (nil fontified t 2721 . 2722) (nil fontified t 2719 . 2721) (nil fontified t 2718 . 2719) (nil fontified t 2715 . 2718) (nil fontified t 2714 . 2715) (nil fontified t 2712 . 2714) (nil fontified t 2699 . 2712) (nil fontified t 2698 . 2699) (nil fontified t 2688 . 2698) (nil fontified t 2682 . 2688) (nil fontified t 2680 . 2682) (nil fontified t 2676 . 2680) (nil fontified t 2674 . 2676) (nil fontified t 2673 . 2674) (nil fontified t 2660 . 2673) (nil fontified t 2655 . 2660) (nil fontified t 2646 . 2655) (nil fontified t 2645 . 2646) (nil fontified t 2626 . 2645) (nil fontified t 2625 . 2626) (nil fontified t 2623 . 2625) (nil fontified t 2617 . 2623) (nil fontified t 2615 . 2617) (nil fontified t 2612 . 2615) (nil fontified t 2610 . 2612) (nil fontified t 2602 . 2610) (nil fontified t 2600 . 2602) (nil fontified t 2599 . 2600) (nil fontified t 2598 . 2599) (nil fontified t 2597 . 2598) (nil fontified t 2596 . 2597) (nil fontified t 2593 . 2596) (nil fontified t 2592 . 2593) (nil fontified t 2590 . 2592) (nil fontified t 2584 . 2590) (nil fontified t 2583 . 2584) (nil fontified t 2582 . 2583) (nil fontified t 2581 . 2582) (nil fontified t 2580 . 2581) (nil fontified t 2563 . 2580) (nil fontified t 2562 . 2563) (nil fontified t 2560 . 2562) (nil fontified t 2549 . 2560) (nil fontified t 2548 . 2549) (nil fontified t 2538 . 2548) (nil fontified t 2537 . 2538) (nil fontified t 2532 . 2537) (nil fontified t 2499 . 2532) (nil fontified t 2498 . 2499) (nil fontified t 2492 . 2498) (nil fontified t 2490 . 2492) (nil fontified t 2487 . 2490) (nil fontified t 2474 . 2487) (nil fontified t 2473 . 2474) (nil fontified t 2466 . 2473) (nil fontified t 2462 . 2466) (nil fontified t 2459 . 2462) (nil fontified t 2453 . 2459) (nil fontified t 2452 . 2453) (nil fontified t 2449 . 2452) (nil fontified t 2438 . 2449) (nil fontified t 2437 . 2438) (nil fontified t 2436 . 2437) (nil fontified t 2418 . 2436) (nil fontified t 2410 . 2418) (nil fontified t 2409 . 2410) (nil fontified t 2406 . 2409) (nil fontified t 2396 . 2406) (nil fontified t 2395 . 2396) (nil fontified t 2394 . 2395) (nil fontified t 2380 . 2394) (nil fontified t 2373 . 2380) (nil fontified t 2372 . 2373) (nil fontified t 2369 . 2372) (nil fontified t 2359 . 2369) (nil fontified t 2358 . 2359) (nil fontified t 2357 . 2358) (nil fontified t 2356 . 2357) (nil fontified t 2351 . 2356) (nil fontified t 2350 . 2351) (nil fontified t 2346 . 2350) (nil fontified t 2345 . 2346) (nil fontified t 2340 . 2345) (nil fontified t 2335 . 2340) (nil fontified t 2334 . 2335) (nil fontified t 2329 . 2334) (nil fontified t 2326 . 2329) (nil fontified t 2323 . 2326) (nil fontified t 2304 . 2323) (nil fontified t 2302 . 2304) (nil fontified t 2297 . 2302) (nil fontified t 2296 . 2297) (nil fontified t 2293 . 2296) (nil fontified t 2283 . 2293) (nil fontified t 2282 . 2283) (nil fontified t 2272 . 2282) (nil fontified t 2267 . 2272) (nil fontified t 2266 . 2267) (nil fontified t 2264 . 2266) (nil fontified t 2250 . 2264) (nil fontified t 2239 . 2250) (nil fontified t 2222 . 2239) (nil fontified t 2198 . 2222) (nil fontified t 2184 . 2198) (nil fontified t 2183 . 2184) (nil fontified t 2182 . 2183) (nil fontified t 2178 . 2182) (nil fontified t 2176 . 2178) (nil fontified t 2165 . 2176) (nil fontified t 2151 . 2165) (nil fontified t 2150 . 2151) (nil fontified t 2149 . 2150) (nil fontified t 2145 . 2149) (nil fontified t 2143 . 2145) (nil fontified t 2135 . 2143) (nil fontified t 2113 . 2135) (nil fontified t 2112 . 2113) (nil fontified t 2101 . 2112) (nil fontified t 2100 . 2101) (nil fontified t 2091 . 2100) (nil fontified t 2087 . 2091) (nil fontified t 2085 . 2087) (nil fontified t 2078 . 2085) (nil fontified t 2061 . 2078) (nil fontified t 2057 . 2061) (nil fontified t 2044 . 2057) (nil fontified t 2043 . 2044) (nil fontified t 2042 . 2043) (nil fontified t 2029 . 2042) (nil fontified t 2026 . 2029) (nil fontified t 2021 . 2026) (nil fontified t 2020 . 2021) (nil fontified t 2017 . 2020) (nil fontified t 2005 . 2017) (nil fontified t 2004 . 2005) (nil fontified t 2003 . 2004) (nil fontified t 1982 . 2003) (nil fontified t 1971 . 1982) (nil fontified t 1970 . 1971) (nil fontified t 1967 . 1970) (nil fontified t 1956 . 1967) (nil fontified t 1955 . 1956) (nil fontified t 1936 . 1955) (nil fontified t 1935 . 1936) (nil fontified t 1930 . 1935) (nil fontified t 1928 . 1930) (nil fontified t 1925 . 1928) (nil fontified t 1914 . 1925) (nil fontified t 1913 . 1914) (nil fontified t 1912 . 1913) (nil fontified t 1911 . 1912) (nil fontified t 1880 . 1911) (nil fontified t 1874 . 1880) (nil fontified t 1873 . 1874) (nil fontified t 1870 . 1873) (nil fontified t 1860 . 1870) (nil fontified t 1859 . 1860) (nil fontified t 1858 . 1859) (nil fontified t 1857 . 1858) (nil fontified t 1856 . 1857) (nil fontified t 1843 . 1856) (nil fontified t 1824 . 1843) (nil fontified t 1823 . 1824) (nil fontified t 1818 . 1823) (nil fontified t 1816 . 1818) (nil fontified t 1813 . 1816) (nil fontified t 1803 . 1813) (nil fontified t 1802 . 1803) (nil fontified t 1801 . 1802) (nil fontified t 1800 . 1801) (nil fontified t 1782 . 1800) (nil fontified t 1781 . 1782) (nil fontified t 1776 . 1781) (nil fontified t 1773 . 1776) (nil fontified t 1772 . 1773) (nil fontified t 1748 . 1772) (nil fontified t 1747 . 1748) (nil fontified t 1746 . 1747) (nil fontified t 1704 . 1746) (nil fontified t 1698 . 1704) (nil fontified t 1697 . 1698) (nil fontified t 1694 . 1697) (nil fontified t 1684 . 1694) (nil fontified t 1683 . 1684) (nil fontified t 1682 . 1683) (nil fontified t 1651 . 1682) (nil fontified t 1650 . 1651) (nil fontified t 1641 . 1650) (nil fontified t 1640 . 1641) (nil fontified t 1639 . 1640) (nil fontified t 1627 . 1639) (nil fontified t 1623 . 1627) (nil fontified t 1622 . 1623) (nil fontified t 1619 . 1622) (nil fontified t 1610 . 1619) (nil fontified t 1609 . 1610) (nil fontified t 1608 . 1609) (nil fontified t 1607 . 1608) (nil fontified t 1597 . 1607) (nil fontified t 1596 . 1597) (nil fontified t 1590 . 1596) (nil fontified t 1589 . 1590) (nil fontified t 1588 . 1589) (nil fontified t 1586 . 1588) (nil fontified t 1585 . 1586) (nil fontified t 1573 . 1585) (nil fontified t 1571 . 1573) (nil fontified t 1567 . 1571) (nil fontified t 1565 . 1567) (nil fontified t 1561 . 1565) (nil fontified t 1560 . 1561) (nil fontified t 1559 . 1560) (nil fontified t 1555 . 1559) (nil fontified t 1554 . 1555) (nil fontified t 1552 . 1554) (nil fontified t 1551 . 1552) (nil fontified t 1548 . 1551) (nil fontified t 1544 . 1548) (nil rear-nonsticky t 4561 . 4562) (t 25364 40261 467693 942000)) (25364 40261 451391 355000) 0 nil])
([nil nil ((#("id: None," 0 2 (fontified t face font-lock-variable-name-face) 2 4 (fontified t) 4 8 (fontified t face font-lock-type-face) 8 9 (fontified t)) . 3390) (undo-tree-id442 . -9) (undo-tree-id443 . -8) (undo-tree-id444 . -2) (undo-tree-id445 . -9) (t 25364 40275 487694 803000)) nil (25364 40283 158055 300000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 3390) (undo-tree-id441 . -1)) nil (25364 40283 158050 873000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3390)) nil (25364 40283 158048 646000) 0 nil])
([nil nil ((#("date: DateTime::<Utc>::from(creation_time)," 0 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t) 6 14 (fontified t face font-lock-type-face) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 20 (fontified t face font-lock-type-face) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-4-face)) 42 43 (fontified t)) . 3408) (undo-tree-id439 . -42) (undo-tree-id440 . -43)) nil (25364 40283 158047 260000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3408) (undo-tree-id438 . -1)) nil (25364 40283 158043 302000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3408)) nil (25364 40283 158033 986000) 0 nil])
([nil nil ((#("Result" 0 6 (fontified t face font-lock-type-face)) . -600) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) 606 (t 25364 40283 204361 943000)) nil (25364 40312 864601 23000) 0 nil])
([nil nil ((600 . 601)) nil (25364 40312 864595 893000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -600) (undo-tree-id450 . -1) 601) nil (25364 40312 864594 700000) 0 nil])
([nil nil ((600 . 603)) nil (25364 40312 864592 127000) 0 nil])
([nil nil ((600 . 606) (#("Res" 0 3 (fontified nil)) . 600) (600 . 603) (#("Result" 0 6 (fontified t face font-lock-type-face)) . -600) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (600 . 606) (#("Res" 0 3 (fontified t face font-lock-type-face)) . -600) (undo-tree-id448 . -3) (undo-tree-id449 . -3) 603) nil (25364 40312 864587 128000) 0 nil])
([nil nil ((#("use anyhow::Result;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 10 (fontified t face font-lock-constant-face) 10 12 (fontified t) 12 18 (fontified t face font-lock-type-face) 18 19 (fontified t)) . 135) (undo-tree-id458 . -19) (undo-tree-id459 . -4) (undo-tree-id460 . -18) (undo-tree-id461 . -19) (t 25364 40312 911030 434000)) nil (25364 40319 468761 425000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 135) (undo-tree-id456 . -1) (undo-tree-id457 . -1)) nil (25364 40319 468754 25000) 0 nil])
([nil nil ((1797 . 1799) (t 25364 40319 484364 171000)) nil (25364 40336 19322 368000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1524) 1537 (t 25364 40336 37698 520000)) nil (25364 40369 461836 369000) 0 nil])
([nil nil ((6661 . 6665) (#("    " 0 4 (fontified nil)) . 6660) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (6664 . 6665) (t 25364 40369 477700 573000)) nil (25364 40391 591998 646000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10260 . 10261) (nil fontified nil 6665 . 10261) (6665 . 10261)) nil (25364 40391 591982 227000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6665) (undo-tree-id466 . -4) 6672 (t 25364 40391 641035 267000)) nil (25364 40393 317215 192000) 0 nil])
([nil nil ((#("AudioBackend" 0 12 (fontified t face font-lock-type-face)) . -6690) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) 6702 (t 25364 40393 334368 704000)) nil (25364 40399 92895 271000) 0 nil])
([nil nil ((#("host: " 0 4 (fontified t face font-lock-variable-name-face) 4 6 (fontified t)) . -6684) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) 6690) nil (25364 40399 92890 474000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6682) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -6683) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) 6684) nil (25364 40399 92882 155000) 0 nil])
([nil nil ((#("host\")?;" 0 5 (fontified t face font-lock-string-face) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face rust-question-mark) 7 8 (fontified t)) . -6774) (undo-tree-id534 . -8) (undo-tree-id535 . -8) 6782 (t 25364 40399 107702 392000)) nil (25364 40418 517732 636000) 0 nil])
([nil nil ((#("specified " 0 10 (fontified t face font-lock-string-face)) . -6764) (undo-tree-id532 . -10) (undo-tree-id533 . -10) 6774) nil (25364 40418 517729 950000) 0 nil])
([nil nil ((#("open " 0 5 (fontified t face font-lock-string-face)) . -6759) (undo-tree-id530 . -5) (undo-tree-id531 . -5) 6764) nil (25364 40418 517727 502000) 0 nil])
([nil nil ((#("not " 0 4 (fontified t face font-lock-string-face)) . -6755) (undo-tree-id528 . -4) (undo-tree-id529 . -4) 6759) nil (25364 40418 517724 955000) 0 nil])
([nil nil ((#("Could " 0 6 (fontified t face font-lock-string-face)) . -6749) (undo-tree-id526 . -6) (undo-tree-id527 . -6) 6755) nil (25364 40418 517722 504000) 0 nil])
([nil nil ((#("err(\"" 0 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 5 (fontified t face font-lock-string-face)) . -6744) (undo-tree-id524 . -5) (undo-tree-id525 . -5) 6749) nil (25364 40418 517720 130000) 0 nil])
([nil nil ((#("wrap_" 0 5 (fontified t)) . -6739) (undo-tree-id522 . -5) (undo-tree-id523 . -5) 6744) nil (25364 40418 517717 633000) 0 nil])
([nil nil ((#("host()." 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t)) . -6732) (undo-tree-id520 . -7) (undo-tree-id521 . -7) 6739) nil (25364 40418 517714 883000) 0 nil])
([nil nil ((6732 . 6734)) nil (25364 40418 517712 592000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -6727) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("o" 0 1 (fontified t)) . -6728) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("s" 0 1 (fontified t)) . -6729) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("t" 0 1 (fontified t)) . -6730) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("." 0 1 (fontified t)) . -6731) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("d" 0 1 (fontified t)) . -6732) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("e" 0 1 (fontified t)) . -6733) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 6734) nil (25364 40418 517709 229000) 0 nil])
([nil nil ((6727 . 6731)) nil (25364 40418 517665 226000) 0 nil])
([nil nil ((75 . 76) (75 . 76) (75 . 87) (6727 . 6727) (6727 . 6739) (#("host" 0 3 (fontified nil) 3 4 (fontified nil)) . 6727) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . 1) (6727 . 6730) (#("default_host (use cpal::default_host)" 0 37 (fontified nil)) . -6727) (6727 . 6764) (#("hos" 0 3 (fontified t)) . -6727) (undo-tree-id491 . -3) 6730) nil (25364 40418 517663 263000) 0 nil])
([nil nil ((6753 . 6755)) nil (25364 40418 517656 307000) 0 nil])
([nil nil ((6755 . 6756)) nil (25364 40418 517655 485000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -6755) (undo-tree-id486 . -1) 6756) nil (25364 40418 517653 534000) 0 nil])
([nil nil ((6755 . 6756)) nil (25364 40503 141705 48000) 0 nil])
([nil nil ((#("PlayHandle" 0 10 (fontified t face font-lock-type-face)) . -6708) (undo-tree-id550 . -10) (undo-tree-id551 . -10) (undo-tree-id552 . -10) 6718 (t 25364 40504 587708 867000)) nil (25364 40538 795372 795000) 0 nil] [nil nil ((#("PlayHandle" 0 10 (fontified t face font-lock-type-face)) . -6708) (undo-tree-id536 . -10) (undo-tree-id537 . -10) (undo-tree-id538 . -10) (undo-tree-id539 . -10) 6718 (t 25364 40418 564370 253000)) ((6708 . 6718)) (25364 40502 787603 498000) 0 nil])
([nil nil ((6708 . 6710)) nil (25364 40538 795360 94000) 0 nil])
([nil nil ((6708 . 6710)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-3-face))) . 6708) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -1) (undo-tree-id543 . 1) (undo-tree-id544 . -1) (undo-tree-id545 . 1) (undo-tree-id546 . -2) (undo-tree-id547 . 2) (undo-tree-id548 . -1) (undo-tree-id549 . -2) (t 25364 40497 311041 754000)) (25364 40497 292941 801000) 0 nil])
([nil nil ((#("        let state = PlaybackState {
            time: 0,
            samples: self.resample(sample_rate).samples,
            done_cbs: vec![],
            changed_cbs: vec![],
            changed_cbs_triggered_at: 0,
            sample_rate: sample_rate as usize,
        };" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 17 (fontified t face font-lock-variable-name-face) 17 20 (fontified t) 20 33 (fontified t face font-lock-type-face) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 48 (fontified t) 48 52 (fontified t face font-lock-variable-name-face) 52 69 (fontified t) 69 76 (fontified t face font-lock-variable-name-face) 76 78 (fontified t) 78 82 (fontified t face font-lock-keyword-face) 82 91 (fontified t) 91 92 (fontified t face (rainbow-delimiters-depth-4-face)) 92 103 (fontified t) 103 104 (fontified t face (rainbow-delimiters-depth-4-face)) 104 126 (fontified t) 126 134 (fontified t face font-lock-variable-name-face) 134 136 (fontified t) 136 140 (fontified t face font-lock-preprocessor-face) 140 141 (fontified t face (rainbow-delimiters-depth-4-face)) 141 142 (fontified t face (rainbow-delimiters-depth-4-face)) 142 156 (fontified t) 156 167 (fontified t face font-lock-variable-name-face) 167 169 (fontified t) 169 173 (fontified t face font-lock-preprocessor-face) 173 174 (fontified t face (rainbow-delimiters-depth-4-face)) 174 175 (fontified t face (rainbow-delimiters-depth-4-face)) 175 189 (fontified t) 189 213 (fontified t face font-lock-variable-name-face) 213 230 (fontified t) 230 241 (fontified t face font-lock-variable-name-face) 241 255 (fontified t) 255 257 (fontified t face font-lock-keyword-face) 257 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 273 (fontified t) 273 274 (fontified t face (rainbow-delimiters-depth-3-face)) 274 275 (fontified t)) . 7072) (undo-tree-id553 . -275) (undo-tree-id554 . -20) (undo-tree-id555 . -33) (undo-tree-id556 . -275) (undo-tree-id557 . -275) (t 25364 40538 814377 634000)) nil (25364 40546 307116 59000) 0 nil])
nil
([nil nil ((#(" let state: PlaybackStateHandle = Arc::new(Mutex::new(Some(state)));" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t face font-lock-variable-name-face) 10 12 (fontified t) 12 31 (fontified t face font-lock-type-face) 31 34 (fontified t) 34 37 (fontified t face font-lock-type-face) 37 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-3-face)) 43 48 (fontified t face font-lock-type-face) 48 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-4-face)) 54 58 (fontified t face font-lock-type-face) 58 59 (fontified t face (rainbow-delimiters-depth-5-face)) 59 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-5-face)) 65 66 (fontified t face (rainbow-delimiters-depth-4-face)) 66 67 (fontified t face (rainbow-delimiters-depth-3-face)) 67 68 (fontified t)) . 7080) (undo-tree-id561 . -12) (undo-tree-id562 . -31) (undo-tree-id563 . -59) (undo-tree-id564 . -64) (undo-tree-id565 . -68) (t 25364 40546 324378 95000)) nil (25364 40550 843882 905000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7080) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1)) nil (25364 40550 843875 578000) 0 nil])
([nil nil ((#("       " 0 7 (fontified t)) . -7081) 7080) nil (25364 40550 843862 322000) 0 nil])
([nil nil ((#("let state_2 = state.clone();" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 11 (fontified t face font-lock-variable-name-face) 11 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 28 (fontified t)) . 7081) (undo-tree-id567 . -14) (undo-tree-id568 . -19) (undo-tree-id569 . -28) (t 25364 40550 861045 40000)) nil (25364 40554 530874 498000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7081) (undo-tree-id566 . -1)) nil (25364 40554 530870 71000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -7081)) nil (25364 40554 530859 776000) 0 nil])
([nil nil ((#("PlaybackStateHandle" 0 19 (fontified t face font-lock-type-face)) . -7301) (undo-tree-id578 . -19) (undo-tree-id579 . -19) (undo-tree-id580 . -19) 7320 (t 25364 40554 547711 934000)) nil (25364 40571 73495 574000) 0 nil])
([nil nil ((#("writer: &" 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t) 8 9 (fontified t)) . -7292) (undo-tree-id574 . -9) (undo-tree-id575 . -9) (undo-tree-id576 . -9) (undo-tree-id577 . -9) 7301) nil (25364 40571 73491 269000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -7290) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#(" " 0 1 (fontified t)) . -7291) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 7292) nil (25364 40571 73483 151000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -8335) (undo-tree-id590 . -1) (undo-tree-id591 . 1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 8336 (t 25364 40571 91046 283000)) nil (25364 40591 773628 520000) 0 nil])
([nil nil ((#("if let Ok(mut guard) = writer.try_lock() {" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 13 (fontified t face font-lock-keyword-face) 13 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-4-face)) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-4-face))) . 7357) (undo-tree-id582 . -29) (undo-tree-id583 . -42) (undo-tree-id584 . -42) (undo-tree-id585 . -41) (undo-tree-id586 . -23) (undo-tree-id587 . -29) (undo-tree-id588 . -42) (undo-tree-id589 . -42)) nil (25364 40591 773623 805000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7357) (undo-tree-id581 . -1)) nil (25364 40591 773616 930000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -7357)) nil (25364 40591 773610 879000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8186) (#("    " 0 4 (fontified t)) . -8172) (#("    " 0 4 (fontified t)) . -8111) (#("    " 0 4 (fontified t)) . -8089) (#("    " 0 4 (fontified t)) . -8063) (#("    " 0 4 (fontified t)) . -8007) (#("    " 0 4 (fontified t)) . -7911) (#("    " 0 4 (fontified t)) . -7893) (#("    " 0 4 (fontified t)) . -7875) (#("    " 0 4 (fontified t)) . -7849) (#("    " 0 4 (fontified t)) . -7796) (#("    " 0 4 (fontified t)) . -7737) (#("    " 0 4 (fontified t)) . -7719) (#("    " 0 4 (fontified t)) . -7686) (#("    " 0 4 (fontified t)) . -7664) (#("    " 0 4 (fontified t)) . -7576) (#("    " 0 4 (fontified t)) . -7538) (#("    " 0 4 (fontified t)) . -7481) (#("    " 0 4 (fontified t)) . -7411) 7395) nil (25364 40591 773603 971000) 0 nil])
([nil nil ((#("            if let Some(state) = guard.as_mut() {" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 23 (fontified t face font-lock-type-face) 23 24 (fontified t face (rainbow-delimiters-depth-4-face)) 24 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-4-face)) 30 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-4-face)) 46 47 (fontified t face (rainbow-delimiters-depth-4-face)) 47 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-4-face))) . 7345) (undo-tree-id611 . -49) (undo-tree-id612 . -12) (undo-tree-id613 . -12) (undo-tree-id614 . -12) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -49) (undo-tree-id618 . -33) (undo-tree-id619 . -38) (undo-tree-id620 . -49) (undo-tree-id621 . -49) (t 25364 40591 791047 553000)) nil (25364 40606 647811 346000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7344) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) 7345) nil (25364 40606 647793 431000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -8136) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . 1) (undo-tree-id598 . -1) 8137) nil (25364 40606 647773 636000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8050) (#("    " 0 4 (fontified t)) . -7993) (#("    " 0 4 (fontified t)) . -7975) (#("    " 0 4 (fontified t)) . -7953) (#("    " 0 4 (fontified t)) . -7901) (#("    " 0 4 (fontified t)) . -7809) (#("    " 0 4 (fontified t)) . -7795) (#("    " 0 4 (fontified t)) . -7781) (#("    " 0 4 (fontified t)) . -7759) (#("    " 0 4 (fontified t)) . -7710) (#("    " 0 4 (fontified t)) . -7655) (#("    " 0 4 (fontified t)) . -7641) (#("    " 0 4 (fontified t)) . -7612) (#("    " 0 4 (fontified t)) . -7594) (#("    " 0 4 (fontified t)) . -7510) (#("    " 0 4 (fontified t)) . -7476) (#("    " 0 4 (fontified t)) . -7423) (#("    " 0 4 (fontified t)) . -7357) 7349) nil (25364 40606 647751 681000) 0 nil])
([nil nil ((#("            if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                for cb in &*state.changed_cbs {
                    cb();
                }
                state.changed_cbs_triggered_at = state.time;
            }" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 26 (fontified t) 26 27 (fontified t syntax-table (1)) 27 86 (fontified t) 86 87 (fontified t face (rainbow-delimiters-depth-4-face)) 87 88 (fontified t) 88 104 (fontified t) 104 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t) 108 110 (fontified t face font-lock-variable-name-face) 110 111 (fontified t) 111 113 (fontified t face font-lock-keyword-face) 113 114 (fontified t) 114 115 (fontified t face rust-ampersand-face) 115 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-5-face)) 135 136 (fontified t) 136 158 (fontified t) 158 159 (fontified t face (rainbow-delimiters-depth-6-face)) 159 160 (fontified t face (rainbow-delimiters-depth-6-face)) 160 162 (fontified t) 162 178 (fontified t) 178 179 (fontified t face (rainbow-delimiters-depth-5-face)) 179 180 (fontified t) 180 241 (fontified t) 241 253 (fontified t) 253 254 (fontified t face (rainbow-delimiters-depth-4-face))) . 7797) (undo-tree-id641 . -254) (undo-tree-id642 . -254) (undo-tree-id643 . -254) (undo-tree-id644 . -15) (undo-tree-id645 . -20) (undo-tree-id646 . -29) (undo-tree-id647 . -34) (undo-tree-id648 . -62) (undo-tree-id649 . -67) (undo-tree-id650 . -116) (undo-tree-id651 . -121) (undo-tree-id652 . -196) (undo-tree-id653 . -201) (undo-tree-id654 . -229) (undo-tree-id655 . -234) (undo-tree-id656 . -254) (undo-tree-id657 . -254) (undo-tree-id658 . -254) (t 25364 40606 667715 133000)) nil (25364 40708 976443 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7796) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 7797) nil (25364 40708 976424 381000) 0 nil])
([nil nil ((#("            if state.time >= state.samples.len() {
                for cb in &*state.done_cbs {
                    cb();
                }
            }" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 26 (fontified t) 26 27 (fontified t syntax-table (1)) 27 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-4-face)) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face)) 50 51 (fontified t) 51 67 (fontified t) 67 70 (fontified t face font-lock-keyword-face) 70 71 (fontified t) 71 73 (fontified t face font-lock-variable-name-face) 73 74 (fontified t) 74 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 78 (fontified t face rust-ampersand-face) 78 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-5-face)) 95 96 (fontified t) 96 118 (fontified t) 118 119 (fontified t face (rainbow-delimiters-depth-6-face)) 119 120 (fontified t face (rainbow-delimiters-depth-6-face)) 120 122 (fontified t) 122 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-5-face)) 139 140 (fontified t) 140 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-4-face))) . 7643) (undo-tree-id679 . -153) (undo-tree-id680 . -153) (undo-tree-id681 . -153) (undo-tree-id682 . -153) (undo-tree-id683 . -153) (undo-tree-id684 . -153) (undo-tree-id685 . -15) (undo-tree-id686 . -20) (undo-tree-id687 . -29) (undo-tree-id688 . -34) (undo-tree-id689 . -79) (undo-tree-id690 . -84) (undo-tree-id691 . -153) (undo-tree-id692 . -153) (undo-tree-id693 . -153) (t 25364 40709 24388 83000)) nil (25364 40722 926761 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7653) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#(" " 0 1 (fontified t)) . -7654) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#(" " 0 1 (fontified t)) . -7655) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("
" 0 1 (fontified t)) . -7656) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) 7657) nil (25364 40722 926745 429000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7665) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) nil (25364 40722 926729 944000) 0 nil])
([nil nil ((#("                     " 0 1 (fontified t) 1 13 (fontified t) 13 21 (fontified t)) . -7652) (undo-tree-id659 . -13) (undo-tree-id660 . -1) (undo-tree-id661 . -20) 7665) nil (25364 40722 926723 30000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -7883) (undo-tree-id713 . -5) (undo-tree-id714 . -5) (undo-tree-id715 . -5) (undo-tree-id716 . -5) 7888 (t 25364 40722 947722 271000)) nil (25364 40732 676643 838000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -7880) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#(" " 0 1 (fontified t)) . -7881) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("&" 0 1 (fontified t)) . -7882) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) 7883) nil (25364 40732 676634 504000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -8099) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) 8104 (t 25364 40732 694389 535000)) nil (25364 40735 489803 394000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8096) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#(" " 0 1 (fontified t)) . -8097) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("&" 0 1 (fontified t)) . -8098) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) 8099) nil (25364 40735 489794 979000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -8315) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) 8320 (t 25364 40735 534389 710000)) nil (25364 40740 131300 588000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8312) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#(" " 0 1 (fontified t)) . -8313) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (#("&" 0 1 (fontified t)) . -8314) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) 8315) nil (25364 40740 131292 329000) 0 nil])
([nil nil ((#("state.time += 1;" 0 16 (fontified t)) . 7612) (undo-tree-id768 . -5) (undo-tree-id769 . -16) (undo-tree-id770 . -16) (t 25364 40740 177723 328000)) nil (25364 40759 166914 504000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7612) (undo-tree-id767 . -1)) nil (25364 40759 166908 953000) 0 nil])
([nil nil ((#("                " 0 4 (fontified t) 4 7 (fontified t) 7 14 (fontified t) 14 16 (fontified t)) . -7608) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -9) 7612) nil (25364 40759 166902 501000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7509) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) 7510 (t 25364 40759 187724 495000)) nil (25364 40766 333722 991000) 0 nil])
([nil nil ((7486 . 7489) (#("                       " 0 23 (fontified t)) . 7486) (undo-tree-id771 . -23) (undo-tree-id772 . -23) (undo-tree-id773 . -23) (undo-tree-id774 . -23) 7509) nil (25364 40766 333714 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (nil fontified nil 733 . 1006) (733 . 1006) (t 25364 40766 351058 268000)) nil (25364 40880 973819 227000) 0 nil])
([nil nil ((800 . 801) (t 25364 40880 991065 306000)) nil (25364 40894 168552 348000) 0 nil])
([nil nil ((845 . 846)) nil (25364 40894 168550 558000) 0 nil])
([nil nil ((883 . 884)) nil (25364 40894 168546 50000) 0 nil])
([nil nil ((7350 . 7351) (#("	" 0 1 (fontified nil)) . 7349) (undo-tree-id778 . -1) (7349 . 7351) (#("	" 0 1 (fontified nil)) . 7348) (7348 . 7349) (7348 . 7349) (t 25364 40894 214399 451000)) nil (25364 40943 703192 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7735 . 7736) (nil fontified nil 7349 . 7736) (7349 . 7736)) nil (25364 40943 703182 539000) 0 nil])
([nil nil ((7349 . 7350) (#("       " 0 7 (fontified t)) . 7349) 7383) nil (25364 40943 703177 97000) 0 nil])
([nil nil ((733 . 737) (t 25364 40943 721069 156000)) nil (25364 40964 554174 906000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -733) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("u" 0 1 (fontified t)) . -734) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("b" 0 1 (fontified t)) . -735) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (#(" " 0 1 (fontified t)) . -736) (undo-tree-id785 . -1) (undo-tree-id786 . -1) 737 (t 25364 40964 571070 436000)) nil (25364 40977 225282 492000) 0 nil])
([nil nil ((7468 . 7469) (t 25364 40977 271071 216000)) nil (25364 40991 656033 814000) 0 nil])
([nil nil ((7499 . 7500)) nil (25364 40991 656424 320000) 0 nil])
([nil nil ((7533 . 7534)) nil (25364 40996 851795 385000) 0 nil] [nil nil ((7500 . 7503)) ((#("
		" 0 3 (fontified t)) . 7500) (undo-tree-id787 . -3) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -3)) (25364 40991 656026 80000) 0 nil])
([nil nil ((7953 . 7954) (t 25364 40996 897739 86000)) nil (25364 41032 321514 772000) 0 nil])
nil
([nil nil ((7954 . 7955)) nil (25364 41032 321513 599000) 0 nil])
([nil nil ((7955 . 7959)) nil (25364 41032 321512 687000) 0 nil])
([nil nil ((7959 . 7961)) nil (25364 41032 321511 707000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -7956) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t)) . -7957) (undo-tree-id808 . -1) (#("t" 0 1 (fontified t)) . -7958) (undo-tree-id809 . -1) (#("e" 0 1 (fontified t)) . -7959) (undo-tree-id810 . -1) (#("r" 0 1 (fontified t)) . -7960) (undo-tree-id811 . -1) 7961) nil (25364 41032 321508 919000) 0 nil])
([nil nil ((#("        fn write_output_data<T>(output: &mut [T], channels: u16, w)
        where
            T: cpal::Sample,
        {
            for frame in output.chunks_mut(channels.into()) {
                for sample in frame.iter_mut() {
                    *sample =
			cpal::Sample::from(state.samples.get(state.time).unwrap_or(&0f32));
                }
            }

        }" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 19 (fontified t face font-lock-function-name-face) 19 28 (fontified t face font-lock-function-name-face) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face (rainbow-delimiters-depth-3-face)) 31 32 (fontified t face (rainbow-delimiters-depth-3-face)) 32 38 (fontified t face font-lock-variable-name-face) 38 40 (fontified t) 40 41 (fontified t face rust-ampersand-face) 41 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-4-face)) 46 47 (fontified t face font-lock-type-face) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 50 (fontified t) 50 58 (fontified t face font-lock-variable-name-face) 58 60 (fontified t) 60 63 (fontified t face font-lock-type-face) 63 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-3-face)) 67 68 (fontified t) 68 76 (fontified t) 76 81 (fontified t face font-lock-keyword-face) 81 94 (fontified t) 94 95 (fontified t face font-lock-variable-name-face) 95 97 (fontified t) 97 101 (fontified t face font-lock-constant-face) 101 103 (fontified t) 103 109 (fontified t face font-lock-type-face) 109 111 (fontified t) 111 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-3-face)) 120 121 (fontified t) 121 133 (fontified t) 133 136 (fontified t face font-lock-keyword-face) 136 137 (fontified t) 137 142 (fontified t face font-lock-variable-name-face) 142 143 (fontified t) 143 145 (fontified t face font-lock-keyword-face) 145 163 (fontified t) 163 164 (fontified t face (rainbow-delimiters-depth-4-face)) 164 177 (fontified t) 177 178 (fontified t face (rainbow-delimiters-depth-5-face)) 178 179 (fontified t face (rainbow-delimiters-depth-5-face)) 179 180 (fontified t face (rainbow-delimiters-depth-4-face)) 180 181 (fontified t) 181 182 (fontified t face (rainbow-delimiters-depth-4-face)) 182 183 (fontified t) 183 199 (fontified t) 199 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t) 203 209 (fontified t face font-lock-variable-name-face) 209 210 (fontified t) 210 212 (fontified t face font-lock-keyword-face) 212 227 (fontified t) 227 228 (fontified t face (rainbow-delimiters-depth-5-face)) 228 229 (fontified t face (rainbow-delimiters-depth-5-face)) 229 230 (fontified t) 230 231 (fontified t face (rainbow-delimiters-depth-5-face)) 231 232 (fontified t) 232 262 (fontified t) 262 265 (fontified t) 265 269 (fontified t face font-lock-constant-face) 269 271 (fontified t) 271 277 (fontified t face font-lock-type-face) 277 283 (fontified t) 283 284 (fontified t face (rainbow-delimiters-depth-6-face)) 284 299 (fontified t) 299 301 (fontified t) 301 302 (fontified t face (rainbow-delimiters-depth-7-face)) 302 312 (fontified t) 312 313 (fontified t face (rainbow-delimiters-depth-7-face)) 313 323 (fontified t) 323 324 (fontified t face (rainbow-delimiters-depth-7-face)) 324 325 (fontified t face rust-ampersand-face) 325 326 (fontified t) 326 329 (fontified t face font-lock-type-face) 329 330 (fontified t face (rainbow-delimiters-depth-7-face)) 330 331 (fontified t face (rainbow-delimiters-depth-6-face)) 331 333 (fontified t) 333 349 (fontified t) 349 350 (fontified t face (rainbow-delimiters-depth-5-face)) 350 351 (fontified t) 351 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t face (rainbow-delimiters-depth-4-face)) 364 365 (fontified t) 365 366 (fontified t) 366 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-3-face))) . 7890) (undo-tree-id791 . -375) (undo-tree-id792 . -365) (undo-tree-id793 . -374) (undo-tree-id794 . -120) (undo-tree-id795 . -365) (undo-tree-id796 . -365) (undo-tree-id797 . -365) (undo-tree-id798 . -365) (undo-tree-id799 . 309) (undo-tree-id800 . -66) (undo-tree-id801 . -67) (undo-tree-id802 . -284) (undo-tree-id803 . -289) (undo-tree-id804 . -302) (undo-tree-id805 . -307) (undo-tree-id806 . -375)) nil (25364 41032 321055 657000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9038 . 9039) (nil fontified nil 7890 . 9039) (7890 . 9039)) nil (25364 41040 607325 466000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -7468) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 7469 (t 25364 41032 367741 264000)) nil (25364 41067 508938 739000) 0 nil] [nil nil ((#("                    if state.time >= state.samples.len() {
                        for cb in &*state.done_cbs {
                            cb();
                        }
                    }
                    if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                        for cb in &*state.changed_cbs {
                            cb();
                        }
                        state.changed_cbs_triggered_at = state.time;" 0 20 (fontified t) 20 22 (fontified t face font-lock-keyword-face) 22 34 (fontified t) 34 35 (fontified t syntax-table (1)) 35 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-6-face)) 55 56 (fontified t face (rainbow-delimiters-depth-6-face)) 56 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-6-face)) 58 83 (fontified t) 83 86 (fontified t face font-lock-keyword-face) 86 87 (fontified t) 87 89 (fontified t face font-lock-variable-name-face) 89 90 (fontified t) 90 92 (fontified t face font-lock-keyword-face) 92 93 (fontified t) 93 94 (fontified t face rust-ampersand-face) 94 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-7-face)) 111 142 (fontified t) 142 143 (fontified t face (rainbow-delimiters-depth-8-face)) 143 144 (fontified t face (rainbow-delimiters-depth-8-face)) 144 170 (fontified t) 170 171 (fontified t face (rainbow-delimiters-depth-7-face)) 171 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-6-face)) 193 214 (fontified t) 214 216 (fontified t face font-lock-keyword-face) 216 228 (fontified t) 228 229 (fontified t syntax-table (1)) 229 288 (fontified t) 288 289 (fontified t face (rainbow-delimiters-depth-6-face)) 289 314 (fontified t) 314 317 (fontified t face font-lock-keyword-face) 317 318 (fontified t) 318 320 (fontified t face font-lock-variable-name-face) 320 321 (fontified t) 321 323 (fontified t face font-lock-keyword-face) 323 324 (fontified t) 324 325 (fontified t face rust-ampersand-face) 325 344 (fontified t) 344 345 (fontified t face (rainbow-delimiters-depth-7-face)) 345 376 (fontified t) 376 377 (fontified t face (rainbow-delimiters-depth-8-face)) 377 378 (fontified t face (rainbow-delimiters-depth-8-face)) 378 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-7-face)) 405 474 (fontified t)) . 8501) (undo-tree-id812 . -474) (undo-tree-id813 . -101) (undo-tree-id814 . -109) (undo-tree-id815 . -101) (undo-tree-id816 . -109) (undo-tree-id817 . -237) (undo-tree-id818 . -261) (undo-tree-id819 . -237) (undo-tree-id820 . -261) (undo-tree-id821 . -332) (undo-tree-id822 . -343) (undo-tree-id823 . -332) (undo-tree-id824 . -343) (undo-tree-id825 . -436) (undo-tree-id826 . -460) (undo-tree-id827 . -436) (undo-tree-id828 . -460) (undo-tree-id829 . -474) (undo-tree-id830 . -474) (t 25364 41032 367741 264000)) ((8501 . 8975)) (25364 41040 606029 567000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -7532) (undo-tree-id833 . -1) (undo-tree-id834 . -1) 7533) nil (25364 41067 508934 933000) 0 nil])
nil
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -7498) (undo-tree-id831 . -1) (undo-tree-id832 . -1) 7499) nil (25364 41067 508928 424000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -800) (undo-tree-id841 . -1) (undo-tree-id842 . -1) 801 (t 25364 41067 527743 422000)) nil (25364 41075 28222 709000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -844) (undo-tree-id839 . -1) (undo-tree-id840 . -1) 845) nil (25364 41075 28218 557000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -881) (undo-tree-id837 . -1) (undo-tree-id838 . -1) 882) nil (25364 41075 28212 198000) 0 nil])
([nil nil ((#("#[macro_use]
extern crate log;" 0 1 (fontified t face font-lock-preprocessor-face) 1 2 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 2 11 (fontified t face font-lock-preprocessor-face) 11 12 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 12 13 (fontified t) 13 19 (fontified t face font-lock-keyword-face) 19 20 (fontified t) 20 25 (fontified t face font-lock-keyword-face) 25 29 (fontified t) 29 30 (rear-nonsticky t fontified t)) . 614) (undo-tree-id849 . -30) (undo-tree-id850 . -12) (undo-tree-id851 . -30) (undo-tree-id852 . -30) (t 25364 41075 81077 219000)) nil (25364 41089 399079 808000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -613) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) 614) nil (25364 41089 399072 645000) 0 nil])
([nil nil ((#("            cpal::SampleFormat::F32 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<f32>(data, channels),
                err_fn,
            )?,
            cpal::SampleFormat::I16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<i16>(data, channels),
                err_fn,
            )?,
            cpal::SampleFormat::U16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<u16>(data, channels),
                err_fn,
            )?," 0 12 (fontified t) 12 16 (fontified t face font-lock-constant-face) 16 18 (fontified t) 18 30 (fontified t face font-lock-type-face) 30 32 (fontified t) 32 35 (fontified t face font-lock-type-face) 35 37 (fontified t) 37 38 (syntax-table (1) fontified t) 38 56 (fontified t) 56 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-4-face)) 66 67 (fontified t) 67 83 (fontified t) 83 84 (fontified t face rust-ampersand-face) 84 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-5-face)) 96 97 (fontified t face (rainbow-delimiters-depth-5-face)) 97 98 (fontified t) 98 99 (fontified t) 99 106 (fontified t) 106 115 (fontified t) 115 119 (fontified t face font-lock-keyword-face) 119 127 (fontified t) 127 128 (fontified t face font-lock-variable-name-face) 128 130 (fontified t) 130 131 (fontified t face rust-ampersand-face) 131 143 (fontified t) 143 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-5-face)) 154 157 (fontified t face font-lock-type-face) 157 158 (fontified t face (rainbow-delimiters-depth-5-face)) 158 159 (fontified t face (rainbow-delimiters-depth-5-face)) 159 173 (fontified t) 173 174 (fontified t face (rainbow-delimiters-depth-5-face)) 174 176 (fontified t) 176 177 (fontified t) 177 200 (fontified t) 200 212 (fontified t) 212 213 (fontified t face (rainbow-delimiters-depth-4-face)) 213 214 (fontified t face rust-question-mark) 214 228 (fontified t) 228 232 (fontified t face font-lock-constant-face) 232 234 (fontified t) 234 246 (fontified t face font-lock-type-face) 246 248 (fontified t) 248 251 (fontified t face font-lock-type-face) 251 253 (fontified t) 253 254 (syntax-table (1) fontified t) 254 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-4-face)) 282 299 (fontified t) 299 300 (fontified t face rust-ampersand-face) 300 308 (fontified t) 308 311 (fontified t) 311 312 (fontified t face (rainbow-delimiters-depth-5-face)) 312 313 (fontified t face (rainbow-delimiters-depth-5-face)) 313 315 (fontified t) 315 331 (fontified t) 331 335 (fontified t face font-lock-keyword-face) 335 343 (fontified t) 343 344 (fontified t face font-lock-variable-name-face) 344 346 (fontified t) 346 347 (fontified t face rust-ampersand-face) 347 369 (fontified t) 369 370 (fontified t face (rainbow-delimiters-depth-5-face)) 370 373 (fontified t face font-lock-type-face) 373 374 (fontified t face (rainbow-delimiters-depth-5-face)) 374 375 (fontified t face (rainbow-delimiters-depth-5-face)) 375 384 (fontified t) 384 389 (fontified t) 389 390 (fontified t face (rainbow-delimiters-depth-5-face)) 390 392 (fontified t) 392 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-4-face)) 429 430 (fontified t face rust-question-mark) 430 444 (fontified t) 444 448 (fontified t face font-lock-constant-face) 448 450 (fontified t) 450 462 (fontified t face font-lock-type-face) 462 464 (fontified t) 464 467 (fontified t face font-lock-type-face) 467 469 (fontified t) 469 470 (syntax-table (1) fontified t) 470 497 (fontified t) 497 498 (fontified t face (rainbow-delimiters-depth-4-face)) 498 515 (fontified t) 515 516 (fontified t face rust-ampersand-face) 516 527 (fontified t) 527 528 (fontified t face (rainbow-delimiters-depth-5-face)) 528 529 (fontified t face (rainbow-delimiters-depth-5-face)) 529 531 (fontified t) 531 539 (fontified t) 539 547 (fontified t) 547 551 (fontified t face font-lock-keyword-face) 551 559 (fontified t) 559 560 (fontified t face font-lock-variable-name-face) 560 561 (fontified t) 561 562 (fontified t) 562 563 (fontified t face rust-ampersand-face) 563 565 (fontified t) 565 585 (fontified t) 585 586 (fontified t face (rainbow-delimiters-depth-5-face)) 586 589 (fontified t face font-lock-type-face) 589 590 (fontified t face (rainbow-delimiters-depth-5-face)) 590 591 (fontified t face (rainbow-delimiters-depth-5-face)) 591 605 (fontified t) 605 606 (fontified t face (rainbow-delimiters-depth-5-face)) 606 607 (fontified t) 607 608 (fontified t) 608 644 (fontified t) 644 645 (fontified t face (rainbow-delimiters-depth-4-face)) 645 646 (fontified t face rust-question-mark) 646 647 (fontified t)) . 9056) (undo-tree-id853 . -647) (undo-tree-id854 . -390) (undo-tree-id855 . -606) (undo-tree-id856 . -647) (undo-tree-id857 . -173) (undo-tree-id858 . -174) (undo-tree-id859 . -134) (undo-tree-id860 . -158) (undo-tree-id861 . -158) (undo-tree-id862 . -174) (undo-tree-id863 . -134) (undo-tree-id864 . -174) (undo-tree-id865 . -389) (undo-tree-id866 . -390) (undo-tree-id867 . -350) (undo-tree-id868 . -374) (undo-tree-id869 . -374) (undo-tree-id870 . -390) (undo-tree-id871 . -350) (undo-tree-id872 . -390) (undo-tree-id873 . -605) (undo-tree-id874 . -606) (undo-tree-id875 . -566) (undo-tree-id876 . -590) (undo-tree-id877 . -590) (undo-tree-id878 . -606) (undo-tree-id879 . -566) (undo-tree-id880 . -606) (undo-tree-id881 . -647) (undo-tree-id882 . -647) (t 25364 41089 417744 766000)) nil (25364 41122 993994 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9726 . 9727) (nil fontified nil 9056 . 9727) (9056 . 9727)) nil (25364 41122 993955 175000) 0 nil])
([nil nil ((976 . 978) (t 25364 41123 14413 495000)) nil (25364 41181 796674 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1054 . 1055) (nil fontified nil 977 . 1055) (977 . 1055)) nil (25364 41181 796668 957000) 0 nil])
([nil nil ((1056 . 1058) (t 25364 41181 817750 438000)) nil (25364 41204 704457 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1867 . 1868) (nil fontified nil 1057 . 1868) (1057 . 1868)) nil (25364 41204 704455 815000) 0 nil])
([nil nil ((#("
    pub fn seek(&self, time_percent: f64) {
        let mut state = self.state.lock().unwrap();
        let state = state.as_mut().unwrap();
        state.time = (time_percent * (state.samples.len() as f64)) as usize;
        state.changed_cbs_triggered_at = 0;
    }" 0 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 18 (fontified t face rust-ampersand-face) 18 22 (fontified t face font-lock-keyword-face) 22 24 (fontified t) 24 36 (fontified t face font-lock-variable-name-face) 36 38 (fontified t) 38 41 (fontified t face font-lock-type-face) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 53 (fontified t) 53 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 60 (fontified t face font-lock-keyword-face) 60 61 (fontified t) 61 66 (fontified t face font-lock-variable-name-face) 66 69 (fontified t) 69 73 (fontified t face font-lock-keyword-face) 73 84 (fontified t) 84 85 (fontified t face (rainbow-delimiters-depth-3-face)) 85 86 (fontified t face (rainbow-delimiters-depth-3-face)) 86 93 (fontified t) 93 94 (fontified t face (rainbow-delimiters-depth-3-face)) 94 95 (fontified t face (rainbow-delimiters-depth-3-face)) 95 105 (fontified t) 105 108 (fontified t face font-lock-keyword-face) 108 109 (fontified t) 109 114 (fontified t face font-lock-variable-name-face) 114 129 (fontified t) 129 130 (fontified t face (rainbow-delimiters-depth-3-face)) 130 131 (fontified t face (rainbow-delimiters-depth-3-face)) 131 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-3-face)) 139 140 (fontified t face (rainbow-delimiters-depth-3-face)) 140 163 (fontified t) 163 164 (fontified t face (rainbow-delimiters-depth-3-face)) 164 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-4-face)) 180 197 (fontified t) 197 198 (fontified t face (rainbow-delimiters-depth-5-face)) 198 199 (fontified t face (rainbow-delimiters-depth-5-face)) 199 200 (fontified t) 200 202 (fontified t face font-lock-keyword-face) 202 203 (fontified t) 203 206 (fontified t face font-lock-type-face) 206 207 (fontified t face (rainbow-delimiters-depth-4-face)) 207 208 (fontified t face (rainbow-delimiters-depth-3-face)) 208 209 (fontified t) 209 211 (fontified t face font-lock-keyword-face) 211 212 (fontified t) 212 217 (fontified t face font-lock-type-face) 217 267 (fontified t) 267 268 (fontified t face (rainbow-delimiters-depth-2-face))) . 1598) (undo-tree-id883 . -268) (undo-tree-id884 . -268) (undo-tree-id885 . -268)) nil (25364 41204 704449 938000) 0 nil])
([nil nil ((89 . 95) (t 25364 41204 724418 512000)) nil (25364 41241 312119 994000) 0 nil])
([nil nil ((91 . 97) (#("Stre" 0 4 (fontified nil)) . 91) (91 . 95) (#("Stream" 0 6 (fontified nil)) . -91) (91 . 97) (#("Stre" 0 4 (fontified t face font-lock-type-face)) . -91) (undo-tree-id886 . -4) (undo-tree-id887 . -3) (undo-tree-id888 . -3) 95) nil (25364 41241 312113 836000) 0 nil])
([nil nil ((#("    pub fn export(&self, path: &str) -> Result<()> {
        if !path.ends_with(\".wav\") {
            return Err(eyre!(\"Expected {} to end in .wav\", path));
        }

        let spec = hound::WavSpec {
            channels: 1,
            sample_rate: self.sample_rate,
            bits_per_sample: 32,
            sample_format: hound::SampleFormat::Float,
        };

        let mut writer = hound::WavWriter::create(path, spec)?;
        for sample in &self.samples {
            writer.write_sample(*sample)?;
        }

        writer.finalize()?;

        Ok(())
    }" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 19 (fontified t face rust-ampersand-face) 19 23 (fontified t face font-lock-keyword-face) 23 25 (fontified t) 25 29 (fontified t face font-lock-variable-name-face) 29 31 (fontified t) 31 32 (fontified t face rust-ampersand-face) 32 35 (fontified t face font-lock-type-face) 35 36 (fontified t face (rainbow-delimiters-depth-2-face)) 36 38 (fontified t) 38 39 (syntax-table (1) fontified t) 39 40 (fontified t) 40 46 (fontified t face font-lock-type-face) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 48 (fontified t face (rainbow-delimiters-depth-3-face)) 48 49 (fontified t face (rainbow-delimiters-depth-3-face)) 49 50 (fontified t face (rainbow-delimiters-depth-2-face)) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 53 (fontified t) 53 61 (fontified t) 61 63 (fontified t face font-lock-keyword-face) 63 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-3-face)) 80 86 (fontified t face font-lock-string-face) 86 87 (fontified t face (rainbow-delimiters-depth-3-face)) 87 88 (fontified t) 88 89 (fontified t face (rainbow-delimiters-depth-3-face)) 89 100 (fontified t) 100 102 (fontified t) 102 108 (fontified t face font-lock-keyword-face) 108 109 (fontified t) 109 112 (fontified t face font-lock-type-face) 112 113 (fontified t face (rainbow-delimiters-depth-4-face)) 113 118 (fontified t face font-lock-preprocessor-face) 118 119 (fontified t face (rainbow-delimiters-depth-5-face)) 119 134 (fontified t face font-lock-string-face) 134 136 (fontified t face font-lock-string-face) 136 147 (fontified t face font-lock-string-face) 147 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-5-face)) 154 155 (fontified t face (rainbow-delimiters-depth-4-face)) 155 157 (fontified t) 157 159 (fontified t) 159 165 (fontified t) 165 166 (fontified t face (rainbow-delimiters-depth-3-face)) 166 167 (fontified t) 167 176 (fontified t) 176 179 (fontified t face font-lock-keyword-face) 179 180 (fontified t) 180 184 (fontified t face font-lock-variable-name-face) 184 187 (fontified t) 187 192 (fontified t face font-lock-constant-face) 192 194 (fontified t) 194 201 (fontified t face font-lock-type-face) 201 202 (fontified t) 202 203 (fontified t face (rainbow-delimiters-depth-3-face)) 203 212 (fontified t) 212 216 (fontified t) 216 224 (face font-lock-variable-name-face fontified t) 224 229 (fontified t) 229 241 (fontified t) 241 252 (fontified t face font-lock-variable-name-face) 252 254 (fontified t) 254 258 (fontified t face font-lock-keyword-face) 258 284 (fontified t) 284 289 (fontified t face font-lock-variable-name-face) 289 299 (fontified t face font-lock-variable-name-face) 299 305 (fontified t) 305 317 (fontified t) 317 330 (fontified t face font-lock-variable-name-face) 330 332 (fontified t) 332 337 (fontified t face font-lock-constant-face) 337 339 (fontified t) 339 351 (fontified t face font-lock-type-face) 351 353 (fontified t) 353 355 (fontified t face font-lock-type-face) 355 358 (fontified t face font-lock-type-face) 358 360 (fontified t) 360 368 (fontified t) 368 369 (fontified t face (rainbow-delimiters-depth-3-face)) 369 380 (fontified t) 380 383 (fontified t face font-lock-keyword-face) 383 384 (fontified t) 384 387 (fontified t face font-lock-keyword-face) 387 388 (fontified t) 388 394 (fontified t face font-lock-variable-name-face) 394 397 (fontified t) 397 402 (fontified t face font-lock-constant-face) 402 404 (fontified t) 404 413 (fontified t face font-lock-type-face) 413 421 (fontified t) 421 422 (fontified t face (rainbow-delimiters-depth-3-face)) 422 432 (fontified t) 432 433 (fontified t face (rainbow-delimiters-depth-3-face)) 433 434 (fontified t face rust-question-mark) 434 444 (fontified t) 444 447 (fontified t face font-lock-keyword-face) 447 448 (fontified t) 448 454 (fontified t face font-lock-variable-name-face) 454 455 (fontified t) 455 457 (fontified t face font-lock-keyword-face) 457 458 (fontified t) 458 459 (fontified t face rust-ampersand-face) 459 463 (fontified t face font-lock-keyword-face) 463 472 (fontified t) 472 473 (fontified t face (rainbow-delimiters-depth-3-face)) 473 505 (fontified t) 505 506 (fontified t face (rainbow-delimiters-depth-4-face)) 506 513 (fontified t) 513 514 (fontified t face (rainbow-delimiters-depth-4-face)) 514 515 (fontified t face rust-question-mark) 515 525 (fontified t) 525 526 (fontified t face (rainbow-delimiters-depth-3-face)) 526 551 (fontified t) 551 552 (fontified t face (rainbow-delimiters-depth-3-face)) 552 553 (fontified t face (rainbow-delimiters-depth-3-face)) 553 554 (fontified t face rust-question-mark) 554 565 (fontified t) 565 567 (fontified t face font-lock-type-face) 567 568 (fontified t face (rainbow-delimiters-depth-3-face)) 568 569 (fontified t face (rainbow-delimiters-depth-4-face)) 569 570 (fontified t face (rainbow-delimiters-depth-4-face)) 570 571 (fontified t face (rainbow-delimiters-depth-3-face)) 571 572 (fontified t) 572 576 (fontified t) 576 577 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 10497) (undo-tree-id893 . -577) (undo-tree-id894 . -11) (undo-tree-id895 . -187) (undo-tree-id896 . -192) (undo-tree-id897 . -332) (undo-tree-id898 . -337) (undo-tree-id899 . -397) (undo-tree-id900 . -402) (undo-tree-id901 . -577) (undo-tree-id902 . -577) (t 25364 41241 331087 425000)) nil (25364 41275 333019 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10496) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) 10497) nil (25364 41275 333005 167000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -7583) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -7584) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . 1) (undo-tree-id914 . -1) 7585 (t 25364 41275 354422 847000)) nil (25364 41303 384822 263000) 0 nil])
([nil nil ((7583 . 7585)) nil (25364 41303 384808 123000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-type-face)) . -7583) (undo-tree-id906 . -1) (#("P" 0 1 (fontified t face font-lock-type-face)) . -7584) (undo-tree-id907 . -1) 7585) nil (25364 41303 384805 668000) 0 nil])
([nil nil ((7583 . 7587)) nil (25364 41303 384799 759000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -7585) (undo-tree-id904 . -1) (#("a" 0 1 (fontified t)) . -7586) (undo-tree-id905 . -1) 7587) nil (25364 41303 384797 11000) 0 nil])
([nil nil ((7585 . 7587)) nil (25364 41303 384789 728000) 0 nil])
([nil nil ((7583 . 7593) (#("Play" 0 4 (fontified nil)) . 7583) (7583 . 7587) (#("PlayHandle" 0 10 (fontified nil)) . -7583) (7583 . 7593) (#("Play" 0 4 (fontified t face font-lock-type-face)) . -7583) (undo-tree-id903 . -4) 7587) nil (25364 41303 384782 521000) 0 nil])
([nil nil ((#("

fn write_silence<T: Sample>(data: &mut [T], info: &cpal::OutputCallbackInfo) {
    for frame in data.chunks_mut(2) {
	for sample in frame.iter_mut() {
            *sample = Sample::from(&0.0);
	}	
    }

    println!(\"{:?}\",info.timestamp());
}" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 18 (fontified t face font-lock-function-name-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 20 (fontified t face font-lock-variable-name-face) 20 22 (fontified t) 22 23 (fontified t face font-lock-type-face) 23 28 (fontified t face font-lock-type-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 30 (fontified t face (rainbow-delimiters-depth-1-face)) 30 34 (fontified t face font-lock-variable-name-face) 34 36 (fontified t) 36 37 (fontified t face rust-ampersand-face) 37 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t face font-lock-type-face) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 46 (fontified t) 46 49 (fontified t face font-lock-variable-name-face) 49 50 (fontified t face font-lock-variable-name-face) 50 52 (fontified t) 52 53 (fontified t face rust-ampersand-face) 53 57 (fontified t face font-lock-constant-face) 57 59 (fontified t) 59 63 (fontified t face font-lock-type-face) 63 72 (fontified t face font-lock-type-face) 72 77 (fontified t face font-lock-type-face) 77 78 (fontified t face (rainbow-delimiters-depth-1-face)) 78 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-1-face)) 80 81 (fontified t) 81 83 (fontified t) 83 85 (fontified t) 85 88 (fontified t face font-lock-keyword-face) 88 89 (fontified t) 89 94 (fontified t face font-lock-variable-name-face) 94 95 (fontified t) 95 97 (fontified t face font-lock-keyword-face) 97 98 (fontified t) 98 112 (fontified t) 112 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) fontified t) 114 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-2-face) fontified t) 116 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-2-face) fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 123 (fontified t face font-lock-keyword-face) 123 124 (fontified t) 124 130 (fontified t face font-lock-variable-name-face) 130 131 (fontified t) 131 133 (fontified t face font-lock-keyword-face) 133 148 (fontified t) 148 149 (fontified t face (rainbow-delimiters-depth-3-face)) 149 150 (fontified t face (rainbow-delimiters-depth-3-face)) 150 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-3-face)) 152 175 (fontified t) 175 181 (fontified t face font-lock-type-face) 181 187 (fontified t) 187 188 (fontified t face (rainbow-delimiters-depth-4-face)) 188 189 (fontified t face rust-ampersand-face) 189 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-4-face)) 193 196 (fontified t) 196 197 (fontified t face (rainbow-delimiters-depth-3-face)) 197 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-2-face)) 204 205 (fontified t) 205 210 (fontified t) 210 216 (fontified t face rust-builtin-formatting-macro) 216 218 (fontified t face rust-builtin-formatting-macro) 218 219 (fontified t face (rainbow-delimiters-depth-2-face)) 219 220 (fontified t face font-lock-string-face) 220 224 (fontified t face rust-string-interpolation) 224 225 (fontified t face font-lock-string-face) 225 240 (fontified t) 240 241 (fontified t face (rainbow-delimiters-depth-3-face)) 241 242 (fontified t face (rainbow-delimiters-depth-3-face)) 242 243 (fontified t face (rainbow-delimiters-depth-2-face)) 243 245 (fontified t) 245 246 (fontified t face (rainbow-delimiters-depth-1-face))) . 10507) (undo-tree-id915 . -246) (undo-tree-id916 . -5) (undo-tree-id917 . -246) (undo-tree-id918 . -246) (t 25364 41303 407757 902000)) nil (25364 41314 490824 917000) 0 nil])
([nil nil ((#("    env_logger::init();
    let host = cpal::default_host();
    let device = host.default_output_device().expect(\"no output device available\");
    let err_fn = |err| eprintln!(\"an error occurred on the output audio stream: {}\", err);
    let config = device.default_output_config().unwrap();
    println!(\"Default output config: {:?}\", config);
    let stream = match config.sample_format() {
	SampleFormat::F32 => device.build_output_stream(&config.into(), write_silence::<f32>, err_fn),
	SampleFormat::I16 => device.build_output_stream(&config.into(), write_silence::<i16>, err_fn),
	SampleFormat::U16 => device.build_output_stream(&config.into(), write_silence::<u16>, err_fn),
}.unwrap();
    stream.play()?;
    std::thread::sleep(std::time::Duration::from_secs(1));
    stream.pause()?;
    std::thread::sleep(std::time::Duration::from_secs(3));
    stream.play()?;
    std::thread::sleep(std::time::Duration::from_secs(1));" 0 4 (fontified t) 4 14 (fontified t face font-lock-constant-face) 14 16 (fontified t) 16 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (fontified t face (rainbow-delimiters-depth-2-face)) 22 23 (fontified t) 23 24 (fontified t) 24 28 (fontified t) 28 30 (fontified t face font-lock-keyword-face) 30 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t) 32 36 (fontified t face font-lock-variable-name-face) 36 39 (fontified t) 39 43 (fontified t face font-lock-constant-face) 43 51 (fontified t) 51 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 59 (fontified t face (rainbow-delimiters-depth-2-face)) 59 61 (fontified t) 61 65 (fontified t) 65 68 (fontified t face font-lock-keyword-face) 68 69 (fontified t) 69 75 (fontified t face font-lock-variable-name-face) 75 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-2-face)) 105 106 (fontified t face (rainbow-delimiters-depth-2-face)) 106 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-2-face)) 114 125 (fontified t face font-lock-string-face) 125 142 (fontified t face font-lock-string-face) 142 143 (fontified t face (rainbow-delimiters-depth-2-face)) 143 145 (fontified t) 145 149 (fontified t) 149 152 (fontified t face font-lock-keyword-face) 152 153 (fontified t) 153 159 (fontified t face font-lock-variable-name-face) 159 168 (fontified t) 168 177 (fontified t face rust-builtin-formatting-macro) 177 178 (fontified t face (rainbow-delimiters-depth-2-face)) 178 225 (fontified t face font-lock-string-face) 225 227 (fontified t face rust-string-interpolation) 227 228 (fontified t face font-lock-string-face) 228 233 (fontified t) 233 234 (fontified t face (rainbow-delimiters-depth-2-face)) 234 240 (fontified t) 240 243 (fontified t face font-lock-keyword-face) 243 244 (fontified t) 244 246 (fontified t face font-lock-variable-name-face) 246 250 (fontified t face font-lock-variable-name-face) 250 262 (fontified t) 262 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-2-face)) 282 283 (fontified t face (rainbow-delimiters-depth-2-face)) 283 290 (fontified t) 290 291 (fontified t face (rainbow-delimiters-depth-2-face)) 291 292 (fontified t face (rainbow-delimiters-depth-2-face)) 292 294 (fontified t) 294 298 (fontified t) 298 306 (fontified t face rust-builtin-formatting-macro) 306 307 (fontified t face (rainbow-delimiters-depth-2-face)) 307 331 (fontified t face font-lock-string-face) 331 335 (fontified t face rust-string-interpolation) 335 336 (fontified t face font-lock-string-face) 336 344 (fontified t) 344 345 (fontified t face (rainbow-delimiters-depth-2-face)) 345 351 (fontified t) 351 354 (fontified t face font-lock-keyword-face) 354 355 (fontified t) 355 356 (fontified t face font-lock-variable-name-face) 356 358 (fontified t face font-lock-variable-name-face) 358 360 (fontified t face font-lock-variable-name-face) 360 361 (fontified t face font-lock-variable-name-face) 361 364 (fontified t) 364 369 (fontified t face font-lock-keyword-face) 369 390 (fontified t) 390 391 (fontified t face (rainbow-delimiters-depth-2-face)) 391 392 (fontified t face (rainbow-delimiters-depth-2-face)) 392 393 (fontified t) 393 394 (fontified t face (rainbow-delimiters-depth-2-face)) 394 395 (fontified t) 395 396 (fontified t) 396 408 (fontified t face font-lock-type-face) 408 410 (fontified t) 410 413 (fontified t face font-lock-type-face) 413 415 (fontified t) 415 416 (syntax-table (1) fontified t) 416 443 (fontified t) 443 444 (fontified t face (rainbow-delimiters-depth-3-face)) 444 445 (fontified t face rust-ampersand-face) 445 456 (fontified t) 456 457 (fontified t face (rainbow-delimiters-depth-4-face)) 457 458 (fontified t face (rainbow-delimiters-depth-4-face)) 458 470 (fontified t) 470 475 (fontified t) 475 476 (fontified t face (rainbow-delimiters-depth-4-face)) 476 479 (fontified t face font-lock-type-face) 479 480 (fontified t face (rainbow-delimiters-depth-4-face)) 480 488 (fontified t) 488 489 (fontified t face (rainbow-delimiters-depth-3-face)) 489 491 (fontified t) 491 492 (fontified t) 492 504 (fontified t face font-lock-type-face) 504 506 (fontified t) 506 509 (fontified t face font-lock-type-face) 509 510 (fontified t) 510 511 (fontified t) 511 512 (fontified t syntax-table (1)) 512 539 (fontified t) 539 540 (fontified t face (rainbow-delimiters-depth-3-face)) 540 541 (fontified t face rust-ampersand-face) 541 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-4-face)) 553 554 (fontified t face (rainbow-delimiters-depth-4-face)) 554 571 (fontified t) 571 572 (fontified t face (rainbow-delimiters-depth-4-face)) 572 575 (fontified t face font-lock-type-face) 575 576 (fontified t face (rainbow-delimiters-depth-4-face)) 576 584 (fontified t) 584 585 (fontified t face (rainbow-delimiters-depth-3-face)) 585 587 (fontified t) 587 588 (fontified t) 588 600 (fontified t face font-lock-type-face) 600 602 (fontified t) 602 605 (fontified t face font-lock-type-face) 605 607 (fontified t) 607 608 (fontified t syntax-table (1)) 608 622 (fontified t) 622 635 (fontified t) 635 636 (fontified t face (rainbow-delimiters-depth-3-face)) 636 637 (fontified t face rust-ampersand-face) 637 648 (fontified t) 648 649 (fontified t face (rainbow-delimiters-depth-4-face)) 649 650 (fontified t face (rainbow-delimiters-depth-4-face)) 650 667 (fontified t) 667 668 (fontified t face (rainbow-delimiters-depth-4-face)) 668 671 (fontified t face font-lock-type-face) 671 672 (fontified t face (rainbow-delimiters-depth-4-face)) 672 680 (fontified t) 680 681 (fontified t face (rainbow-delimiters-depth-3-face)) 681 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-2-face)) 684 691 (fontified t) 691 692 (fontified t face (rainbow-delimiters-depth-2-face)) 692 693 (fontified t face (rainbow-delimiters-depth-2-face)) 693 710 (fontified t) 710 711 (fontified t face (rainbow-delimiters-depth-2-face)) 711 712 (fontified t face (rainbow-delimiters-depth-2-face)) 712 713 (fontified t face rust-question-mark) 713 719 (fontified t) 719 722 (fontified t face font-lock-constant-face) 722 724 (fontified t) 724 730 (fontified t face font-lock-constant-face) 730 737 (fontified t) 737 738 (fontified t face (rainbow-delimiters-depth-2-face)) 738 741 (fontified t face font-lock-constant-face) 741 743 (fontified t) 743 747 (fontified t face font-lock-constant-face) 747 749 (fontified t) 749 757 (fontified t face font-lock-type-face) 757 768 (fontified t) 768 769 (fontified t face (rainbow-delimiters-depth-3-face)) 769 770 (fontified t) 770 771 (fontified t face (rainbow-delimiters-depth-3-face)) 771 772 (fontified t face (rainbow-delimiters-depth-2-face)) 772 790 (fontified t) 790 791 (fontified t face (rainbow-delimiters-depth-2-face)) 791 792 (fontified t face (rainbow-delimiters-depth-2-face)) 792 793 (fontified t face rust-question-mark) 793 799 (fontified t) 799 802 (fontified t face font-lock-constant-face) 802 804 (fontified t) 804 810 (fontified t face font-lock-constant-face) 810 817 (fontified t) 817 818 (fontified t face (rainbow-delimiters-depth-2-face)) 818 821 (fontified t face font-lock-constant-face) 821 823 (fontified t) 823 827 (fontified t face font-lock-constant-face) 827 829 (fontified t) 829 837 (fontified t face font-lock-type-face) 837 848 (fontified t) 848 849 (fontified t face (rainbow-delimiters-depth-3-face)) 849 850 (fontified t) 850 851 (fontified t face (rainbow-delimiters-depth-3-face)) 851 852 (fontified t face (rainbow-delimiters-depth-2-face)) 852 869 (fontified t) 869 870 (fontified t face (rainbow-delimiters-depth-2-face)) 870 871 (fontified t face (rainbow-delimiters-depth-2-face)) 871 872 (fontified t face rust-question-mark) 872 878 (fontified t) 878 881 (fontified t face font-lock-constant-face) 881 883 (fontified t) 883 889 (fontified t face font-lock-constant-face) 889 896 (fontified t) 896 897 (fontified t face (rainbow-delimiters-depth-2-face)) 897 900 (fontified t face font-lock-constant-face) 900 902 (fontified t) 902 906 (fontified t face font-lock-constant-face) 906 908 (fontified t) 908 916 (fontified t face font-lock-type-face) 916 927 (fontified t) 927 928 (fontified t face (rainbow-delimiters-depth-3-face)) 928 929 (fontified t) 929 930 (fontified t face (rainbow-delimiters-depth-3-face)) 930 931 (fontified t face (rainbow-delimiters-depth-2-face)) 931 932 (fontified t)) . 10535) (undo-tree-id919 . -932) (undo-tree-id920 . -276) (undo-tree-id921 . -460) (undo-tree-id922 . -473) (undo-tree-id923 . -556) (undo-tree-id924 . -569) (undo-tree-id925 . -652) (undo-tree-id926 . -665) (undo-tree-id927 . -932) (undo-tree-id928 . -932) (t 25364 41314 511091 917000)) nil (25364 41324 129078 350000) 0 nil])
([nil nil ((10535 . 10539) (t 25364 41324 147759 176000)) nil (25364 41381 60389 144000) 0 nil])
([nil nil ((10539 . 10547)) nil (25364 41381 60388 85000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -10545) (undo-tree-id936 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -10546) (undo-tree-id937 . -1) 10547) nil (25364 41381 60386 857000) 0 nil])
([nil nil ((10545 . 10554)) nil (25364 41381 60383 256000) 0 nil])
([nil nil ((10550 . 10559) (#("Audi" 0 4 (fontified nil)) . 10550) (10550 . 10554) (#("AudioClip" 0 9 (fontified nil)) . -10550) (10550 . 10559) (#("Audi" 0 4 (fontified t face font-lock-type-face)) . -10550) (undo-tree-id935 . -4) 10554) nil (25364 41381 60381 585000) 0 nil])
([nil nil ((10559 . 10560)) nil (25364 41381 60378 662000) 0 nil])
([nil nil ((10560 . 10561)) nil (25364 41381 60377 745000) 0 nil])
([nil nil ((10561 . 10567) (#("import" 0 6 (fontified nil)) . -10561) (10561 . 10567)) nil (25364 41381 60376 550000) 0 nil])
([nil nil ((10567 . 10569)) nil (25364 41381 60375 286000) 0 nil])
([nil nil ((10569 . 10573) (10568 . 10570) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10568) (10568 . 10569)) nil (25364 41381 60374 81000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41381 60372 614000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-type-face)) . -10575) (undo-tree-id933 . -1) (undo-tree-id934 . -1) 10576) nil (25364 41381 60371 249000) 0 nil])
([nil nil ((10575 . 10576)) nil (25364 41381 60367 960000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10575) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 10576) nil (25364 41381 60366 210000) 0 nil])
([nil nil ((10575 . 10577) (#("\"" 0 1 (fontified nil)) . -10575) (10575 . 10576)) nil (25364 41381 60354 692000) 0 nil])
([nil nil ((10578 . 10579)) nil (25364 41381 60349 187000) 0 nil])
([nil nil ((10576 . 10597) (t 25364 41381 111096 5000)) nil (25364 41414 739586 470000) 0 nil])
([nil nil ((10597 . 10598)) nil (25364 41414 739585 188000) 0 nil])
([nil nil ((#("Downloads/" 0 10 (fontified t face font-lock-string-face)) . -10588) (undo-tree-id950 . -10) 10598) nil (25364 41414 739583 944000) 0 nil])
([nil nil ((#("zhang/" 0 6 (fontified t face font-lock-string-face)) . -10582) (undo-tree-id949 . -6) 10588) nil (25364 41414 739581 706000) 0 nil])
([nil nil ((#("home/" 0 5 (fontified t face font-lock-string-face)) . -10577) (undo-tree-id947 . -5) (undo-tree-id948 . -1) 10582) nil (25364 41414 739579 288000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -10576) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) 10577) nil (25364 41414 739576 18000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10596 . 10597) (nil fontified nil 10587 . 10597) (nil fontified nil 10581 . 10587) (nil fontified nil 10576 . 10581) (10576 . 10597)) nil (25364 41414 739571 772000) 0 nil])
([nil nil ((#("Downloads/" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t rear-nonsticky t face font-lock-string-face)) . -10587) (undo-tree-id943 . -10) 10597) nil (25364 41414 739569 621000) 0 nil])
([nil nil ((#("zhang/" 0 6 (fontified t face font-lock-string-face)) . -10581) (undo-tree-id942 . -6) 10587) nil (25364 41414 739567 150000) 0 nil])
([nil nil ((#("home/" 0 5 (fontified t face font-lock-string-face)) . -10576) (undo-tree-id938 . -5) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -2) 10581) nil (25364 41414 739563 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10634 . 10635) (nil fontified nil 10576 . 10635) (10576 . 10635)) nil (25364 41414 739548 583000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10574) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 10575 (t 25364 41414 751098 65000)) nil (25364 41432 434756 476000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41432 434741 988000) 0 nil])
([nil nil ((10574 . 10578) (t 25364 41432 487765 820000)) nil (25364 41468 652510 624000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10574) (undo-tree-id978 . -1) (#("t" 0 1 (fontified t)) . -10575) (undo-tree-id979 . -1) (#("o" 0 1 (fontified t)) . -10576) (undo-tree-id980 . -1) (#("p" 0 1 (fontified t)) . -10577) (undo-tree-id981 . -1) 10578) nil (25364 41468 652508 413000) 0 nil])
([nil nil ((10568 . 10574)) nil (25364 41468 652502 794000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41468 652501 830000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652500 835000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -10576) (undo-tree-id976 . -1) (undo-tree-id977 . -1) 10577) nil (25364 41468 652499 647000) 0 nil])
([nil nil ((10576 . 10578)) nil (25364 41468 652496 832000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10576) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (#("r" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -10577) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 10578) nil (25364 41468 652494 948000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652487 73000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652485 947000) 0 nil])
([nil nil ((10576 . 10580) (#("f" 0 1 (fontified nil)) . 10576) (10576 . 10577) (#("from (as From)" 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 13 (fontified t face font-lock-type-face) 13 14 (fontified t face (rainbow-delimiters-depth-3-face))) . -10576) (undo-tree-id963 . -14) (10576 . 10590) (#("f" 0 1 (fontified t)) . -10576) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) 10577) nil (25364 41468 652483 920000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10580) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) 10581) nil (25364 41468 652476 175000) 0 nil])
([nil nil ((10580 . 10582)) nil (25364 41468 652471 857000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 10581) (undo-tree-id955 . 1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) nil (25364 41468 652469 396000) 0 nil])
([nil nil ((10587 . 10588) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -10587) (10587 . 10588)) nil (25364 41468 652454 200000) 0 nil])
([nil nil ((10590 . 10598) (t 25364 41468 674434 708000)) nil (25364 41481 372394 710000) 0 nil])
([nil nil ((10598 . 10599)) nil (25364 41481 372393 449000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t face font-lock-type-face)) . -10598) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 10599) nil (25364 41481 372391 824000) 0 nil])
([nil nil ((10598 . 10600)) nil (25364 41481 372387 397000) 0 nil])
([nil nil ((10600 . 10604)) nil (25364 41481 372386 296000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 10603) (undo-tree-id982 . 1)) nil (25364 41481 372384 303000) 0 nil])
([nil nil ((10664 . 10665) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -10664) (10664 . 10665)) nil (25364 41481 372372 361000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -10631) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) 10632 (t 25364 41481 424435 491000)) nil (25364 41503 733124 766000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -10633) (undo-tree-id992 . -1) (undo-tree-id993 . -1) 10634) nil (25364 41503 733120 462000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -10638) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 10639) nil (25364 41503 733117 267000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -10644) (undo-tree-id988 . -1) (undo-tree-id989 . -1) 10645) nil (25364 41503 733113 190000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . -10648) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) 10649) nil (25364 41503 733105 939000) 0 nil])
([nil nil ((10662 . 10667) (t 25364 41503 784436 864000)) nil (25364 41552 281477 165000) 0 nil])
([nil nil ((10667 . 10669)) nil (25364 41552 281476 110000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10667) (undo-tree-id1025 . -1) (#("l" 0 1 (fontified t)) . -10668) (undo-tree-id1026 . -1) 10669) nil (25364 41552 281474 774000) 0 nil])
([nil nil ((10547 . 10549)) nil (25364 41552 281471 684000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-variable-name-face)) . -10547) (undo-tree-id1023 . -1) (#(":" 0 1 (fontified t)) . -10548) (undo-tree-id1024 . -1) 10549) nil (25364 41552 281470 386000) 0 nil])
([nil nil ((10547 . 10553)) nil (25364 41552 281467 659000) 0 nil])
([nil nil ((10549 . 10558) (#("Audi" 0 4 (fontified nil)) . 10549) (10549 . 10553) (#("AudioClip" 0 9 (fontified nil)) . -10549) (10549 . 10558) (#("Audi" 0 4 (fontified t face font-lock-type-face)) . -10549) (undo-tree-id1022 . -4) 10553) nil (25364 41552 281466 104000) 0 nil])
([nil nil ((10678 . 10680)) nil (25364 41552 281463 376000) 0 nil])
([nil nil ((10680 . 10682)) nil (25364 41552 281462 544000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10680) (undo-tree-id1020 . -1) (#("p" 0 1 (fontified t)) . -10681) (undo-tree-id1021 . -1) 10682) nil (25364 41552 281461 252000) 0 nil])
([nil nil ((10680 . 10682)) nil (25364 41552 281458 630000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10680) (undo-tree-id1018 . -1) (#("i" 0 1 (fontified t)) . -10681) (undo-tree-id1019 . -1) 10682) nil (25364 41552 281457 329000) 0 nil])
([nil nil ((10680 . 10683)) nil (25364 41552 281454 618000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10678) (undo-tree-id1013 . -1) (#("l" 0 1 (fontified t)) . -10679) (undo-tree-id1014 . -1) (#("i" 0 1 (fontified t)) . -10680) (undo-tree-id1015 . -1) (#("p" 0 1 (fontified t)) . -10681) (undo-tree-id1016 . -1) (#("." 0 1 (fontified t)) . -10682) (undo-tree-id1017 . -1) 10683) nil (25364 41552 281452 787000) 0 nil])
([nil nil ((10678 . 10680)) nil (25364 41552 281447 93000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10679) (undo-tree-id1012 . -1) 10680) nil (25364 41552 281446 12000) 0 nil])
([nil nil ((10679 . 10693)) nil (25364 41552 281444 151000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -10689) (undo-tree-id1008 . -1) (#(" " 0 1 (fontified t)) . -10690) (undo-tree-id1009 . -1) (#("c" 0 1 (fontified t)) . -10691) (undo-tree-id1010 . -1) (#("l" 0 1 (fontified t)) . -10692) (undo-tree-id1011 . -1) 10693) nil (25364 41552 281442 291000) 0 nil])
([nil nil ((10689 . 10690)) nil (25364 41552 281437 564000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10689) (undo-tree-id1007 . -1) 10690) nil (25364 41552 281436 556000) 0 nil])
([nil nil ((10689 . 10693)) nil (25364 41552 281434 635000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10692) (undo-tree-id1006 . -1) 10693) nil (25364 41552 281433 551000) 0 nil])
([nil nil ((10692 . 10694)) nil (25364 41552 281431 534000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10693) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) 10694) nil (25364 41552 281430 292000) 0 nil])
([nil nil ((10693 . 10697)) nil (25364 41552 281427 442000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10695) (undo-tree-id1002 . -1) (#("." 0 1 (fontified t)) . -10696) (undo-tree-id1003 . -1) 10697) nil (25364 41552 281426 114000) 0 nil])
([nil nil ((10695 . 10696)) nil (25364 41552 281423 252000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10695) (undo-tree-id1001 . -1) 10696) nil (25364 41552 281422 3000) 0 nil])
([nil nil ((10695 . 10698)) nil (25364 41552 281420 32000) 0 nil])
([nil nil ((10696 . 10700) (#("pl" 0 2 (fontified nil)) . 10696) (10696 . 10698) (#("play" 0 4 (fontified nil)) . -10696) (10696 . 10700) (#("pl" 0 2 (fontified t)) . -10696) (undo-tree-id997 . -2) (undo-tree-id998 . -1) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) 10698) nil (25364 41552 281417 558000) 0 nil])
([nil nil ((10700 . 10702)) nil (25364 41552 281404 590000) 0 nil])
([nil nil ((10702 . 10703)) nil (25364 41552 281399 55000) 0 nil])
([nil nil ((10703 . 10708) (t 25364 41552 304439 842000)) nil (25364 41568 215717 388000) 0 nil])
([nil nil ((10672 . 10673)) nil (25364 41568 215711 480000) 0 nil])
([nil nil ((10709 . 10717) (t 25364 41568 267774 155000)) nil (25364 41600 997675 187000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -10713) (undo-tree-id1031 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -10714) (undo-tree-id1032 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -10715) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -10716) (undo-tree-id1034 . -1) 10717) nil (25364 41600 997673 424000) 0 nil])
([nil nil ((10714 . 10718) (10713 . 10715)) nil (25364 41600 997668 233000) 0 nil])
([nil nil ((10718 . 10729)) nil (25364 41600 997666 779000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -10727) (undo-tree-id1029 . -1) (#("t" 0 1 (fontified t)) . -10728) (undo-tree-id1030 . -1) 10729) nil (25364 41600 997665 371000) 0 nil])
([nil nil ((10727 . 10729)) nil (25364 41600 997662 41000) 0 nil])
([nil nil ((10730 . 10731)) nil (25364 41600 997661 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10730) (undo-tree-id1028 . -1) 10731) nil (25364 41600 997659 926000) 0 nil])
([nil nil ((10730 . 10738)) nil (25364 41600 997657 70000) 0 nil])
([nil nil ((254 . 283) (254 . 255) (10733 . 10733) (10733 . 10740) (#("chann" 0 5 (fontified nil)) . 10733) (10733 . 10738) (#("channel (use std::sync::mpsc::channel)" 0 38 (fontified nil)) . -10733) (10733 . 10771) (#("chann" 0 5 (fontified t)) . -10733) (undo-tree-id1027 . -5) 10738) nil (25364 41600 997654 273000) 0 nil])
([nil nil ((10773 . 10775) (10770 . 10774)) nil (25364 41600 997642 675000) 0 nil])
([nil nil ((10776 . 10777)) nil (25364 41600 997637 584000) 0 nil])
([nil nil ((10777 . 10782) (t 25364 41601 47776 167000)) nil (25364 41646 196728 221000) 0 nil])
([nil nil ((10782 . 10786)) nil (25364 41646 196726 831000) 0 nil])
([nil nil ((10782 . 10788) (#("hand" 0 4 (fontified nil)) . 10782) (10782 . 10786) (#("handle" 0 6 (fontified nil)) . -10782) (10782 . 10788) (#("hand" 0 4 (fontified t)) . -10782) (undo-tree-id1050 . -4) 10786) nil (25364 41646 196724 914000) 0 nil])
([nil nil ((10788 . 10793)) nil (25364 41646 196720 975000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10788) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("c" 0 1 (fontified t)) . -10789) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#("o" 0 1 (fontified t)) . -10790) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("n" 0 1 (fontified t)) . -10791) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("n" 0 1 (fontified t)) . -10792) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) 10793) nil (25364 41646 196715 935000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10777) (10777 . 10778) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10777) (10777 . 10778) (10776 . 10778)) nil (25364 41646 196043 472000) 0 nil])
([nil nil ((10790 . 10795) (t 25364 41646 217778 940000)) nil (25364 41669 591849 273000) 0 nil])
([nil nil ((10795 . 10798)) nil (25364 41669 591848 82000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -10796) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("t" 0 1 (fontified t)) . -10797) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 10798) nil (25364 41669 591846 160000) 0 nil])
([nil nil ((10796 . 10799)) nil (25364 41669 591840 309000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10797) (undo-tree-id1051 . -1) (#("r" 0 1 (fontified t)) . -10798) (undo-tree-id1052 . -1) 10799) nil (25364 41669 591837 978000) 0 nil])
([nil nil ((10797 . 10798)) nil (25364 41669 591829 992000) 0 nil])
([nil nil ((10733 . 10734)) nil (25364 41669 591825 224000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10798) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) 10799 (t 25364 41669 644447 45000)) nil (25364 41705 113818 372000) 0 nil])
([nil nil ((#("connec" 0 6 (fontified t)) . -10792) (undo-tree-id1068 . -6) (undo-tree-id1069 . -6) (undo-tree-id1070 . -6) 10798) nil (25364 41705 113813 867000) 0 nil])
([nil nil ((10792 . 10794)) nil (25364 41705 113809 939000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10793) (undo-tree-id1067 . -1) 10794) nil (25364 41705 113808 699000) 0 nil])
([nil nil ((10793 . 10794)) nil (25364 41705 113806 483000) 0 nil])
([nil nil ((10792 . 10804) (#("co" 0 2 (fontified nil)) . 10792) (10792 . 10794) (#("connect_done" 0 12 (fontified nil)) . -10792) (10792 . 10804) (#("co" 0 2 (fontified t)) . -10792) (undo-tree-id1066 . -2) 10794) nil (25364 41705 113804 861000) 0 nil])
([nil nil ((10805 . 10812) (10804 . 10806)) nil (25364 41705 113801 412000) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -10810) (undo-tree-id1065 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 10811)) nil (25364 41705 113799 697000) 0 nil])
([nil nil ((10810 . 10815)) nil (25364 41705 113797 620000) 0 nil])
([nil nil ((10816 . 10817)) nil (25364 41705 113796 696000) 0 nil])
([nil nil ((10815 . 10816) (10816 . 10820) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 10815) (10815 . 10816) (10814 . 10816)) nil (25364 41705 113795 355000) 0 nil])
([nil nil ((10816 . 10820)) nil (25364 41705 113793 457000) 0 nil])
([nil nil ((10816 . 10823) (#("done" 0 4 (fontified nil)) . 10816) (10816 . 10820) (#("done_tx" 0 7 (fontified nil)) . -10816) (10816 . 10823) (#("done" 0 4 (fontified t)) . -10816) (undo-tree-id1064 . -4) 10820) nil (25364 41705 113791 686000) 0 nil])
([nil nil ((10829 . 10831) (10823 . 10830)) nil (25364 41705 113788 416000) 0 nil])
([nil nil ((10832 . 10833)) nil (25364 41705 113787 161000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10832) (undo-tree-id1063 . -1) 10833) nil (25364 41705 113785 703000) 0 nil])
([nil nil ((10832 . 10834)) nil (25364 41705 113783 607000) 0 nil])
([nil nil ((10833 . 10839) (#("u" 0 1 (fontified nil)) . 10833) (10833 . 10834) (#("unwrap" 0 6 (fontified nil)) . -10833) (10833 . 10839) (#("u" 0 1 (fontified t)) . -10833) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 10834) nil (25364 41705 113781 676000) 0 nil])
([nil nil ((10839 . 10841)) nil (25364 41705 113776 386000) 0 nil])
([nil nil ((10841 . 10843)) nil (25364 41705 113775 310000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -10841) (undo-tree-id1058 . -1) (#(";" 0 1 (fontified t)) . -10842) (undo-tree-id1059 . -1) 10843) nil (25364 41705 113772 647000) 0 nil])
([nil nil ((10841 . 10842)) nil (25364 41705 113760 229000) 0 nil])
([nil nil ((10850 . 10855) (t 25364 41705 134449 224000)) nil (25364 41719 261561 223000) 0 nil])
([nil nil ((10855 . 10859)) nil (25364 41719 261560 52000) 0 nil])
([nil nil ((10859 . 10861)) nil (25364 41719 261559 129000) 0 nil])
([nil nil ((10855 . 10862) (#("done_r" 0 6 (fontified nil)) . 10855) (10855 . 10861) (#("done_rx" 0 7 (fontified nil)) . -10855) (10855 . 10862) (#("done_r" 0 6 (fontified t)) . -10855) (undo-tree-id1080 . -6) (undo-tree-id1081 . -6) (undo-tree-id1082 . -6) 10861) nil (25364 41719 261557 574000) 0 nil])
([nil nil ((10862 . 10865)) nil (25364 41719 261552 965000) 0 nil])
([nil nil ((10863 . 10867) (#("re" 0 2 (fontified nil)) . 10863) (10863 . 10865) (#("recv" 0 4 (fontified nil)) . -10863) (10863 . 10867) (#("re" 0 2 (fontified t)) . -10863) (undo-tree-id1076 . -2) (undo-tree-id1077 . -1) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) 10865) nil (25364 41719 261551 236000) 0 nil])
([nil nil ((10867 . 10869)) nil (25364 41719 261545 828000) 0 nil])
([nil nil ((10869 . 10872)) nil (25364 41719 261544 903000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -10870) (undo-tree-id1074 . -1) (#(";" 0 1 (fontified t)) . -10871) (undo-tree-id1075 . -1) 10872) nil (25364 41719 261542 245000) 0 nil])
([nil nil ((10870 . 10871)) nil (25364 41719 261530 162000) 0 nil])
([nil nil ((10591 . 10592) (#(" " 0 1 (fontified nil)) . 10590) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (10591 . 10592) (t 25364 41719 311116 759000)) nil (25364 41732 784124 961000) 0 nil])
([nil nil ((10564 . 10569) (t 25364 41732 807784 255000)) nil (25364 41838 219409 328000) 0 nil])
([nil nil ((10569 . 10574)) nil (25364 41838 219408 125000) 0 nil])
([nil nil ((214 . 228) (214 . 215) (10570 . 10570) (10570 . 10575) (#("info" 0 4 (fontified nil)) . 10570) (10570 . 10574) (#("info! (use log::info)" 0 21 (fontified nil)) . -10570) (10570 . 10591) (#("info" 0 4 (fontified t)) . -10570) (undo-tree-id1105 . -4) 10574) nil (25364 41838 219406 252000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -10584) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (#("i" 0 1 (fontified t)) . -10585) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -10586) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (#("f" 0 1 (fontified t)) . -10587) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (#("o" 0 1 (fontified t)) . -10588) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (#("!" 0 1 (fontified t)) . -10589) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) 10590) nil (25364 41838 219400 422000) 0 nil])
([nil nil ((10584 . 10594)) nil (25364 41838 219382 46000) 0 nil])
([nil nil ((10594 . 10596)) nil (25364 41838 219381 74000) 0 nil])
([nil nil ((10596 . 10597)) nil (25364 41838 219380 97000) 0 nil])
([nil nil ((10595 . 10596)) nil (25364 41838 219378 980000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10595) (undo-tree-id1086 . -1) 10596) nil (25364 41838 219376 712000) 0 nil])
([nil nil ((10596 . 10608) (10595 . 10597) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10595) (10595 . 10596)) nil (25364 41838 219364 580000) 0 nil])
([nil nil ((10752 . 10757) (t 25364 41838 271124 66000)) nil (25364 41854 887993 258000) 0 nil])
([nil nil ((10757 . 10760)) nil (25364 41854 887991 958000) 0 nil])
([nil nil ((10760 . 10765)) nil (25364 41854 887990 861000) 0 nil])
([nil nil ((10762 . 10767) (#("inf" 0 3 (fontified nil)) . 10762) (10762 . 10765) (#("info!" 0 5 (fontified nil)) . -10762) (10762 . 10767) (#("inf" 0 3 (fontified t)) . -10762) (undo-tree-id1106 . -3) (undo-tree-id1107 . -1) (undo-tree-id1108 . -2) 10765) nil (25364 41854 887988 424000) 0 nil])
([nil nil ((10769 . 10779) (10768 . 10770) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10768) (10768 . 10769) (10767 . 10769)) nil (25364 41854 887977 151000) 0 nil])
([nil nil ((10779 . 10784)) nil (25364 41854 887973 909000) 0 nil])
([nil nil ((10786 . 10787)) nil (25364 41854 887967 996000) 0 nil])
([nil nil ((10784 . 10793) (t 25364 41854 911125 87000)) nil (25364 41859 219689 212000) 0 nil])
([nil nil ((10963 . 10968) (t 25364 41859 271125 355000)) nil (25364 41873 19462 597000) 0 nil])
([nil nil ((10968 . 10975)) nil (25364 41873 19461 279000) 0 nil])
([nil nil ((10973 . 10978) (#("in" 0 2 (fontified nil)) . 10973) (10973 . 10975) (#("info!" 0 5 (fontified nil)) . -10973) (10973 . 10978) (#("in" 0 2 (fontified t face font-lock-keyword-face)) . -10973) (undo-tree-id1109 . -2) (undo-tree-id1110 . -1) (undo-tree-id1111 . -2) 10975) nil (25364 41873 19458 850000) 0 nil])
([nil nil ((10980 . 10984) (10979 . 10981) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10979) (10979 . 10980) (10978 . 10980)) nil (25364 41873 19447 564000) 0 nil])
([nil nil ((10986 . 10987)) nil (25364 41873 19441 191000) 0 nil])
([nil nil ((#("OutputDevices" 0 13 (fontified t face font-lock-type-face)) . -62) (undo-tree-id1140 . -13) (undo-tree-id1141 . -13) (undo-tree-id1142 . -13) 75 (t 25364 41873 41126 200000)) nil (25364 41947 944584 819000) 0 nil])
([nil nil ((#("Device, " 0 6 (fontified t face font-lock-type-face) 6 8 (fontified t)) . -54) (undo-tree-id1135 . -8) (undo-tree-id1136 . -6) (undo-tree-id1137 . -8) (undo-tree-id1138 . -8) (undo-tree-id1139 . -8) 62) nil (25364 41947 944580 407000) 0 nil])
([nil nil ((#("StreamConfig, " 0 12 (fontified t face font-lock-type-face) 12 14 (fontified t)) . -40) (undo-tree-id1130 . -14) (undo-tree-id1131 . -14) (undo-tree-id1132 . -14) (undo-tree-id1133 . -12) (undo-tree-id1134 . -14) 54) nil (25364 41947 944574 418000) 0 nil])
([nil nil ((#("SampleFormat, " 0 12 (fontified t face font-lock-type-face) 12 14 (fontified t)) . -26) (undo-tree-id1123 . -14) (undo-tree-id1124 . -14) (undo-tree-id1125 . -14) (undo-tree-id1126 . -12) (undo-tree-id1127 . -14) (undo-tree-id1128 . -14) (undo-tree-id1129 . -14) 40) nil (25364 41956 117607 536000) 0 nil])
([nil nil ((#("Data, " 0 4 (fontified t face font-lock-type-face) 4 6 (fontified t)) . -12) (undo-tree-id1155 . -4) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) 18) nil (25364 41970 485187 213000) 0 nil] [nil nil ((#("Sample, " 0 6 (fontified t face font-lock-type-face) 6 8 (fontified t)) . -18) (undo-tree-id1118 . -8) (undo-tree-id1119 . -8) (undo-tree-id1120 . -8) (undo-tree-id1121 . -8) (undo-tree-id1122 . -6) 26) ((18 . 26)) (25364 41947 946458 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -19) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (#("," 0 1 (fontified t)) . -20) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) 21) nil (25364 41970 485173 856000) 0 nil])
([nil nil ((#("Data, " 0 4 (fontified t face font-lock-type-face) 4 6 (fontified t)) . -12) (undo-tree-id1112 . -6) (undo-tree-id1113 . -6) (undo-tree-id1114 . -6) (undo-tree-id1115 . -4) (undo-tree-id1116 . -6) (undo-tree-id1117 . -6) 18) ((12 . 18)) (25364 41947 944549 256000) 0 nil])
([nil nil ((#("use log::info;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 14 (fontified t)) . 157) (undo-tree-id1167 . -4) (undo-tree-id1168 . -13) (undo-tree-id1169 . -14) (undo-tree-id1170 . -14) (undo-tree-id1171 . -14) (t 25364 41970 507798 846000)) nil (25364 41993 361902 243000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 157) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1)) nil (25364 41993 361891 815000) 0 nil])
([nil nil ((#("WrapErr" 0 7 (fontified t face font-lock-type-face)) . -583) (undo-tree-id1182 . -7) (undo-tree-id1183 . -7) (undo-tree-id1184 . -7) (undo-tree-id1185 . -7) (undo-tree-id1186 . -7) 590 (t 25364 41993 384466 917000)) nil (25364 41998 801897 445000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -581) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (#(" " 0 1 (fontified t)) . -582) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 583) nil (25364 41998 801886 996000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t face font-lock-preprocessor-face)) . -10508) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) 10512 (t 25364 41998 824467 250000)) nil (25364 42056 493986 712000) 0 nil])
([nil nil ((#("log::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -10503) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) 10508) nil (25364 42056 493982 518000) 0 nil])
([nil nil ((10503 . 10508)) nil (25364 42056 493979 33000) 0 nil])
([nil nil ((10503 . 10510) (#("print" 0 5 (fontified nil)) . 10503) (10503 . 10508) (#("println" 0 7 (fontified nil)) . -10503) (10503 . 10510) (#("print" 0 5 (fontified t face rust-builtin-formatting-macro)) . -10503) (undo-tree-id1201 . -5) 10508) nil (25364 42056 493976 919000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t face font-lock-preprocessor-face)) . -10679) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) 10683) nil (25364 42056 493972 764000) 0 nil])
([nil nil ((#("log::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -10674) (undo-tree-id1195 . -5) (undo-tree-id1196 . -5) (undo-tree-id1197 . -5) 10679) nil (25364 42056 493967 943000) 0 nil])
([nil nil ((10674 . 10679)) nil (25364 42056 493963 335000) 0 nil])
([nil nil ((10674 . 10681) (#("print" 0 5 (fontified nil)) . 10674) (10674 . 10679) (#("println" 0 7 (fontified nil)) . -10674) (10674 . 10681) (#("print" 0 5 (fontified t face rust-builtin-formatting-macro)) . -10674) (undo-tree-id1194 . -5) 10679) nil (25364 42056 493961 208000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t face font-lock-preprocessor-face)) . -10888) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) 10892) nil (25364 42056 493957 86000) 0 nil])
([nil nil ((#("log::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -10883) (undo-tree-id1190 . -5) (undo-tree-id1191 . -5) 10888) nil (25364 42056 493953 84000) 0 nil])
([nil nil ((10883 . 10888)) nil (25364 42056 493948 485000) 0 nil])
([nil nil ((10883 . 10890) (#("print" 0 5 (fontified nil)) . 10883) (10883 . 10888) (#("println" 0 7 (fontified nil)) . -10883) (10883 . 10890) (#("print" 0 5 (fontified t face rust-builtin-formatting-macro)) . -10883) (undo-tree-id1187 . -5) (undo-tree-id1188 . -5) (undo-tree-id1189 . -5) 10888) nil (25364 42056 493942 407000) 0 nil])
([nil nil ((8841 . 8849) (t 25364 42056 517804 126000)) nil (25364 42384 616505 338000) 0 nil])
([nil nil ((8849 . 8853)) nil (25364 42384 616503 850000) 0 nil])
([nil nil ((8849 . 8858) (#("Atom" 0 4 (fontified nil)) . 8849) (8849 . 8853) (#("AtomicU64" 0 9 (fontified nil)) . -8849) (8849 . 8858) (#("Atom" 0 4 (fontified t face font-lock-type-face)) . -8849) (undo-tree-id1220 . -4) 8853) nil (25364 42384 616502 167000) 0 nil])
([nil nil ((8858 . 8860)) nil (25364 42384 616498 841000) 0 nil])
([nil nil ((8860 . 8869) (#("fetch_add" 0 9 (fontified nil)) . -8860) (8860 . 8869)) nil (25364 42384 616497 584000) 0 nil])
([nil nil ((8870 . 8875) (8869 . 8871)) nil (25364 42384 616495 792000) 0 nil])
([nil nil ((8871 . 8878) (#("TIME" 0 4 (fontified nil)) . 8871) (8871 . 8875) (#("TIME_MS" 0 7 (fontified t face font-lock-type-face)) . -8871) (undo-tree-id1218 . -7) (8871 . 8878) (#("TIME" 0 4 (fontified t face font-lock-type-face)) . -8871) (undo-tree-id1219 . -4) 8875) nil (25364 42384 616493 659000) 0 nil])
([nil nil ((8878 . 8881)) nil (25364 42384 616489 628000) 0 nil])
([nil nil ((8881 . 8886)) nil (25364 42384 616488 650000) 0 nil])
([nil nil ((157 . 180) (157 . 158) (8881 . 8881) (8881 . 8889) (#("Order" 0 5 (fontified nil)) . 8881) (8881 . 8886) (#("Ordering (use std::cmp::Ordering)" 0 8 (fontified t face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-9-face)) 10 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 17 (fontified t face font-lock-constant-face) 17 19 (fontified t) 19 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 32 (fontified t face font-lock-type-face) 32 33 (fontified t face (rainbow-delimiters-depth-9-face))) . -8881) (undo-tree-id1215 . -33) (8881 . 8914) (#("Order" 0 5 (fontified t face font-lock-type-face)) . -8881) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) 8886) nil (25364 42384 616486 510000) 0 nil])
([nil nil ((8913 . 8918)) nil (25364 42384 616480 793000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8915) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("e" 0 1 (fontified t)) . -8916) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (#("l" 0 1 (fontified t)) . -8917) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) 8918) nil (25364 42384 616477 864000) 0 nil])
([nil nil ((8915 . 8920)) nil (25364 42384 616462 38000) 0 nil])
([nil nil ((8921 . 8922)) nil (25364 42384 616455 729000) 0 nil])
([nil nil ((#("Relax" 0 5 (fontified t face font-lock-type-face)) . -8915) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) 8920 (t 25364 42384 637824 268000)) nil (25364 42419 443872 512000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) 8915) nil (25364 42419 443867 988000) 0 nil])
([nil nil ((8913 . 8915)) nil (25364 42419 443863 359000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1232 . -1) (#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1233 . -1) 8915) nil (25364 42419 443862 13000) 0 nil])
([nil nil ((#("Ordering" 0 8 (fontified t face font-lock-type-face)) . -8905) (undo-tree-id1230 . -8) (undo-tree-id1231 . -8) 8913) nil (25364 42419 443857 508000) 0 nil])
([nil nil ((8905 . 8911)) nil (25364 42419 443684 252000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8910) (undo-tree-id1229 . -1) 8911) nil (25364 42419 443683 147000) 0 nil])
([nil nil ((8910 . 8912)) nil (25364 42419 443681 135000) 0 nil])
([nil nil ((8912 . 8914)) nil (25364 42419 443680 237000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8912) (undo-tree-id1227 . -1) (#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1228 . -1) 8914) nil (25364 42419 443678 995000) 0 nil])
([nil nil ((8912 . 8913)) nil (25364 42419 443675 842000) 0 nil])
([nil nil ((8910 . 8914) (#("syn" 0 3 (fontified nil)) . 8910) (8910 . 8913) (#("sync" 0 4 (fontified nil)) . -8910) (8910 . 8914) (#("syn" 0 3 (fontified t)) . -8910) (undo-tree-id1226 . -3) 8913) nil (25364 42419 443674 389000) 0 nil])
([nil nil ((8914 . 8916)) nil (25364 42419 443671 366000) 0 nil])
([nil nil ((8916 . 8918)) nil (25364 42419 443670 433000) 0 nil])
([nil nil ((8916 . 8922) (#("At" 0 2 (fontified nil)) . 8916) (8916 . 8918) (#("atomic" 0 6 (fontified nil)) . -8916) (8916 . 8922) (#("At" 0 2 (fontified t face font-lock-type-face)) . -8916) (undo-tree-id1225 . -2) 8918) nil (25364 42419 443668 751000) 0 nil])
([nil nil ((8922 . 8926)) nil (25364 42419 443665 723000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8924) (undo-tree-id1223 . -1) (#("r" 0 1 (fontified t)) . -8925) (undo-tree-id1224 . -1) 8926) nil (25364 42419 443664 424000) 0 nil])
([nil nil ((8924 . 8925)) nil (25364 42419 443661 97000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8924) (undo-tree-id1222 . -1) 8925) nil (25364 42419 443659 972000) 0 nil])
([nil nil ((8924 . 8925)) nil (25364 42419 443657 372000) 0 nil])
([nil nil ((8924 . 8932) (#("O" 0 1 (fontified nil)) . 8924) (8924 . 8925) (#("Ordering" 0 8 (fontified nil)) . -8924) (8924 . 8932) (#("O" 0 1 (fontified t face font-lock-type-face)) . -8924) (undo-tree-id1221 . -1) 8925) nil (25364 42419 443655 105000) 0 nil])
([nil nil ((8932 . 8934)) nil (25364 42419 443644 466000) 0 nil])
([nil nil ((8934 . 8941) (#("Relaxed" 0 7 (fontified nil)) . -8934) (8934 . 8941)) nil (25364 42419 443638 587000) 0 nil])
([nil nil ((#("atomic::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -8916) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) 8924 (t 25364 42419 454493 72000)) nil (25364 42423 438250 341000) 0 nil])
([nil nil ((#("sync::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -8910) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) 8916) nil (25364 42423 438244 992000) 0 nil])
([nil nil ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -8905) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) 8910) nil (25364 42423 438237 173000) 0 nil])
([nil nil ((8905 . 8906) (t 25364 42423 491159 986000)) nil (25364 42452 401252 883000) 0 nil])
([nil nil ((8906 . 8921)) nil (25364 42452 401251 343000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8920) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) 8921) nil (25364 42452 401248 991000) 0 nil])
([nil nil ((8920 . 8922)) nil (25364 42452 401239 963000) 0 nil])
([nil nil ((8922 . 8924)) nil (25364 42452 401235 326000) 0 nil])
([nil nil ((#("atomic" 0 6 (fontified t face font-lock-constant-face)) . -8916) (undo-tree-id1273 . -6) (undo-tree-id1274 . -4) (undo-tree-id1275 . -6) (undo-tree-id1276 . -4) 8922 (t 25364 42452 454495 97000)) nil (25364 42471 764084 567000) 0 nil])
([nil nil ((8916 . 8917)) nil (25364 42471 764079 639000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 8916) nil (25364 42471 764077 958000) 0 nil])
([nil nil ((8914 . 8915)) nil (25364 42471 764071 557000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -8914) (undo-tree-id1266 . -1) 8915) nil (25364 42471 764070 395000) 0 nil])
([nil nil ((8914 . 8917)) nil (25364 42471 764068 370000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8916) (undo-tree-id1265 . -1) 8917) nil (25364 42471 764067 248000) 0 nil])
([nil nil ((8916 . 8919)) nil (25364 42471 764065 288000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1264 . -1) 8919) nil (25364 42471 764064 111000) 0 nil])
([nil nil ((8918 . 8920)) nil (25364 42471 764062 167000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1258 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1259 . -1) (#("a" 0 1 (fontified t)) . -8916) (undo-tree-id1260 . -1) (#("t" 0 1 (fontified t)) . -8917) (undo-tree-id1261 . -1) (#("o" 0 1 (fontified t)) . -8918) (undo-tree-id1262 . -1) (#("m" 0 1 (fontified t)) . -8919) (undo-tree-id1263 . -1) 8920) nil (25364 42471 764059 812000) 0 nil])
([nil nil ((8914 . 8916)) nil (25364 42471 764052 388000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -8914) (undo-tree-id1256 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1257 . -1) 8916) nil (25364 42471 764050 636000) 0 nil])
([nil nil ((8914 . 8917)) nil (25364 42471 764047 255000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8916) (undo-tree-id1255 . -1) 8917) nil (25364 42471 764045 948000) 0 nil])
([nil nil ((8916 . 8919)) nil (25364 42471 764043 347000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1254 . -1) 8919) nil (25364 42471 764042 56000) 0 nil])
([nil nil ((8918 . 8920)) nil (25364 42471 764039 690000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1252 . -1) (#("o" 0 1 (fontified t)) . -8919) (undo-tree-id1253 . -1) 8920) nil (25364 42471 764037 838000) 0 nil])
([nil nil ((8918 . 8922)) nil (25364 42471 764033 288000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8922) (undo-tree-id1250 . -1) (undo-tree-id1251 . 1) 8923) nil (25364 42471 764028 63000) 0 nil])
([nil nil ((10961 . 10965) (#("    " 0 4 (fontified nil)) . 10960) (undo-tree-id1305 . -4) (10959 . 10965) (t 25364 42471 817829 619000)) nil (25364 42516 94693 522000) 0 nil])
([nil nil ((10965 . 10968)) nil (25364 42516 94690 604000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10965) (undo-tree-id1302 . -1) (#("h" 0 1 (fontified t)) . -10966) (undo-tree-id1303 . -1) (#("e" 0 1 (fontified t)) . -10967) (undo-tree-id1304 . -1) 10968) nil (25364 42516 94688 668000) 0 nil])
([nil nil ((10962 . 10966) (#("    " 0 4 (fontified nil)) . 10961) (undo-tree-id1301 . -4) (10965 . 10966)) nil (25364 42516 94683 526000) 0 nil])
([nil nil ((10961 . 10965)) nil (25364 42516 94680 959000) 0 nil])
([nil nil ((10965 . 10968)) nil (25364 42516 94679 878000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10967) (undo-tree-id1300 . -1) 10968) nil (25364 42516 94678 458000) 0 nil])
([nil nil ((10967 . 10970)) nil (25364 42516 94676 95000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10965) (undo-tree-id1295 . -1) (#("h" 0 1 (fontified t)) . -10966) (undo-tree-id1296 . -1) (#("r" 0 1 (fontified t)) . -10967) (undo-tree-id1297 . -1) (#("e" 0 1 (fontified t)) . -10968) (undo-tree-id1298 . -1) (#("a" 0 1 (fontified t)) . -10969) (undo-tree-id1299 . -1) 10970) nil (25364 42516 94673 567000) 0 nil])
([nil nil ((10965 . 10971)) nil (25364 42516 94666 483000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10970) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) 10971) nil (25364 42516 94664 985000) 0 nil])
([nil nil ((10970 . 10973)) nil (25364 42516 94661 660000) 0 nil])
([nil nil ((10970 . 10976) (#("thr" 0 3 (fontified t)) . -10970) (undo-tree-id1289 . -3) (undo-tree-id1290 . -2) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) 10973) nil (25364 42516 94659 856000) 0 nil])
([nil nil ((10976 . 10980)) nil (25364 42516 94654 151000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10978) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (#("o" 0 1 (fontified t)) . -10979) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) 10980) nil (25364 42516 94652 88000) 0 nil])
([nil nil ((10978 . 10980)) nil (25364 42516 94642 135000) 0 nil])
([nil nil ((10978 . 10983) (#("sp" 0 2 (fontified nil)) . 10978) (10978 . 10980) (#("spawn" 0 5 (fontified nil)) . -10978) (10978 . 10983) (#("sp" 0 2 (fontified t)) . -10978) (undo-tree-id1277 . -2) (undo-tree-id1278 . -1) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) 10980) nil (25364 42516 94639 356000) 0 nil])
([nil nil ((10983 . 10985)) nil (25364 42516 94626 978000) 0 nil])
([nil nil ((10984 . 10989)) nil (25364 42516 94625 697000) 0 nil])
([nil nil ((10989 . 10990) (10990 . 10994) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 10989) (10989 . 10990) (10988 . 10990)) nil (25364 42516 94622 484000) 0 nil])
([nil nil ((10997 . 10998)) nil (25364 42516 94615 740000) 0 nil])
([nil nil ((10990 . 10995) (t 25364 42516 121165 673000)) nil (25364 42560 1482 779000) 0 nil])
([nil nil ((10990 . 10998) (#("print" 0 5 (fontified nil)) . 10990) (10990 . 10995) (#("println!" 0 8 (fontified nil)) . -10990) (10990 . 10998) (#("print" 0 5 (fontified t)) . -10990) (undo-tree-id1337 . -5) 10995) nil (25364 42560 1480 174000) 0 nil])
([nil nil ((11001 . 11002) (11000 . 11002) (10999 . 11001) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -10999) (10999 . 11000) (10998 . 11000)) nil (25364 42560 1476 60000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-string-interpolation)) . -11001) (undo-tree-id1336 . -1) 11002) nil (25364 42560 1473 388000) 0 nil])
([nil nil ((11002 . 11003) (11001 . 11003) (#("\"" 0 1 (fontified nil face rust-string-interpolation)) . -11001) (11001 . 11002)) nil (25364 42560 1470 479000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face rust-question-mark)) . -11002) (undo-tree-id1335 . -1) 11003) nil (25364 42560 1468 266000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -11001) (undo-tree-id1334 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 11002)) nil (25364 42560 1465 618000) 0 nil])
([nil nil ((11001 . 11003)) nil (25364 42560 1463 138000) 0 nil])
([nil nil ((11005 . 11006)) nil (25364 42560 1462 40000) 0 nil])
([nil nil ((11006 . 11009)) nil (25364 42560 1460 938000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -11008) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) 11009) nil (25364 42560 1459 472000) 0 nil])
([nil nil ((11008 . 11010)) nil (25364 42560 1455 977000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11008) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (#("m" 0 1 (fontified t)) . -11009) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 11010) nil (25364 42560 1454 225000) 0 nil])
([nil nil ((11008 . 11010)) nil (25364 42560 1448 522000) 0 nil])
([nil nil ((277 . 278) (277 . 278) (277 . 283) (11006 . 11006) (11006 . 11012) (#("atom" 0 4 (fontified nil)) . 11006) (11006 . 11010) (#("atomic (use std::sync::atomic)" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-5-face)) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 21 (fontified t face font-lock-constant-face) 21 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-5-face))) . -11006) (undo-tree-id1325 . -30) (11006 . 11036) (#("atom" 0 4 (fontified t)) . -11006) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) 11010) nil (25364 42560 1446 69000) 0 nil])
([nil nil ((11020 . 11022)) nil (25364 42560 1439 363000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11020) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#(":" 0 1 (fontified t)) . -11021) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) 11022) nil (25364 42560 1437 553000) 0 nil])
([nil nil ((11020 . 11023)) nil (25364 42560 1431 726000) 0 nil])
([nil nil ((11014 . 11023) (#("atomicU64" 0 9 (fontified nil)) . 11014) (11014 . 11023) (#("AtomicU64" 0 9 (fontified t face font-lock-type-face)) . -11014) (undo-tree-id1318 . -9) (11014 . 11023) (#("atomicU64" 0 9 (fontified t)) . -11014) (undo-tree-id1319 . -9) (undo-tree-id1320 . -9) 11023) nil (25364 42560 1429 671000) 0 nil])
([nil nil ((11023 . 11025)) nil (25364 42560 1423 575000) 0 nil])
([nil nil ((11025 . 11027)) nil (25364 42560 1422 237000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -11026) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 11027) nil (25364 42560 1420 617000) 0 nil])
([nil nil ((11025 . 11029) (#("l" 0 1 (fontified nil)) . 11025) (11025 . 11026) (#("load" 0 4 (fontified t)) . -11025) (undo-tree-id1313 . -4) (11025 . 11029) (#("l" 0 1 (fontified t)) . -11025) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) 11026) nil (25364 42560 1415 894000) 0 nil])
([nil nil ((11030 . 11031) (11029 . 11031)) nil (25364 42560 1409 799000) 0 nil])
([nil nil ((11031 . 11032)) nil (25364 42560 1408 131000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11031) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 11032) nil (25364 42560 1406 666000) 0 nil])
([nil nil ((11031 . 11033)) nil (25364 42560 1403 21000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-type-face)) . -11032) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) 11033) nil (25364 42560 1401 377000) 0 nil])
([nil nil ((11032 . 11035)) nil (25364 42560 1397 444000) 0 nil])
([nil nil ((11031 . 11038) (#("TIME" 0 4 (fontified nil)) . 11031) (11031 . 11035) (#("TIME_MS" 0 7 (fontified t face font-lock-type-face)) . -11031) (undo-tree-id1306 . -7) (11031 . 11038) (#("TIME" 0 4 (fontified t face font-lock-type-face)) . -11031) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) 11035) nil (25364 42560 1393 537000) 0 nil])
([nil nil ((11040 . 11041)) nil (25364 42560 1377 92000) 0 nil])
([nil nil ((11038 . 11039) (t 25364 42560 27835 34000)) nil (25364 42581 943865 862000) 0 nil])
([nil nil ((11039 . 11046)) nil (25364 42581 943864 756000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11045) (undo-tree-id1354 . -1) 11046) nil (25364 42581 943863 625000) 0 nil])
([nil nil ((11045 . 11059)) nil (25364 42581 943861 689000) 0 nil])
([nil nil ((11059 . 11060)) nil (25364 42581 943860 803000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -11059) (undo-tree-id1353 . -1) 11060) nil (25364 42581 943859 662000) 0 nil])
([nil nil ((11059 . 11061)) nil (25364 42581 943857 674000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -11060) (undo-tree-id1352 . -1) 11061) nil (25364 42581 943856 473000) 0 nil])
([nil nil ((11060 . 11061)) nil (25364 42581 943854 423000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-type-face)) . -11060) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) 11061) nil (25364 42581 943853 195000) 0 nil])
([nil nil ((11060 . 11062)) nil (25364 42581 943850 106000) 0 nil])
([nil nil ((11059 . 11067) (#("Ord" 0 3 (fontified nil)) . 11059) (11059 . 11062) (#("Ordering" 0 8 (fontified nil)) . -11059) (11059 . 11067) (#("Ord" 0 3 (fontified t face font-lock-type-face)) . -11059) (undo-tree-id1343 . -3) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) 11062) nil (25364 42581 943847 769000) 0 nil])
([nil nil ((11067 . 11071)) nil (25364 42581 943838 975000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11069) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (#("e" 0 1 (fontified t)) . -11070) (undo-tree-id1342 . -1) 11071) nil (25364 42581 943837 31000) 0 nil])
([nil nil ((11069 . 11071)) nil (25364 42581 943831 191000) 0 nil])
([nil nil ((11069 . 11076) (#("Re" 0 2 (fontified nil)) . 11069) (11069 . 11071) (#("Relaxed" 0 7 (fontified nil)) . -11069) (11069 . 11076) (#("Re" 0 2 (fontified t face font-lock-type-face)) . -11069) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) 11071) nil (25364 42581 943825 511000) 0 nil])
([nil nil ((11079 . 11081) (t 25364 42582 4503 51000)) nil (25364 42614 917176 122000) 0 nil])
([nil nil ((11081 . 11085)) nil (25364 42614 917174 874000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11081) (undo-tree-id1372 . -1) (#("h" 0 1 (fontified t)) . -11082) (undo-tree-id1373 . -1) (#("e" 0 1 (fontified t)) . -11083) (undo-tree-id1374 . -1) (#("r" 0 1 (fontified t)) . -11084) (undo-tree-id1375 . -1) 11085) nil (25364 42614 917172 786000) 0 nil])
([nil nil ((11081 . 11084)) nil (25364 42614 917167 210000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -11083) (undo-tree-id1371 . -1) 11084) nil (25364 42614 917165 862000) 0 nil])
([nil nil ((11083 . 11089)) nil (25364 42614 917163 655000) 0 nil])
([nil nil ((11086 . 11092) (#("thr" 0 3 (fontified t)) . -11086) (undo-tree-id1370 . -3) 11089) nil (25364 42614 917162 265000) 0 nil])
([nil nil ((11092 . 11095)) nil (25364 42614 917159 923000) 0 nil])
([nil nil ((11095 . 11096)) nil (25364 42614 917158 958000) 0 nil])
([nil nil ((11094 . 11099) (#("sl" 0 2 (fontified nil)) . 11094) (11094 . 11096) (#("sleep" 0 5 (fontified nil)) . -11094) (11094 . 11099) (#("sl" 0 2 (fontified t)) . -11094) (undo-tree-id1369 . -2) 11096) nil (25364 42614 917157 85000) 0 nil])
([nil nil ((11100 . 11101) (11099 . 11101)) nil (25364 42614 917153 753000) 0 nil])
([nil nil ((11101 . 11102)) nil (25364 42614 917152 437000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face font-lock-type-face)) . -11100) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -11101) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) 11102) nil (25364 42614 917150 687000) 0 nil])
([nil nil ((11100 . 11103)) nil (25364 42614 917145 550000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11102) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) 11103) nil (25364 42614 917144 204000) 0 nil])
([nil nil ((11102 . 11112)) nil (25364 42614 917141 81000) 0 nil])
([nil nil ((11111 . 11119) (#("D" 0 1 (fontified nil)) . 11111) (11111 . 11112) (#("Duration" 0 8 (fontified nil)) . -11111) (11111 . 11119) (#("D" 0 1 (fontified t face font-lock-type-face)) . -11111) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) 11112) nil (25364 42614 917138 714000) 0 nil])
([nil nil ((11119 . 11122)) nil (25364 42614 917134 666000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t face font-lock-type-face)) . -11121) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) 11122) nil (25364 42614 917133 209000) 0 nil])
([nil nil ((11121 . 11124)) nil (25364 42614 917129 677000) 0 nil])
([nil nil ((11121 . 11130) (#("fro" 0 3 (fontified nil)) . 11121) (11121 . 11124) (#("from_secs" 0 9 (fontified nil)) . -11121) (11121 . 11130) (#("fro" 0 3 (fontified t)) . -11121) (undo-tree-id1355 . -3) (undo-tree-id1356 . -1) (undo-tree-id1357 . -2) (undo-tree-id1358 . -3) 11124) nil (25364 42614 917126 687000) 0 nil])
([nil nil ((11131 . 11132) (11130 . 11132)) nil (25364 42614 917114 18000) 0 nil])
([nil nil ((11134 . 11135)) nil (25364 42614 917107 959000) 0 nil])
([nil nil ((11142 . 11143) (t 25364 42614 944505 73000)) nil (25364 42648 43289 339000) 0 nil])
([nil nil ((11143 . 11147) (#("join" 0 4 (fontified t)) . -11143) (undo-tree-id1376 . -4) (11143 . 11147)) nil (25364 42648 43286 525000) 0 nil])
([nil nil ((11147 . 11149)) nil (25364 42648 43274 506000) 0 nil])
([nil nil ((11149 . 11152) (t 25364 42648 97840 438000)) nil (25364 42655 129409 149000) 0 nil])
([nil nil ((11150 . 11156) (#("un" 0 2 (fontified nil)) . 11150) (11150 . 11152) (#("unwrap" 0 6 (fontified nil)) . -11150) (11150 . 11156) (#("un" 0 2 (fontified t)) . -11150) (undo-tree-id1377 . -2) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) 11152) nil (25364 42655 129405 166000) 0 nil])
([nil nil ((11156 . 11158)) nil (25364 42655 129386 193000) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 8 (fontified t face (rainbow-delimiters-depth-2-face))) . -11150) (undo-tree-id1403 . -7) (undo-tree-id1404 . 1) (undo-tree-id1405 . -8) (undo-tree-id1406 . 1) (undo-tree-id1407 . -8) (undo-tree-id1408 . 2) (undo-tree-id1409 . -7) (undo-tree-id1410 . -8) 11158 (t 25364 42655 184507 540000)) nil (25364 42714 849176 644000) 0 nil])
([nil nil ((#("join()." 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t)) . -11143) (undo-tree-id1394 . -7) (undo-tree-id1395 . -7) (undo-tree-id1396 . -7) (undo-tree-id1397 . -7) (undo-tree-id1398 . -7) (undo-tree-id1399 . -7) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7) (undo-tree-id1402 . -7) 11150) nil (25364 42714 851058 736000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11142) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) 11143) nil (25364 42717 43702 11000) 0 nil] [nil nil ((#("1));
    })." 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-5-face)) 2 3 (fontified t face (rainbow-delimiters-depth-4-face)) 3 4 (fontified t) 4 5 (fontified t) 5 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-3-face)) 10 11 (fontified t face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t)) . -11131) (undo-tree-id1384 . -12) (undo-tree-id1385 . -12) (undo-tree-id1386 . -12) (undo-tree-id1387 . -12) (undo-tree-id1388 . -12) (undo-tree-id1389 . -12) (undo-tree-id1390 . -12) (undo-tree-id1391 . -12) (undo-tree-id1392 . -12) (undo-tree-id1393 . -5) 11143) ((11131 . 11143)) (25364 42714 849154 485000) 0 nil])
([nil nil ((10996 . 10998) (t 25364 42717 94511 339000)) nil (25364 42738 102973 328000) 0 nil])
nil
([nil nil ((10998 . 11005)) nil (25364 42738 102972 144000) 0 nil])
([nil nil ((11005 . 11010) (11006 . 11007) (#("	    " 0 5 (fontified nil face (rainbow-delimiters-depth-4-face))) . 11005) (11005 . 11010) (11004 . 11006)) nil (25364 42738 102970 811000) 0 nil])
([nil nil ((#("println!(\"{:?}\",AtomicU64::load(&TIME_MS, std::sync::atomic::Ordering::Relaxed));
	std::thread::sleep(std::time::Duration::from_secs(1));" 0 8 (fontified t face rust-builtin-formatting-macro) 8 9 (fontified t face (rainbow-delimiters-depth-4-face)) 9 10 (fontified t face font-lock-string-face) 10 13 (fontified t face rust-string-interpolation) 13 14 (fontified t face rust-string-interpolation) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t) 16 25 (fontified t face font-lock-type-face) 25 27 (fontified t) 27 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-5-face)) 32 33 (fontified t face rust-ampersand-face) 33 40 (fontified t face font-lock-type-face) 40 42 (fontified t) 42 45 (fontified t face font-lock-constant-face) 45 47 (fontified t) 47 51 (fontified t face font-lock-constant-face) 51 53 (fontified t) 53 59 (fontified t face font-lock-constant-face) 59 61 (fontified t) 61 69 (fontified t face font-lock-type-face) 69 71 (fontified t) 71 78 (fontified t face font-lock-type-face) 78 79 (fontified t face (rainbow-delimiters-depth-5-face)) 79 80 (fontified t face (rainbow-delimiters-depth-4-face)) 80 82 (fontified t) 82 83 (fontified t) 83 86 (fontified t face font-lock-constant-face) 86 88 (fontified t) 88 94 (fontified t face font-lock-constant-face) 94 96 (fontified t) 96 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-4-face)) 102 105 (fontified t face font-lock-constant-face) 105 107 (fontified t) 107 111 (fontified t face font-lock-constant-face) 111 113 (fontified t) 113 121 (fontified t face font-lock-type-face) 121 123 (fontified t) 123 132 (fontified t) 132 133 (fontified t face (rainbow-delimiters-depth-5-face)) 133 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-5-face)) 135 136 (fontified t face (rainbow-delimiters-depth-4-face)) 136 137 (fontified t)) . 11015) (undo-tree-id1422 . -137) (undo-tree-id1423 . -122) (undo-tree-id1424 . -137) (undo-tree-id1425 . -7)) nil (25364 42738 102968 81000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11142 . 11143) (nil fontified nil 11142 . 11143) (nil fontified nil 11141 . 11142) (nil fontified nil 11140 . 11141) (nil fontified nil 11139 . 11140) (nil fontified nil 11138 . 11139) (nil fontified nil 11129 . 11138) (nil fontified nil 11127 . 11129) (nil fontified nil 11119 . 11127) (nil fontified nil 11117 . 11119) (nil fontified nil 11113 . 11117) (nil fontified nil 11111 . 11113) (nil fontified nil 11108 . 11111) (nil fontified nil 11107 . 11108) (nil fontified nil 11102 . 11107) (nil fontified nil 11100 . 11102) (nil fontified nil 11094 . 11100) (nil fontified nil 11092 . 11094) (nil fontified nil 11089 . 11092) (nil fontified nil 11088 . 11089) (nil fontified nil 11086 . 11088) (nil fontified nil 11085 . 11086) (nil fontified nil 11084 . 11085) (nil fontified nil 11077 . 11084) (nil fontified nil 11075 . 11077) (nil fontified nil 11067 . 11075) (nil fontified nil 11065 . 11067) (nil fontified nil 11059 . 11065) (nil fontified nil 11057 . 11059) (nil fontified nil 11053 . 11057) (nil fontified nil 11051 . 11053) (nil fontified nil 11048 . 11051) (nil fontified nil 11046 . 11048) (nil fontified nil 11039 . 11046) (nil fontified nil 11038 . 11039) (nil fontified nil 11037 . 11038) (nil fontified nil 11033 . 11037) (nil fontified nil 11031 . 11033) (nil fontified nil 11022 . 11031) (nil fontified nil 11021 . 11022) (nil fontified nil 11020 . 11021) (nil fontified nil 11019 . 11020) (nil fontified nil 11016 . 11019) (nil fontified nil 11015 . 11016) (nil fontified nil 11014 . 11015) (nil fontified nil 11006 . 11014) (11006 . 11143)) nil (25364 42738 102955 764000) 0 nil])
([nil nil ((11089 . 11093) 11143) nil (25364 42738 102944 297000) 0 nil])
([nil nil ((11006 . 11010) 11064) nil (25364 42738 102938 494000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 11159) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -2) (t 25364 42738 157845 965000)) nil (25364 42741 93454 922000) 0 nil])
([nil nil ((11020 . 11025) (t 25364 42741 147846 148000)) nil (25364 42781 504783 318000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-string-face)) . -11023) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -11024) (undo-tree-id1432 . -1) 11025) nil (25364 42781 504780 235000) 0 nil])
([nil nil ((11023 . 11025)) nil (25364 42781 504768 462000) 0 nil])
([nil nil ((11029 . 11030)) nil (25364 42781 504762 752000) 0 nil])
([nil nil ((11029 . 11030) (t 25364 42781 561181 962000)) nil (25364 42786 282541 181000) 0 nil])
([nil nil ((11096 . 11104) (t 25364 42786 334515 588000)) nil (25364 42838 836143 487000) 0 nil])
([nil nil ((11104 . 11106)) nil (25364 42838 836142 10000) 0 nil])
([nil nil ((10779 . 10784)) nil (25364 42838 836140 878000) 0 nil])
([nil nil ((10784 . 10789)) nil (25364 42838 836139 709000) 0 nil])
([nil nil ((10789 . 10794)) nil (25364 42838 836138 503000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -10791) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -10792) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -10793) (undo-tree-id1446 . -1) 10794) nil (25364 42838 836135 924000) 0 nil])
([nil nil ((10791 . 10795)) nil (25364 42838 836128 595000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10794) (undo-tree-id1441 . -1) 10795) nil (25364 42838 836127 265000) 0 nil])
([nil nil ((10794 . 10795) (#(")" 0 1 (fontified nil face font-lock-variable-name-face)) . -10794) (10794 . 10795)) nil (25364 42838 836124 491000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -10794) (undo-tree-id1438 . -1) (undo-tree-id1439 . 1) (undo-tree-id1440 . -1) 10795) nil (25364 42838 836122 488000) 0 nil])
([nil nil ((10794 . 10807)) nil (25364 42838 836117 777000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10805) (undo-tree-id1437 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 10806)) nil (25364 42838 836116 387000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10804) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 10805) nil (25364 42838 836113 149000) 0 nil])
([nil nil ((10804 . 10806)) nil (25364 42838 836109 11000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10805) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) 10806) nil (25364 42838 836106 847000) 0 nil])
([nil nil ((10805 . 10807)) nil (25364 42838 836097 303000) 0 nil])
([nil nil ((10807 . 10818) (#("sample_rate" 0 11 (fontified nil)) . -10807) (10807 . 10818)) nil (25364 42838 836094 524000) 0 nil])
([nil nil ((10818 . 10819)) nil (25364 42838 836087 447000) 0 nil])
([nil nil ((10818 . 10823) (t 25364 42838 891185 482000)) nil (25364 42853 972935 808000) 0 nil])
([nil nil ((10823 . 10824)) nil (25364 42853 972934 159000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -10823) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 10824) nil (25364 42853 972931 312000) 0 nil])
([nil nil ((10823 . 10825)) nil (25364 42853 972917 625000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11151) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (#("." 0 1 (fontified t)) . -11152) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) 11153 (t 25364 42853 997853 75000)) nil (25364 42863 86677 35000) 0 nil])
([nil nil ((11151 . 11155)) nil (25364 42863 86669 285000) 0 nil])
([nil nil ((11151 . 11162) (#("samp" 0 4 (fontified nil)) . 11151) (11151 . 11155) (#("sample_rate" 0 11 (fontified t)) . -11151) (undo-tree-id1449 . -11) (undo-tree-id1450 . -11) (11151 . 11162) (#("samp" 0 4 (fontified t)) . -11151) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) 11155) nil (25364 42863 86663 624000) 0 nil])
([nil nil ((11039 . 11044) (t 25364 42863 107853 635000)) nil (25364 42872 445951 455000) 0 nil])
([nil nil ((8814 . 8815) (t 25364 42872 497854 211000)) nil (25364 43035 703604 575000) 0 nil])
([nil nil ((8815 . 8817)) nil (25364 43035 703602 873000) 0 nil])
([nil nil ((8815 . 8824) (#("en" 0 2 (fontified nil)) . 8815) (8815 . 8817) (#("enumerate (as Iterator)" 0 23 (fontified nil)) . -8815) (8815 . 8838) (#("en" 0 2 (fontified t)) . -8815) (undo-tree-id1460 . -1) (undo-tree-id1461 . -2) (undo-tree-id1462 . -1) (undo-tree-id1463 . -2) 8817) nil (25364 43035 703599 280000) 0 nil])
([nil nil ((8824 . 8826)) nil (25364 43035 703406 411000) 0 nil])
([nil nil ((8771 . 8772) (t 25364 43035 727864 242000)) nil (25364 43045 467912 650000) 0 nil])
([nil nil ((8772 . 8774)) nil (25364 43045 467911 60000) 0 nil])
([nil nil ((8771 . 8773)) nil (25364 43045 467909 317000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . 8772) (undo-tree-id1464 . 1)) nil (25364 43045 467906 699000) 0 nil])
([nil nil ((8780 . 8781) (#(")" 0 1 (fontified nil)) . -8780) (8780 . 8781)) nil (25364 43045 467891 790000) 0 nil])
([nil nil ((8890 . 8898) (t 25364 43045 521198 176000)) nil (25364 43476 742301 517000) 0 nil])
([nil nil ((#("AtomicU64::fetch_add(&TIME_MS,1,std::sync::atomic::Ordering::Relaxed);" 0 9 (fontified t face font-lock-type-face) 9 11 (fontified t) 11 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-8-face)) 21 22 (fontified t face rust-ampersand-face) 22 29 (fontified t face font-lock-type-face) 29 32 (fontified t) 32 35 (fontified t face font-lock-constant-face) 35 37 (fontified t) 37 41 (fontified t face font-lock-constant-face) 41 43 (fontified t) 43 49 (fontified t face font-lock-constant-face) 49 51 (fontified t) 51 59 (fontified t face font-lock-type-face) 59 61 (fontified t) 61 68 (fontified t face font-lock-type-face) 68 69 (fontified t face (rainbow-delimiters-depth-8-face)) 69 70 (fontified t)) . 8906) (undo-tree-id1472 . -56) (undo-tree-id1473 . -56) (undo-tree-id1474 . -32) (undo-tree-id1475 . -52) (undo-tree-id1476 . -9) (undo-tree-id1477 . -70)) nil (25364 43476 742299 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8898) (undo-tree-id1471 . -1)) nil (25364 43476 742292 259000) 0 nil])
([nil nil ((#("			    
" 0 7 (fontified t) 7 8 (fontified t)) . 8898) (undo-tree-id1465 . -7) (undo-tree-id1466 . -7) (undo-tree-id1467 . -7) (undo-tree-id1468 . -7) (undo-tree-id1469 . -7) (undo-tree-id1470 . -8)) nil (25364 43476 742288 340000) 0 nil])
([nil nil ((#("                            " 0 8 (fontified t) 8 28 (fontified t)) . -8898)) nil (25364 43480 998045 960000) 0 nil])
([nil nil ((9033 . 9037) (t 25364 43476 764557 754000)) nil (25364 43491 376300 463000) 0 nil] [nil nil ((9033 . 9037) (t 25364 43476 764557 754000)) ((#("
			" 0 4 (fontified t)) . 9033) (undo-tree-id1478 . -4) (undo-tree-id1479 . -1)) (25364 43480 997654 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9106 . 9107) (nil fontified nil 9106 . 9107) (nil fontified nil 9105 . 9106) (nil fontified nil 9098 . 9105) (nil fontified nil 9096 . 9098) (nil fontified nil 9088 . 9096) (nil fontified nil 9086 . 9088) (nil fontified nil 9080 . 9086) (nil fontified nil 9078 . 9080) (nil fontified nil 9074 . 9078) (nil fontified nil 9072 . 9074) (nil fontified nil 9069 . 9072) (nil fontified nil 9066 . 9069) (nil fontified nil 9059 . 9066) (nil fontified nil 9058 . 9059) (nil fontified nil 9057 . 9058) (nil fontified nil 9048 . 9057) (nil fontified nil 9046 . 9048) (nil fontified nil 9037 . 9046) (9037 . 9107)) nil (25364 43491 376298 141000) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . -8780) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . 1) (undo-tree-id1502 . -1) 8781) nil (25364 43491 376293 27000) 0 nil])
([nil nil ((#("i, " 0 1 (fontified t) 1 3 (fontified t)) . -8772) (undo-tree-id1495 . 3) (undo-tree-id1496 . -3) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) 8775) nil (25364 43491 376288 311000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . -8771) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) 8772) nil (25364 43491 376283 233000) 0 nil])
([nil nil ((#("enumerate()" 0 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-6-face)) 10 11 (fontified t face (rainbow-delimiters-depth-6-face))) . -8815) (undo-tree-id1483 . -10) (undo-tree-id1484 . -11) (undo-tree-id1485 . -11) (undo-tree-id1486 . 1) (undo-tree-id1487 . -11) (undo-tree-id1488 . 2) (undo-tree-id1489 . -10) 8826) nil (25364 43491 376529 59000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8814) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) 8815) nil (25364 43493 16366 773000) 0 nil] [nil nil ((#("into())." 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 6 (fontified t face (rainbow-delimiters-depth-7-face)) 6 7 (fontified t face (rainbow-delimiters-depth-6-face)) 7 8 (fontified t)) . -8807) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (undo-tree-id1482 . -8) 8815) ((8807 . 8815)) (25364 43491 376264 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 644 . 645) (nil fontified nil 617 . 645) (617 . 645) (t 25364 43493 37892 73000)) nil (25364 43960 551853 593000) 0 nil])
nil
([nil nil ((#("atomic" 0 6 (fontified t)) . -279) (undo-tree-id1519 . -6) (undo-tree-id1520 . -6) (undo-tree-id1521 . -6) (undo-tree-id1522 . -6) (undo-tree-id1523 . -6) 285 (t 25364 43960 607920 481000)) nil (25364 43967 949642 649000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -277) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (#(" " 0 1 (fontified t)) . -278) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) 279) nil (25364 43967 949631 521000) 0 nil])
([nil nil ((#("Ordering" 0 8 (fontified t face font-lock-type-face)) . -171) (undo-tree-id1534 . -8) (undo-tree-id1535 . -8) (undo-tree-id1536 . -8) 179 (t 25364 43967 971254 266000)) nil (25364 43978 76325 819000) 0 nil])
([nil nil ((#("cmp::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -166) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) 171) nil (25364 43978 76319 417000) 0 nil])
([nil nil ((166 . 169)) nil (25364 43978 76313 449000) 0 nil])
([nil nil ((166 . 170) (#("syn" 0 3 (fontified nil)) . 166) (166 . 169) (#("sync" 0 4 (fontified nil)) . -166) (166 . 170) (#("syn" 0 3 (fontified t)) . -166) (undo-tree-id1529 . -3) (undo-tree-id1530 . -3) 169) nil (25364 43978 76310 527000) 0 nil])
([nil nil ((170 . 174)) nil (25364 43978 76304 701000) 0 nil])
([nil nil ((172 . 178) (#("at" 0 2 (fontified nil)) . 172) (172 . 174) (#("atomic" 0 6 (fontified nil)) . -172) (172 . 178) (#("at" 0 2 (fontified t)) . -172) (undo-tree-id1526 . -2) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 174) nil (25364 43978 76302 750000) 0 nil])
([nil nil ((178 . 181)) nil (25364 43978 76298 90000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -180) (undo-tree-id1525 . -1) 181) nil (25364 43978 76296 749000) 0 nil])
([nil nil ((180 . 182)) nil (25364 43978 76293 808000) 0 nil])
([nil nil ((180 . 188) (#("Or" 0 2 (fontified nil)) . 180) (180 . 182) (#("Ordering" 0 8 (fontified nil)) . -180) (180 . 188) (#("Or" 0 2 (fontified t face font-lock-type-face)) . -180) (undo-tree-id1524 . -2) 182) nil (25364 43978 76288 929000) 0 nil])
([nil nil ((#("Sample, " 0 6 (fontified t face font-lock-type-face) 6 7 (fontified t) 7 8 (fontified t)) . -12) (undo-tree-id1537 . -8) (undo-tree-id1538 . -6) (undo-tree-id1539 . -8) 20 (t 25364 43978 131254 890000)) nil (25364 43988 111353 637000) 0 nil])
([nil nil ((#("atomic::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -9084) (undo-tree-id1544 . -8) (undo-tree-id1545 . -8) 9092 (t 25364 43988 161255 507000)) nil (25364 44005 968509 792000) 0 nil])
([nil nil ((#("sync::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -9078) (undo-tree-id1542 . -6) (undo-tree-id1543 . -6) 9084) nil (25364 44005 968505 119000) 0 nil])
([nil nil ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -9073) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) 9078) nil (25364 44005 968497 994000) 0 nil])
([nil nil ((#("atomic::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -11099) (undo-tree-id1552 . -8) (undo-tree-id1553 . -8) 11107 (t 25364 44005 991256 601000)) nil (25364 44012 957061 915000) 0 nil])
([nil nil ((#("sync::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -11093) (undo-tree-id1549 . -6) (undo-tree-id1550 . -6) (undo-tree-id1551 . -6) 11099) nil (25364 44012 957057 363000) 0 nil])
([nil nil ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -11088) (undo-tree-id1546 . -5) (undo-tree-id1547 . -5) (undo-tree-id1548 . -5) 11093) nil (25364 44012 957048 774000) 0 nil])
([nil nil ((10585 . 10590) (t 25364 44012 971257 29000)) nil (25364 44059 3729 541000) 0 nil])
([nil nil ((10590 . 10593)) nil (25364 44059 3728 271000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10585) (undo-tree-id1561 . -1) (#(" " 0 1 (fontified t)) . -10586) (undo-tree-id1562 . -1) (#(" " 0 1 (fontified t)) . -10587) (undo-tree-id1563 . -1) (#(" " 0 1 (fontified t)) . -10588) (undo-tree-id1564 . -1) (#(" " 0 1 (fontified t)) . -10589) (undo-tree-id1565 . -1) (#("l" 0 1 (fontified t)) . -10590) (undo-tree-id1566 . -1) (#("e" 0 1 (fontified t)) . -10591) (undo-tree-id1567 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -10592) (undo-tree-id1568 . -1) 10593) nil (25364 44059 3725 473000) 0 nil])
([nil nil ((11207 . 11210)) nil (25364 44059 3714 388000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11207) (undo-tree-id1558 . -1) (#("e" 0 1 (fontified t)) . -11208) (undo-tree-id1559 . -1) (#("t" 0 1 (fontified t)) . -11209) (undo-tree-id1560 . -1) 11210) nil (25364 44059 3712 637000) 0 nil])
([nil nil ((11207 . 11217)) nil (25364 44398 793150 919000) 0 nil])
([nil nil ((11217 . 11221)) ((#("Proi" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face)) . 11217) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4)) (25364 44399 43293 329000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-type-face)) . 11220) (undo-tree-id1786 . -1)) ((11220 . 11221)) (25364 44399 703258 746000) 0 nil])
([nil nil ((11220 . 11222)) ((#("gr" 0 2 (fontified t face font-lock-type-face)) . 11220) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2)) (25364 44399 736265 665000) 0 nil])
([nil nil ((11222 . 11225)) ((#("ess" 0 3 (fontified t face font-lock-type-face)) . 11222) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3)) (25364 44399 776233 345000) 0 nil])
([nil nil ((11217 . 11228) (#("Progress" 0 8 (fontified nil)) . 11217) (11217 . 11225) (#("ProgressBar" 0 11 (fontified nil)) . 11217) (11217 . 11228) (#("Progress" 0 3 (fontified t face font-lock-type-face) 3 5 (fontified t face font-lock-type-face) 5 8 (fontified t face font-lock-type-face)) . 11217) (undo-tree-id1787 . -5) (undo-tree-id1788 . -5) (undo-tree-id1789 . -3)) ((11217 . 11225) (#("ProgressBar" 0 11 (fontified nil)) . 11217) (11217 . 11228) (#("Progress" 0 8 (fontified nil)) . 11217) (11217 . 11225) (#("ProgressBar" 0 11 (fontified t face font-lock-type-face)) . 11217) (undo-tree-id1770 . -11) (undo-tree-id1771 . -6) (undo-tree-id1772 . -11) (undo-tree-id1773 . -11) (undo-tree-id1774 . -6) (undo-tree-id1775 . -11) (undo-tree-id1776 . -11) (undo-tree-id1777 . -11) (undo-tree-id1778 . -11) (undo-tree-id1779 . -11)) (25364 44399 816741 925000) 0 nil])
([nil nil ((11228 . 11231)) ((#("::n" 0 2 (fontified t) 2 3 (fontified t)) . 11228) (undo-tree-id1762 . -2) (undo-tree-id1763 . -2) (undo-tree-id1764 . -2) (undo-tree-id1765 . -2) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -2) (undo-tree-id1769 . -2)) (25364 44399 856841 18000) 0 nil])
([nil nil ((11230 . 11233) (#("n" 0 1 (fontified nil)) . 11230) (11230 . 11231) (#("new" 0 3 (fontified nil)) . 11230) (11230 . 11233) (#("n" 0 1 (fontified t)) . 11230)) ((11230 . 11231) (#("new" 0 3 (fontified nil)) . 11230) (11230 . 11233) (#("n" 0 1 (fontified nil)) . 11230) (11230 . 11231) (#("new" 0 3 (fontified t)) . 11230) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3)) (25364 44399 896704 417000) 0 nil])
([nil nil ((11234 . 11238) (11233 . 11235)) ((#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 11233) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (#("1024" 0 4 (fontified t)) . 11234)) (25364 44399 937914 603000) 0 nil])
([nil nil ((11239 . 11240)) ((#(";" 0 1 (fontified t)) . 11239) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1)) (25364 44399 978020 890000) 0 nil])
([nil nil ((11240 . 11245)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 11240) (undo-tree-id1730 . -5) (undo-tree-id1731 . -5) (undo-tree-id1732 . -5) (undo-tree-id1733 . -5) (undo-tree-id1734 . -5) (undo-tree-id1735 . -5) (undo-tree-id1736 . -5) (undo-tree-id1737 . -5)) (25364 44400 16298 396000) 0 nil])
([nil nil ((11245 . 11248)) ((#("bar" 0 3 (fontified t)) . 11245) (undo-tree-id1722 . -3) (undo-tree-id1723 . -3) (undo-tree-id1724 . -3) (undo-tree-id1725 . -3) (undo-tree-id1726 . -3) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (undo-tree-id1729 . -3)) (25364 44400 263115 371000) 0 nil])
([nil nil ((11248 . 11249)) ((#("." 0 1 (fontified t)) . 11248) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1)) (25364 44400 511048 9000) 0 nil])
([nil nil ((11249 . 11255) (#("prefix" 0 6 (fontified nil)) . 11249) (11249 . 11255)) ((#("prefix" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("prefix" 0 5 (fontified t) 5 6 (fontified t)) . 11249) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6)) (25364 44400 779695 301000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 11254)) ((11254 . 11255)) (25364 44401 32382 938000) 0 nil])
([nil nil ((#("prefi" 0 5 (fontified t)) . 11249) (undo-tree-id1790 . -5) (undo-tree-id1791 . -5)) ((11249 . 11254)) (25364 44401 231659 937000) 0 nil])
([nil nil ((11249 . 11252)) ((#("len" 0 3 (fontified t)) . 11249) (undo-tree-id1710 . -3) (undo-tree-id1711 . -3)) (25364 44401 458565 352000) 0 nil])
([nil nil ((11249 . 11255) (#("len" 0 3 (fontified nil)) . 11249) (11249 . 11252) (#("length" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("len" 0 3 (fontified t)) . 11249)) ((11249 . 11252) (#("length" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("len" 0 3 (fontified nil)) . 11249) (11249 . 11252) (#("length" 0 6 (fontified t)) . 11249) (undo-tree-id1707 . -6) (undo-tree-id1708 . -6) (undo-tree-id1709 . -6)) (25364 44401 716300 576000) 0 nil])
([nil nil ((#("length" 0 6 (fontified t)) . 11249) (undo-tree-id1792 . -6)) ((11249 . 11255)) (25364 44401 936436 127000) 0 nil])
([nil nil ((11249 . 11255)) ((#("setpro" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 11249) (undo-tree-id1705 . -6) (undo-tree-id1706 . -6)) (25364 44402 172044 886000) 0 nil])
([nil nil ((#("pro" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11252)) ((11252 . 11255)) (25364 44402 371637 757000) 0 nil])
([nil nil ((11252 . 11253)) ((#("p" 0 1 (fontified t)) . 11252) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1)) (25364 44402 611471 636000) 0 nil])
([nil nil ((11249 . 11261) (#("setp" 0 4 (fontified nil)) . 11249) (11249 . 11253) (#("set_position" 0 12 (fontified nil)) . 11249) (11249 . 11261) (#("setp" 0 3 (fontified t) 3 4 (fontified t)) . 11249) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3)) ((11249 . 11253) (#("set_position" 0 12 (fontified nil)) . 11249) (11249 . 11261) (#("setp" 0 4 (fontified nil)) . 11249) (11249 . 11253) (#("set_position" 0 12 (fontified t)) . 11249) (undo-tree-id1696 . -9) (undo-tree-id1697 . -12) (undo-tree-id1698 . -9) (undo-tree-id1699 . -12) (undo-tree-id1700 . -12) (undo-tree-id1701 . -12) (undo-tree-id1702 . -12)) (25364 44402 792824 222000) 0 nil])
([nil nil ((11261 . 11263)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face))) . 11261) (undo-tree-id1692 . -1) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2)) (25364 44403 23065 506000) 0 nil])
([nil nil ((11263 . 11264)) ((#(";" 0 1 (fontified t)) . 11263)) (25364 44407 930894 76000) 0 nil])
([nil nil ((#("1024" 0 4 (fontified t)) . -11234) (undo-tree-id1831 . -4) (undo-tree-id1832 . -4) 11238) nil (25364 44478 151099 299000) 0 nil] [nil nil ((10803 . 10808)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 10803) (undo-tree-id1804 . -5) (undo-tree-id1805 . -5) (undo-tree-id1806 . -1) (undo-tree-id1807 . -5)) (25364 44407 600595 95000) 0 nil])
([nil nil ((10803 . 10808)) nil (25364 44478 151095 400000) 0 nil])
([nil nil ((10808 . 10809)) ((#(";" 0 1 (fontified t)) . 10808)) (25364 44407 198993 782000) 0 nil])
([nil nil ((10808 . 10811)) nil (25364 44478 151094 81000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 10808)) ((10808 . 10809)) (25364 44406 978997 412000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10808) (undo-tree-id1828 . -1) (#("e" 0 1 (fontified t)) . -10809) (undo-tree-id1829 . -1) (#("t" 0 1 (fontified t)) . -10810) (undo-tree-id1830 . -1) 10811) nil (25364 44478 151091 745000) 0 nil])
([nil nil ((10808 . 10814)) ((#("let tu" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face)) . 10808) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4)) (25364 44406 773886 884000) 0 nil])
([nil nil ((10808 . 10812)) nil (25364 44478 151086 168000) 0 nil])
([nil nil ((#("tu" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face)) . 10812)) ((10812 . 10814)) (25364 44406 512042 124000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10810) (undo-tree-id1826 . -1) (#("t" 0 1 (fontified t)) . -10811) (undo-tree-id1827 . -1) 10812) nil (25364 44478 151084 334000) 0 nil])
([nil nil ((10812 . 10815)) ((#("dyu" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face)) . 10812) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1)) (25364 44406 322963 408000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10809) (undo-tree-id1825 . -1) 10810) nil (25364 44478 151079 894000) 0 nil])
([nil nil ((#("yu" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face)) . 10813)) ((10813 . 10815)) (25364 44406 140616 88000) 0 nil])
([nil nil ((10809 . 10817)) nil (25364 44478 151076 822000) 0 nil])
([nil nil ((10813 . 10827)) ((#("uration = clop" 0 7 (fontified t face font-lock-variable-name-face) 7 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 10813) (undo-tree-id1795 . -12) (undo-tree-id1796 . -12) (undo-tree-id1797 . -12)) (25364 44405 962775 649000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -10812) (undo-tree-id1820 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -10813) (undo-tree-id1821 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -10814) (undo-tree-id1822 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -10815) (undo-tree-id1823 . -1) (#(" " 0 1 (fontified t)) . -10816) (undo-tree-id1824 . -1) 10817) nil (25364 44478 151066 275000) 0 nil])
([nil nil ((#("op" 0 1 (fontified t) 1 2 (fontified t)) . 10825)) ((10825 . 10827)) (25364 44405 652597 182000) 0 nil])
([nil nil ((10812 . 10828)) nil (25364 44478 151057 594000) 0 nil])
([nil nil ((10825 . 10827)) ((#("up" 0 1 (fontified t) 1 2 (fontified t)) . 10825) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2)) (25364 44395 32644 673000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10826) (undo-tree-id1819 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 10827)) nil (25364 44478 151055 827000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10825) (undo-tree-id1575 . -1) (#("p" 0 1 (fontified t)) . -10826) (undo-tree-id1576 . -1) 10827) ((10825 . 10827)) (25364 44394 991966 19000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10825) (undo-tree-id1818 . -1) 10826) nil (25364 44478 151052 987000) 0 nil])
([nil nil ((10825 . 10827)) ((#("ui" 0 1 (fontified t) 1 2 (fontified t)) . 10825) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2)) (25364 44394 951203 135000) 0 nil])
([nil nil ((10825 . 10828)) nil (25364 44478 151050 478000) 0 nil])
([nil nil ((10827 . 10828)) ((#("p" 0 1 (fontified t)) . 10827) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1)) (25364 44394 912614 70000) 0 nil])
([nil nil ((10828 . 10829)) nil (25364 44478 151049 233000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10825) (undo-tree-id1572 . -1) (#("i" 0 1 (fontified t)) . -10826) (undo-tree-id1573 . -1) (#("p" 0 1 (fontified t)) . -10827) (undo-tree-id1574 . -1) 10828) ((10825 . 10828)) (25364 44394 871199 674000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10828) (undo-tree-id1817 . -1) 10829) nil (25364 44478 151047 702000) 0 nil])
([nil nil ((10825 . 10828)) (("ip." . 10825)) (25364 44394 832302 907000) 0 nil])
([nil nil ((10828 . 10830)) nil (25364 44478 151045 184000) 0 nil])
([nil nil ((1741 . 1746)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 1741) (undo-tree-id1661 . -5) (undo-tree-id1662 . -5) (undo-tree-id1663 . -5) (undo-tree-id1664 . -5) (undo-tree-id1665 . -1) (undo-tree-id1666 . -5)) (25364 44394 795041 300000) 0 nil])
([nil nil ((10828 . 10835) (#("sa" 0 2 (fontified nil)) . 10828) (10828 . 10830) (#("samples" 0 7 (fontified nil)) . -10828) (10828 . 10835) (#("sa" 0 2 (fontified t)) . -10828) (undo-tree-id1816 . -2) 10830) nil (25364 44478 151042 905000) 0 nil])
([nil nil ((1746 . 1764)) ((#("pub duration: u64." 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 12 (fontified t face font-lock-variable-name-face) 12 14 (fontified t) 14 17 (fontified t face font-lock-type-face) 17 18 (fontified t)) . 1746) (undo-tree-id1656 . -4) (undo-tree-id1657 . -18) (undo-tree-id1658 . -18) (undo-tree-id1659 . -4) (undo-tree-id1660 . -17)) (25364 44394 759273 592000) 0 nil])
([nil nil ((10835 . 10841)) nil (25364 44478 151038 997000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1763) (undo-tree-id1569 . -1) (undo-tree-id1571 . -1) 1764) ((1763 . 1764)) (25364 44394 711733 658000) 0 nil])
([nil nil ((10841 . 10849)) nil (25364 44478 151037 776000) 0 nil])
([nil nil ((1763 . 1764)) ((#("," 0 1 (fontified t)) . 1763) (t 25364 44245 107937 945000)) (25364 44394 679333 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10848) (undo-tree-id1815 . -1) 10849) nil (25364 44478 151036 260000) 0 nil])
([nil nil ((2431 . 2437) (t 25364 44245 107937 945000)) ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 2431) (undo-tree-id1649 . -6) (undo-tree-id1650 . -6) (undo-tree-id1651 . -6) (undo-tree-id1652 . -1) (undo-tree-id1653 . -6) (undo-tree-id1654 . -1) (undo-tree-id1655 . -6)) (25364 44394 18785 853000) 0 nil])
([nil nil ((10848 . 10851)) nil (25364 44478 151033 590000) 0 nil])
([nil nil ((2437 . 2441)) ((#("dura" 0 4 (fontified t)) . 2437) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4)) (25364 44391 787930 700000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10849) (undo-tree-id1813 . -1) (#("a" 0 1 (fontified t)) . -10850) (undo-tree-id1814 . -1) 10851) nil (25364 44478 151031 763000) 0 nil])
([nil nil ((2437 . 2445) (#("dura" 0 4 (fontified nil)) . 2437) (2437 . 2441) (#("duration" 0 8 (fontified nil)) . -2437) (2437 . 2445) (#("dura" 0 4 (fontified t)) . -2437) (undo-tree-id1604 . -4) 2441) ((2437 . 2441) (#("duration" 0 8 (fontified nil)) . 2437) (2437 . 2445) (#("dura" 0 4 (fontified nil)) . 2437) (2437 . 2441) (#("duration" 0 8 (fontified t)) . 2437) (undo-tree-id1642 . -8) (undo-tree-id1643 . -8) (undo-tree-id1644 . -8)) (25364 44391 390658 836000) 0 nil])
([nil nil ((10849 . 10854)) nil (25364 44478 151027 576000) 0 nil])
([nil nil ((2445 . 2446)) ((#("." 0 1 (fontified t)) . 2445) (undo-tree-id1641 . -1)) (25364 44391 10780 199000) 0 nil])
([nil nil ((10854 . 10865) (#("sample_rate" 0 11 (fontified nil)) . -10854) (10854 . 10865)) nil (25364 44478 151026 50000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2445) (undo-tree-id1603 . -1) 2446) ((2445 . 2446)) (25364 44389 910100 914000) 0 nil])
([nil nil ((10865 . 10870)) nil (25364 44478 151024 267000) 0 nil])
([nil nil ((2445 . 2446)) ((#("," 0 1 (fontified t)) . 2445) (undo-tree-id1640 . -1)) (25364 44389 459207 506000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -10869) (undo-tree-id1812 . -1) 10870) nil (25364 44478 151022 610000) 0 nil])
([nil nil ((4265 . 4266) (#("	" 0 1 (fontified nil)) . 4264) (4264 . 4265) (4264 . 4265)) ((#("
" 0 1 (fontified nil)) . 4264) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#("	" 0 1 (fontified nil)) . 4264) (4264 . 4265) (#("	" 0 1 (fontified t)) . 4265) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1)) (25364 44389 240926 979000) 0 nil])
([nil nil ((10869 . 10874)) nil (25364 44478 151019 33000) 0 nil])
([nil nil ((4266 . 4281)) ((#("let duration = " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 12 (fontified t face font-lock-variable-name-face) 12 15 (fontified t)) . 4266) (undo-tree-id1625 . -15) (undo-tree-id1626 . -15) (undo-tree-id1627 . -15) (undo-tree-id1628 . -15)) (25364 44389 11223 327000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -10870) (undo-tree-id1808 . -1) (#("6" 0 1 (fontified t)) . -10871) (undo-tree-id1809 . -1) (#("e" 0 1 (fontified t)) . -10872) (undo-tree-id1810 . -1) (#("4" 0 1 (fontified t)) . -10873) (undo-tree-id1811 . -1) 10874) nil (25364 44478 151016 76000) 0 nil])
([nil nil ((4281 . 4285)) ((#("trac" 0 4 (fontified t)) . 4281) (undo-tree-id1624 . -4)) (25364 44388 815195 134000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10866) (10866 . 10867) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10866) (10866 . 10867) (10865 . 10867)) nil (25364 44478 150999 702000) 0 nil])
([nil nil ((4281 . 4286) (#("trac" 0 4 (fontified nil)) . 4281) (4281 . 4285) (#("track" 0 5 (fontified nil)) . -4281) (4281 . 4286) (#("trac" 0 4 (fontified t)) . -4281) (undo-tree-id1602 . -4) 4285) ((4281 . 4285) (#("track" 0 5 (fontified nil)) . 4281) (4281 . 4286) (#("trac" 0 4 (fontified nil)) . 4281) (4281 . 4285) (#("track" 0 5 (fontified t)) . 4281) (undo-tree-id1620 . -5) (undo-tree-id1621 . -5) (undo-tree-id1622 . -5) (undo-tree-id1623 . -5)) (25364 44388 626835 28000) 0 nil])
([nil nil ((10872 . 10875)) nil (25364 44478 150992 85000) 0 nil])
([nil nil ((4286 . 4288)) ((#(".f" 0 1 (fontified t) 1 2 (fontified t)) . 4286) (undo-tree-id1616 . -2) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1)) (25364 44388 432850 968000) 0 nil])
([nil nil ((11306 . 11307) (t 25364 44478 204618 920000)) nil (25364 44494 932150 476000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4287) (undo-tree-id1601 . -1) 4288) ((4287 . 4288)) (25364 44388 242603 552000) 0 nil])
([nil nil ((11307 . 11309)) nil (25364 44494 932149 94000) 0 nil])
([nil nil ((4287 . 4288)) ((#("c" 0 1 (fontified t)) . 4287) (undo-tree-id1615 . -1)) (25364 44388 61271 552000) 0 nil])
([nil nil ((11306 . 11314) (#("dur" 0 3 (fontified nil)) . 11306) (11306 . 11309) (#("duration" 0 8 (fontified nil)) . -11306) (11306 . 11314) (#("dur" 0 3 (fontified t)) . -11306) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -2) (undo-tree-id1845 . -3) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 11309) nil (25364 44494 932146 666000) 0 nil])
([nil nil ((4287 . 4299) (#("c" 0 1 (fontified nil)) . 4287) (4287 . 4288) (#("codec_params" 0 12 (fontified nil)) . -4287) (4287 . 4299) (#("c" 0 1 (fontified t)) . -4287) (undo-tree-id1600 . -1) 4288) ((4287 . 4288) (#("codec_params" 0 12 (fontified nil)) . 4287) (4287 . 4299) (#("c" 0 1 (fontified nil)) . 4287) (4287 . 4288) (#("codec_params" 0 12 (fontified t)) . 4287) (undo-tree-id1611 . -12) (undo-tree-id1612 . -12) (undo-tree-id1613 . -12) (undo-tree-id1614 . -12)) (25364 44387 831100 68000) 0 nil])
([nil nil ((11314 . 11317)) nil (25364 44494 932138 467000) 0 nil])
([nil nil ((4299 . 4302)) ((#(".du" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 4299) (undo-tree-id1607 . -3) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1)) (25364 44387 451926 809000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11314) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("a" 0 1 (fontified t)) . -11315) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -11316) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) 11317) nil (25364 44494 932135 85000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -4300) (undo-tree-id1598 . -1) (#("u" 0 1 (fontified t)) . -4301) (undo-tree-id1599 . -1) 4302) ((4300 . 4302)) (25364 44386 821278 127000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -11320) (11320 . 11321) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -11320) (11320 . 11321) (11314 . 11321)) nil (25364 44494 932114 2000) 0 nil])
([nil nil ((4300 . 4301)) ((#("t" 0 1 (fontified t)) . 4300) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1)) (25364 44386 736189 46000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -10865) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -10866) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . 1) (undo-tree-id1855 . -1) 10867 (t 25364 44494 954619 949000)) nil (25364 44503 655841 50000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4300) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) 4301) ((4300 . 4301)) (25364 44386 735097 724000) 0 nil])
([nil nil ((10849 . 10851) (t 25364 44503 707953 819000)) nil (25364 44511 558484 279000) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 10850) (undo-tree-id1856 . 1)) nil (25364 44511 558481 816000) 0 nil])
([nil nil ((10873 . 10874) (#(")" 0 1 (fontified nil face font-lock-type-face)) . -10873) (10873 . 10874)) nil (25364 44511 558468 738000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -11320) (undo-tree-id1883 . -1) (undo-tree-id1884 . 1) (undo-tree-id1885 . -1) 11321 (t 25364 44511 581287 637000)) nil (25364 44529 327312 502000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -11319) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 11320)) nil (25364 44529 327307 442000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11314) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (#("i" 0 1 (fontified t)) . -11315) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -11316) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (#("t" 0 1 (fontified t)) . -11317) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (#("o" 0 1 (fontified t)) . -11318) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) 11319) nil (25364 44529 327302 119000) 0 nil])
([nil nil ((11314 . 11318)) nil (25364 44529 327277 957000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11317) (undo-tree-id1858 . -1) 11318) nil (25364 44529 327276 254000) 0 nil])
([nil nil ((11317 . 11319)) nil (25364 44529 327273 407000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11318) (undo-tree-id1857 . -1) 11319) nil (25364 44529 327271 38000) 0 nil])
([nil nil ((11321 . 11322) (#(")" 0 1 (fontified nil face font-lock-type-face)) . -11321) (11318 . 11322)) nil (25364 44529 327258 608000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-string-face)) . -11130) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) 11131 (t 25364 44529 381288 728000)) nil (25364 44546 864466 891000) 0 nil])
([nil nil ((11131 . 11133)) nil (25364 44546 864463 856000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -11131) (undo-tree-id1887 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -11132) (undo-tree-id1888 . -1) 11133) nil (25364 44546 864462 552000) 0 nil])
([nil nil ((11131 . 11133)) nil (25364 44546 864458 674000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . -11132) (undo-tree-id1886 . -1) 11133) nil (25364 44546 864456 490000) 0 nil])
([nil nil ((11132 . 11133)) nil (25364 44546 864446 329000) 0 nil])
([nil nil ((11346 . 11348) (t 25364 44546 884623 136000)) nil (25364 44596 203627 769000) 0 nil])
([nil nil ((11346 . 11355) (#("At" 0 2 (fontified nil)) . 11346) (11346 . 11348) (#("AtomicU64" 0 9 (fontified nil)) . -11346) (11346 . 11355) (#("At" 0 2 (fontified t face font-lock-type-face)) . -11346) (undo-tree-id1926 . -2) (undo-tree-id1927 . -2) 11348) nil (25364 44596 203625 761000) 0 nil])
([nil nil ((11355 . 11359)) nil (25364 44596 203622 28000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11357) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (#("p" 0 1 (fontified t)) . -11358) (undo-tree-id1925 . -1) 11359) nil (25364 44596 203620 504000) 0 nil])
([nil nil ((11357 . 11359)) nil (25364 44596 203616 760000) 0 nil])
([nil nil ((11357 . 11361) (#("lo" 0 2 (fontified nil)) . 11357) (11357 . 11359) (#("load" 0 4 (fontified t)) . -11357) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (11357 . 11361) (#("lo" 0 2 (fontified t)) . -11357) (undo-tree-id1921 . -2) (undo-tree-id1922 . -2) 11359) nil (25364 44596 203614 959000) 0 nil])
([nil nil ((11361 . 11363)) nil (25364 44596 203609 655000) 0 nil])
([nil nil ((11362 . 11367)) nil (25364 44596 203608 721000) 0 nil])
([nil nil ((11363 . 11370) (#("TIME" 0 4 (fontified nil)) . 11363) (11363 . 11367) (#("TIME_MS" 0 7 (fontified t face font-lock-type-face)) . -11363) (undo-tree-id1914 . -7) (undo-tree-id1915 . -7) (11363 . 11370) (#("TIME" 0 4 (fontified t face font-lock-type-face)) . -11363) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) 11367) nil (25364 44596 203606 710000) 0 nil])
([nil nil ((11370 . 11376)) nil (25364 44596 203599 848000) 0 nil])
([nil nil ((11371 . 11379) (#("Order" 0 5 (fontified nil)) . 11371) (11371 . 11376) (#("Ordering" 0 8 (fontified t face font-lock-type-face)) . -11371) (undo-tree-id1910 . -8) (undo-tree-id1911 . -8) (11371 . 11379) (#("Order" 0 5 (fontified t face font-lock-type-face)) . -11371) (undo-tree-id1912 . -5) (undo-tree-id1913 . -5) 11376) nil (25364 44596 203597 880000) 0 nil])
([nil nil ((11379 . 11382)) nil (25364 44596 203591 675000) 0 nil])
([nil nil ((11381 . 11388) (#("R" 0 1 (fontified nil)) . 11381) (11381 . 11382) (#("Relaxed" 0 7 (fontified nil)) . -11381) (11381 . 11388) (#("R" 0 1 (fontified t face font-lock-type-face)) . -11381) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) 11382) nil (25364 44596 203589 245000) 0 nil])
([nil nil ((11389 . 11396)) nil (25364 44596 203581 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11389) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (#("a" 0 1 (fontified t)) . -11390) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -11391) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#(" " 0 1 (fontified t)) . -11392) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (#("f" 0 1 (fontified t)) . -11393) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (#("6" 0 1 (fontified t)) . -11394) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -11395) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) 11396) nil (25364 44596 203574 771000) 0 nil])
([nil nil ((11324 . 11329) (t 25364 44596 257959 501000)) nil (25364 44687 169915 630000) 0 nil])
([nil nil ((11329 . 11338)) nil (25364 44687 169913 230000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11335) (undo-tree-id2031 . -1) (#("e" 0 1 (fontified t)) . -11336) (undo-tree-id2032 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -11337) (undo-tree-id2033 . -1) 11338) nil (25364 44687 169910 335000) 0 nil])
([nil nil ((11335 . 11339)) nil (25364 44687 169903 44000) 0 nil])
([nil nil ((11339 . 11344)) nil (25364 44687 169901 387000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11343) (undo-tree-id2030 . -1) 11344) nil (25364 44687 169899 394000) 0 nil])
([nil nil ((11343 . 11345)) nil (25364 44687 169895 807000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -11344) (undo-tree-id2029 . -1) 11345) nil (25364 44687 169893 742000) 0 nil])
([nil nil ((11344 . 11349)) nil (25364 44687 169890 25000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11346) (undo-tree-id2026 . -1) (#("t" 0 1 (fontified t)) . -11347) (undo-tree-id2027 . -1) (#("r" 0 1 (fontified t)) . -11348) (undo-tree-id2028 . -1) 11349) nil (25364 44687 169887 331000) 0 nil])
([nil nil ((11346 . 11349)) nil (25364 44687 169879 890000) 0 nil])
([nil nil ((11349 . 11350)) nil (25364 44687 169878 171000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11347) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (#("e" 0 1 (fontified t)) . -11348) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (#("c" 0 1 (fontified t)) . -11349) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) 11350) nil (25364 44687 169875 142000) 0 nil])
([nil nil ((11347 . 11349)) nil (25364 44687 169863 163000) 0 nil])
([nil nil ((11349 . 11351)) nil (25364 44687 169861 360000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11335) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (#("e" 0 1 (fontified t)) . -11336) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -11337) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#(" " 0 1 (fontified t)) . -11338) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -11339) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -11340) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -11341) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -11342) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -11343) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -11344) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -11345) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#("." 0 1 (fontified t)) . -11346) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (#("r" 0 1 (fontified t)) . -11347) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#("e" 0 1 (fontified t)) . -11348) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (#("c" 0 1 (fontified t)) . -11349) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (#("v" 0 1 (fontified t)) . -11350) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) 11351) nil (25364 44687 169847 418000) 0 nil])
([nil nil ((11335 . 11338)) nil (25364 44687 169707 326000) 0 nil])
([nil nil ((11338 . 11341)) nil (25364 44687 169705 929000) 0 nil])
([nil nil ((11338 . 11347) (#("let" 0 3 (fontified nil)) . 11338) (11338 . 11341) (#("while let" 0 9 (fontified nil)) . -11338) (11338 . 11347) (#("let" 0 3 (fontified t face font-lock-keyword-face)) . -11338) (undo-tree-id1931 . -3) (undo-tree-id1932 . -3) 11341) nil (25364 44687 169702 514000) 0 nil])
([nil nil ((#("while " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . -11338) (undo-tree-id1930 . -6) 11344) nil (25364 44687 169694 606000) 0 nil])
([nil nil ((#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . -11335) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) 11338) nil (25364 44687 169689 669000) 0 nil])
([nil nil ((11338 . 11339)) nil (25364 44687 169678 252000) 0 nil])
([nil nil ((11411 . 11413)) nil (25364 44687 169672 898000) 0 nil])
([nil nil ((11339 . 11345) (t 25364 44687 224631 752000)) nil (25364 44721 721018 815000) 0 nil])
([nil nil ((11345 . 11346)) nil (25364 44723 775241 537000) 0 nil])
([nil nil ((#("while let done_rx" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-variable-name-face) 15 17 (fontified t face font-lock-variable-name-face)) . 11329) (undo-tree-id2056 . -10) (undo-tree-id2057 . -10) (undo-tree-id2058 . -17) (undo-tree-id2059 . -5) (undo-tree-id2060 . -17)) nil (25364 44726 527375 945000) 0 nil] [nil nil ((#("rx" 0 2 (fontified t face font-lock-variable-name-face)) . -11344) (undo-tree-id2042 . -2) 11346) ((11344 . 11346)) (25364 44723 466273 152000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11329) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1)) nil (25364 44726 527367 794000) 0 nil])
([nil nil ((#("done_" 0 5 (fontified t face font-lock-variable-name-face)) . -11339) (undo-tree-id2041 . -5) 11344) ((11339 . 11344)) (25364 44723 47251 874000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11329)) nil (25364 44726 527354 580000) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -11335) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) 11339) ((11335 . 11339)) (25364 44722 707372 764000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11396) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11397) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) 11398 (t 25364 44726 551300 832000)) nil (25364 44730 828561 209000) 0 nil])
([nil nil ((#("while " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . -11329) (undo-tree-id2035 . -6) (undo-tree-id2036 . -6) (undo-tree-id2037 . -6) 11335) ((11329 . 11335)) (25364 44722 416302 979000) 0 nil])
([nil nil ((#("bar.set_position(AtomicU64::load(&TIME_MS,Ordering::Relaxed));" 0 3 (fontified t) 3 4 (fontified t) 4 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 26 (fontified t face font-lock-type-face) 26 28 (fontified t) 28 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 34 (fontified t face rust-ampersand-face) 34 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 50 (fontified t face font-lock-type-face) 50 52 (fontified t) 52 59 (fontified t face font-lock-type-face) 59 60 (fontified t face (rainbow-delimiters-depth-3-face)) 60 61 (fontified t face (rainbow-delimiters-depth-2-face)) 61 62 (fontified t)) . 11329) (undo-tree-id2067 . -13) (undo-tree-id2068 . -4) (undo-tree-id2069 . -13) (undo-tree-id2070 . -33) (undo-tree-id2071 . -62) (undo-tree-id2072 . -62) (undo-tree-id2073 . -3) (undo-tree-id2074 . -62) (t 25364 44730 881301 98000)) nil (25364 44738 535822 948000) 0 nil])
([nil nil ((11329 . 11333)) ((#("donr" 0 4 (fontified t)) . 11329) (undo-tree-id2053 . -4)) (25364 44722 37032 533000) 0 nil])
([nil nil ((11261 . 11266) (#("   " 0 3 (fontified nil)) . 11261) (#(" " 0 1 (fontified nil)) . 11260) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (11261 . 11262)) nil (25364 44738 535813 811000) 0 nil])
([nil nil ((11329 . 11336) (#("donr" 0 4 (fontified nil)) . 11329) (11329 . 11333) (#("done_rx" 0 7 (fontified nil)) . -11329) (11329 . 11336) (#("donr" 0 4 (fontified t)) . -11329) (undo-tree-id2034 . -4) 11333) ((11329 . 11333) (#("done_rx" 0 7 (fontified nil)) . 11329) (11329 . 11336) (#("donr" 0 4 (fontified nil)) . 11329) (11329 . 11333) (#("done_rx" 0 7 (fontified t)) . 11329) (undo-tree-id2049 . -7) (undo-tree-id2050 . -7) (undo-tree-id2051 . -7) (undo-tree-id2052 . -5)) (25364 44721 723473 898000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11327 . 11328) (nil fontified nil 11327 . 11328) (nil fontified nil 11326 . 11327) (nil fontified nil 11325 . 11326) (nil fontified nil 11318 . 11325) (nil fontified nil 11316 . 11318) (nil fontified nil 11308 . 11316) (nil fontified nil 11307 . 11308) (nil fontified nil 11300 . 11307) (nil fontified nil 11299 . 11300) (nil fontified nil 11298 . 11299) (nil fontified nil 11294 . 11298) (nil fontified nil 11292 . 11294) (nil fontified nil 11283 . 11292) (nil fontified nil 11282 . 11283) (nil fontified nil 11270 . 11282) (nil fontified nil 11269 . 11270) (nil fontified nil 11266 . 11269) (11266 . 11328)) nil (25364 44738 535800 522000) 0 nil])
([nil nil ((11336 . 11337)) ((#("." 0 1 (fontified nil)) . 11336) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1)) (25364 44721 721837 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11388) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (#(" " 0 1 (fontified t)) . -11389) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (#(" " 0 1 (fontified t)) . -11390) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (#(" " 0 1 (fontified t)) . -11391) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (#(" " 0 1 (fontified t)) . -11392) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) 11393 (t 25364 44738 587968 238000)) nil (25364 44746 714414 874000) 0 nil])
([nil nil ((11337 . 11349) (#("recv_timeout" 0 12 (fontified nil)) . -11337) (11337 . 11349)) ((#("recv_timeout" 0 12 (fontified nil)) . 11337) (11337 . 11349) (#("recv_timeout" 0 12 (fontified t)) . 11337) (undo-tree-id2043 . -12) (undo-tree-id2044 . -12) (undo-tree-id2045 . -12)) (25364 44721 720982 27000) 0 nil])
([nil nil ((#("let bar = ProgressBar::new(duration as u64);" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t) 10 21 (fontified t face font-lock-type-face) 21 23 (fontified t) 23 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-2-face)) 27 36 (fontified t) 36 38 (fontified t face font-lock-keyword-face) 38 39 (fontified t) 39 42 (fontified t face font-lock-type-face) 42 43 (fontified t face (rainbow-delimiters-depth-2-face)) 43 44 (fontified t)) . 11344) (undo-tree-id2075 . -44) (undo-tree-id2076 . -16) (undo-tree-id2077 . -44) (undo-tree-id2078 . -16) (undo-tree-id2079 . -44) (undo-tree-id2080 . -44) (undo-tree-id2081 . -44) (undo-tree-id2082 . -44) (undo-tree-id2083 . -44) (undo-tree-id2084 . -44)) nil (25364 44746 714052 123000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11107 . 11108) (nil fontified nil 11107 . 11108) (nil fontified nil 11106 . 11107) (nil fontified nil 11103 . 11106) (nil fontified nil 11102 . 11103) (nil fontified nil 11100 . 11102) (nil fontified nil 11091 . 11100) (nil fontified nil 11090 . 11091) (nil fontified nil 11087 . 11090) (nil fontified nil 11085 . 11087) (nil fontified nil 11074 . 11085) (nil fontified nil 11071 . 11074) (nil fontified nil 11068 . 11071) (nil fontified nil 11067 . 11068) (nil fontified nil 11064 . 11067) (11064 . 11108)) nil (25364 44746 714037 749000) 0 nil])
([nil nil ((11064 . 11068) 11108) nil (25364 44746 714030 235000) 0 nil])
([nil nil ((11063 . 11068) (t 25364 44746 764635 406000)) nil (25364 44750 384837 418000) 0 nil])
([nil nil ((11164 . 11166) (t 25364 44750 394635 629000)) nil (25364 44773 433133 549000) 0 nil])
([nil nil ((11381 . 11382) (t 25364 44773 487970 381000)) nil (25364 44809 218570 400000) 0 nil])
([nil nil ((11382 . 11385)) nil (25364 44809 218568 917000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11381) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("a" 0 1 (fontified t)) . -11382) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -11383) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (#(" " 0 1 (fontified t)) . -11384) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) 11385) nil (25364 44809 218566 522000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -11381) (undo-tree-id2132 . -1) (undo-tree-id2133 . 1) (undo-tree-id2134 . -1) 11382) nil (25364 44809 218556 283000) 0 nil])
([nil nil ((11381 . 11382) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -11381) (11381 . 11382)) nil (25364 44809 218551 601000) 0 nil])
([nil nil ((11381 . 11382)) nil (25364 44809 218550 72000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11381) (undo-tree-id2131 . -1) 11382) nil (25364 44809 218548 684000) 0 nil])
([nil nil ((11381 . 11387)) nil (25364 44809 218546 243000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -11386) (undo-tree-id2130 . -1) 11387) nil (25364 44809 218544 663000) 0 nil])
([nil nil ((11386 . 11392)) nil (25364 44809 218541 330000) 0 nil])
([nil nil ((11389 . 11400) (#("sam" 0 3 (fontified nil)) . 11389) (11389 . 11392) (#("sample_rate" 0 11 (fontified t)) . -11389) (undo-tree-id2126 . -11) (undo-tree-id2127 . -11) (11389 . 11400) (#("sam" 0 3 (fontified t)) . -11389) (undo-tree-id2128 . -3) (undo-tree-id2129 . -3) 11392) nil (25364 44809 218535 196000) 0 nil])
([nil nil ((11400 . 11405) (t 25364 44809 237972 576000)) nil (25364 44836 313170 254000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -11404) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) 11405) nil (25364 44836 313168 514000) 0 nil])
([nil nil ((11408 . 11409) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -11408) (11408 . 11409) (#(")" 0 1 (fontified nil)) . -11407) (11407 . 11408) (#(")" 0 1 (fontified nil face font-lock-type-face)) . -11407) (11404 . 11408)) nil (25364 44836 313164 105000) 0 nil])
([nil nil ((11337 . 11338) (11337 . 11338) (#("(" 0 1 (fontified nil)) . -11337) (11337 . 11338)) nil (25364 44836 313161 71000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . 11338) (undo-tree-id2144 . 1)) nil (25364 44836 313158 957000) 0 nil])
([nil nil ((11409 . 11414)) nil (25364 44836 313156 7000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11413) (undo-tree-id2143 . -1) 11414) nil (25364 44836 313152 987000) 0 nil])
([nil nil ((11413 . 11416)) nil (25364 44836 313140 596000) 0 nil])
([nil nil ((#("secs" 0 4 (fontified t)) . -11306) (undo-tree-id2156 . -3) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) 11310 (t 25364 44836 337974 239000)) nil (25364 45081 41553 210000) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -11301) (undo-tree-id2153 . -5) (undo-tree-id2154 . -5) (undo-tree-id2155 . -5) 11306) nil (25364 45081 41548 503000) 0 nil])
([nil nil ((11301 . 11302)) nil (25364 45081 41544 203000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -11301) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) 11302) nil (25364 45081 41542 832000) 0 nil])
([nil nil ((11301 . 11303)) nil (25364 45081 41539 504000) 0 nil])
([nil nil ((11301 . 11312) (#("fr" 0 2 (fontified nil)) . 11301) (11301 . 11303) (#("from_millis" 0 11 (fontified nil)) . -11301) (11301 . 11312) (#("fr" 0 2 (fontified t)) . -11301) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -1) (undo-tree-id2150 . -2) 11303) nil (25364 45081 41536 235000) 0 nil])
([nil current ((11314 . 11316)) nil (25364 45081 41520 383000) 0 nil])
nil
