(undo-tree-save-format-version . 1)
"cd7414d9918a5c53c71156b37413858319b335d3"
[nil nil nil nil (25356 52552 557202 624000) 0 nil]
([nil nil ((353 . 354) (t 25356 51702 654284 258000)) nil (25356 52552 557201 261000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t face font-lock-type-face)) . -353) (undo-tree-id0 . -1) 354) nil (25356 52552 557198 565000) 0 nil])
([nil nil ((319 . 321)) nil (25356 52552 556920 485000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -319) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -320) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 321 (t 25356 52552 567655 725000)) nil (25356 52568 353011 434000) 0 nil])
([nil nil ((1078 . 1088) (t 25356 52568 364323 100000)) nil (25356 52621 869949 681000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1073) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -1074) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -1075) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -1076) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("s" 0 1 (fontified t)) . -1078) (undo-tree-id43 . -1) (#("t" 0 1 (fontified t)) . -1079) (undo-tree-id44 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -1080) (undo-tree-id45 . -1) (#("e" 0 1 (fontified t)) . -1081) (undo-tree-id46 . -1) (#("a" 0 1 (fontified t)) . -1082) (undo-tree-id47 . -1) (#("m" 0 1 (fontified t)) . -1083) (undo-tree-id48 . -1) (#("." 0 1 (fontified t)) . -1084) (undo-tree-id49 . -1) (#("n" 0 1 (fontified t)) . -1085) (undo-tree-id50 . -1) (#("o" 0 1 (fontified t)) . -1086) (undo-tree-id51 . -1) (#("w" 0 1 (fontified t)) . -1087) (undo-tree-id52 . -1) 1088) nil (25356 52621 869944 713000) 0 nil])
([nil nil ((353 . 358)) nil (25356 52621 869919 727000) 0 nil])
([nil nil ((358 . 365)) nil (25356 52621 869918 498000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -363) (undo-tree-id26 . -1) (#("o" 0 1 (fontified t)) . -364) (undo-tree-id27 . -1) 365) nil (25356 52621 869916 764000) 0 nil])
([nil nil ((363 . 365)) nil (25356 52621 869913 807000) 0 nil])
([nil nil ((363 . 372) (#("ti" 0 2 (fontified nil)) . 363) (363 . 365) (#("timestamp" 0 9 (fontified nil)) . -363) (363 . 372) (#("ti" 0 2 (fontified t)) . -363) (undo-tree-id25 . -2) 365) nil (25356 52621 869912 253000) 0 nil])
([nil nil ((372 . 374)) nil (25356 52621 869908 927000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -372) (undo-tree-id23 . -1) (#("n" 0 1 (fontified t)) . -373) (undo-tree-id24 . -1) 374) nil (25356 52621 869907 613000) 0 nil])
([nil nil ((372 . 374)) nil (25356 52621 869904 755000) 0 nil])
([nil nil ((374 . 376)) nil (25356 52621 869903 590000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -375) (undo-tree-id22 . -1) 376) nil (25356 52621 869902 432000) 0 nil])
([nil nil ((375 . 383) (#("callback" 0 8 (fontified nil)) . -375) (375 . 383)) nil (25356 52621 869900 357000) 0 nil])
([nil nil ((383 . 385)) nil (25356 52621 869899 31000) 0 nil])
([nil nil ((385 . 387)) nil (25356 52621 869898 74000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -383) (undo-tree-id16 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -384) (undo-tree-id17 . -1) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (#("." 0 1 (fontified t)) . -385) (undo-tree-id20 . -1) (#("n" 0 1 (fontified t)) . -386) (undo-tree-id21 . -1) 387) nil (25356 52621 869896 45000) 0 nil])
([nil nil ((383 . 384)) nil (25356 52621 869889 307000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -383) (undo-tree-id15 . -1) 384) nil (25356 52621 869887 829000) 0 nil])
([nil nil ((383 . 384)) nil (25356 52621 869885 698000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -383) (undo-tree-id14 . -1) 384) nil (25356 52621 869884 454000) 0 nil])
([nil nil ((383 . 386)) nil (25356 52621 869882 432000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -385) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 386) nil (25356 52621 869880 978000) 0 nil])
([nil nil ((#("info.timestamp().callback.n" 0 5 (fontified t) 5 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-2-face)) 15 16 (fontified t face (rainbow-delimiters-depth-2-face)) 16 17 (fontified t) 17 27 (fontified t)) . 358) (undo-tree-id7 . -17) (undo-tree-id8 . -15) (undo-tree-id9 . -27) (undo-tree-id10 . -27) (undo-tree-id11 . -27)) nil (25356 52621 869876 736000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 358) (undo-tree-id5 . 1) (undo-tree-id6 . -1)) nil (25356 52621 869867 752000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -354) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) 358 (t 25356 52621 910992 168000)) nil (25356 52622 845314 997000) 0 nil])
([nil nil ((155 . 157) (t 25356 52622 857658 877000)) nil (25356 55532 56386 919000) 0 nil])
([nil nil ((156 . 170)) nil (25356 55532 56385 902000) 0 nil])
([nil nil ((170 . 173)) nil (25356 55532 56385 162000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 172) (undo-tree-id86 . -1) (173 . 174)) nil (25356 55532 56384 154000) 0 nil])
([nil nil ((155 . 156)) nil (25356 55532 56382 497000) 0 nil])
([nil nil ((157 . 158)) nil (25356 55532 56381 723000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . 157)) nil (25356 55532 56380 874000) 0 nil])
([nil nil ((173 . 183)) nil (25356 55532 56380 56000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -180) (undo-tree-id83 . -1) (#("r" 0 1 (fontified t)) . -181) (undo-tree-id84 . -1) (#("h" 0 1 (fontified t)) . -182) (undo-tree-id85 . -1) 183) nil (25356 55532 56378 703000) 0 nil])
([nil nil ((180 . 183)) nil (25356 55532 56375 92000) 0 nil])
([nil nil ((179 . 185) (#("thre" 0 4 (fontified nil)) . 179) (179 . 183) (#("thread" 0 6 (fontified nil)) . -179) (179 . 185) (#("thre" 0 4 (fontified t)) . -179) (undo-tree-id82 . -4) 183) nil (25356 55532 56373 761000) 0 nil])
([nil nil ((185 . 193)) nil (25356 55532 56371 152000) 0 nil])
([nil nil ((#("thread::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -179) (undo-tree-id81 . -8) 187) nil (25356 55532 56370 98000) 0 nil])
([nil nil ((#("atomic" 0 6 (fontified t)) . -179) (undo-tree-id80 . -6) 185) nil (25356 55532 56368 17000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -177) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(":" 0 1 (fontified t)) . -178) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 179) nil (25356 55532 56365 745000) 0 nil])
([nil nil ((177 . 181)) nil (25356 55532 56361 458000) 0 nil])
([nil nil ((179 . 183) (#("sy" 0 2 (fontified nil)) . 179) (179 . 181) (#("sync" 0 4 (fontified nil)) . -179) (179 . 183) (#("sy" 0 2 (fontified t)) . -179) (undo-tree-id75 . -2) 181) nil (25356 55532 56359 937000) 0 nil])
([nil nil ((183 . 186)) nil (25356 55532 56357 51000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -185) (undo-tree-id74 . -1) 186) nil (25356 55532 56356 162000) 0 nil])
([nil nil ((185 . 187)) nil (25356 55532 56354 357000) 0 nil])
([nil nil ((185 . 191) (#("at" 0 2 (fontified nil)) . 185) (185 . 187) (#("atomic" 0 6 (fontified nil)) . -185) (185 . 191) (#("at" 0 2 (fontified t)) . -185) (undo-tree-id73 . -2) 187) nil (25356 55532 56352 917000) 0 nil])
([nil nil ((191 . 195)) nil (25356 55532 56349 479000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-type-face)) . -194) (undo-tree-id72 . -1) 195) nil (25356 55532 56348 440000) 0 nil])
([nil nil ((194 . 199)) nil (25356 55532 56345 176000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -198) (undo-tree-id71 . -1) 199) nil (25356 55532 56343 988000) 0 nil])
([nil nil ((198 . 199)) nil (25356 55532 56341 896000) 0 nil])
([nil nil ((193 . 200) ("atomics" . -193) (nil fontified t 194 . 200) (nil face font-lock-type-face 194 . 200) (#("Atomic" 0 6 (fontified t face font-lock-type-face)) . -193) (199 . 206) 199) nil (25356 55532 56340 620000) 0 nil])
([nil nil ((193 . 203) ("atomic_ref" . -193) (nil fontified t 196 . 203) (nil face font-lock-type-face 196 . 203) (#("Atomics" 0 7 (fontified t face font-lock-type-face)) . -193) (200 . 210) 200) nil (25356 55532 56338 199000) 0 nil])
([nil nil ((nil fontified t 193 . 203) (nil face font-lock-type-face 193 . 203) (#("Atomic_Ref" 0 10 (fontified t face font-lock-type-face)) . -193) (203 . 213) 203) nil (25356 55532 56335 964000) 0 nil])
([nil nil ((nil fontified t 194 . 204) (nil face font-lock-type-face 194 . 204) (#("AtomicBool" 0 10 (fontified t face font-lock-type-face)) . -193) (203 . 214) 203) nil (25356 55532 56334 103000) 0 nil])
([nil nil ((nil fontified t 193 . 204) (nil face font-lock-type-face 193 . 204) (#("AtomicIsize" 0 11 (fontified t face font-lock-type-face)) . -193) (204 . 215) 204) nil (25356 55532 56332 176000) 0 nil])
([nil nil ((nil fontified t 193 . 201) (nil face font-lock-type-face 193 . 201) (#("AtomicUsize" 0 11 (fontified t face font-lock-type-face)) . -193) (204 . 212) 204) nil (25356 55532 56330 165000) 0 nil])
([nil nil ((nil fontified t 194 . 202) (nil face font-lock-type-face 194 . 202) (#("AtomicI8" 0 8 (fontified t face font-lock-type-face)) . -193) (201 . 210) 201) nil (25356 55532 56328 209000) 0 nil])
([nil nil ((193 . 203) ("atomically" . -193) (nil fontified t 194 . 203) (nil face font-lock-type-face 194 . 203) (#("AtomicU16" 0 9 (fontified t face font-lock-type-face)) . -193) (202 . 212) 202) nil (25356 55532 56326 196000) 0 nil])
([nil nil ((nil fontified t 193 . 202) (nil face font-lock-type-face 193 . 202) (#("Atomically" 0 10 (fontified t face font-lock-type-face)) . -193) (203 . 212) 203) nil (25356 55532 56324 4000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t face font-lock-type-face)) . -200) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -201) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 202) nil (25356 55532 56321 860000) 0 nil])
([nil nil ((200 . 201)) nil (25356 55532 56315 982000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-type-face)) . -200) (undo-tree-id64 . -1) 201) nil (25356 55532 56314 928000) 0 nil])
([nil nil ((200 . 205)) nil (25356 55532 56312 915000) 0 nil])
([nil nil ((155 . 162)) nil (25356 55532 56312 48000) 0 nil])
([nil nil ((162 . 164)) nil (25356 55532 56311 137000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-constant-face)) . -162) (undo-tree-id62 . -1) (#("L" 0 1 (fontified t face font-lock-constant-face)) . -163) (undo-tree-id63 . -1) 164) nil (25356 55532 56309 819000) 0 nil])
([nil nil ((162 . 167)) nil (25356 55532 56292 3000) 0 nil])
([nil nil ((164 . 168) (#("syn" 0 3 (fontified nil)) . 164) (164 . 167) (#("sync" 0 4 (fontified nil)) . -164) (164 . 168) (#("syn" 0 3 (fontified t)) . -164) (undo-tree-id61 . -3) 167) nil (25356 55532 56290 479000) 0 nil])
([nil nil ((168 . 172)) nil (25356 55532 56287 321000) 0 nil])
([nil nil ((170 . 176) (#("at" 0 2 (fontified nil)) . 170) (170 . 172) (#("atomic" 0 6 (fontified nil)) . -170) (170 . 176) (#("at" 0 2 (fontified t)) . -170) (undo-tree-id60 . -2) 172) nil (25356 55532 56285 787000) 0 nil])
([nil nil ((176 . 179)) nil (25356 55532 56282 600000) 0 nil])
([nil nil ((178 . 187) (#("A" 0 1 (fontified nil)) . 178) (178 . 179) (#("AtomicU64" 0 9 (fontified nil)) . -178) (178 . 187) (#("A" 0 1 (fontified t face font-lock-type-face)) . -178) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 179) nil (25356 55532 56280 31000) 0 nil])
([nil nil ((187 . 188)) nil (25356 55532 56267 692000) 0 nil])
([nil nil ((#("atomic::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -218) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) 226 (t 25356 55532 97789 448000)) nil (25356 55554 704503 942000) 0 nil])
([nil nil ((#("sync::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -212) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) 218) nil (25356 55554 704495 902000) 0 nil])
([nil nil ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -207) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) 212) nil (25356 55554 704487 206000) 0 nil])
([nil nil ((219 . 222)) nil (25356 55554 704479 821000) 0 nil])
([nil nil ((222 . 226)) nil (25356 55554 704478 798000) 0 nil])
([nil nil ((nil fontified t 221 . 228) (nil face font-lock-type-face 221 . 228) (#("AtomicU" 0 7 (fontified t face font-lock-type-face)) . -219) (226 . 235) 226) nil (25356 55554 704477 374000) 0 nil])
([nil nil ((nil fontified nil 221 . 230) (#("AtomicU64" 0 9 (fontified nil)) . -219) (228 . 239) 228) nil (25356 55554 704475 29000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-type-face)) . -226) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -227) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("z" 0 1 (fontified t face font-lock-type-face)) . -228) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -229) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 230) nil (25356 55554 704469 313000) 0 nil])
([nil nil ((226 . 233)) nil (25356 55554 703446 593000) 0 nil])
([nil nil ((234 . 235) (233 . 235)) nil (25356 55554 703444 585000) 0 nil])
([nil nil ((236 . 237)) nil (25356 55554 703438 435000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -196) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("r" 0 1 (fontified t)) . -197) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("e" 0 1 (fontified t)) . -198) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -199) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 200 (t 25356 55554 704457 128000)) nil (25356 55573 103559 108000) 0 nil])
([nil nil ((#("time" 0 4 (fontified t face font-lock-variable-name-face)) . -197) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) 201 (t 25356 55573 144457 956000)) nil (25356 55585 88974 918000) 0 nil])
([nil nil ((197 . 204)) nil (25356 55585 88960 445000) 0 nil])
([nil nil ((317 . 322) (t 25356 55585 101125 158000)) nil (25356 55658 747067 191000) 0 nil])
([nil nil ((322 . 323)) nil (25356 55658 747066 46000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -322) (undo-tree-id165 . -1) 323) nil (25356 55658 747064 916000) 0 nil])
([nil nil ((322 . 328)) nil (25356 55658 747062 675000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -327) (undo-tree-id164 . -1) 328) nil (25356 55658 747061 612000) 0 nil])
([nil nil ((327 . 330)) nil (25356 55658 747059 107000) 0 nil])
([nil nil ((330 . 343)) nil (25356 55658 747058 148000) 0 nil])
([nil nil ((340 . 350) (#("chu" 0 3 (fontified nil)) . 340) (340 . 343) (#("chunks_mut" 0 10 (fontified nil)) . -340) (340 . 350) (#("chu" 0 3 (fontified t)) . -340) (undo-tree-id162 . -3) (undo-tree-id163 . -3) 343) nil (25356 55658 747055 965000) 0 nil])
([nil nil ((351 . 352) (350 . 352)) nil (25356 55658 747045 442000) 0 nil])
([nil nil ((353 . 356)) nil (25356 55658 747043 322000) 0 nil])
([nil nil ((356 . 357) (357 . 361) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 356) (356 . 357) (355 . 357)) nil (25356 55658 747037 882000) 0 nil])
([nil nil ((#("    for sample in data.iter_mut() {
        *sample = Sample::from(&0.0);
    }" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t) 15 17 (fontified t face font-lock-keyword-face) 17 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-2-face)) 35 54 (fontified t) 54 60 (fontified t face font-lock-type-face) 60 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-depth-3-face)) 67 68 (fontified t face rust-ampersand-face) 68 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-3-face)) 72 78 (fontified t) 78 79 (fontified t face (rainbow-delimiters-depth-2-face))) . 364) (undo-tree-id166 . -79) (undo-tree-id167 . -7) (undo-tree-id168 . -79) (undo-tree-id169 . -79) (t 25356 55658 787795 129000)) nil (25356 55667 752332 639000) 0 nil])
([nil nil ((nil rear-nonsticky nil 434 . 435) (nil fontified nil 434 . 435) (nil fontified nil 428 . 434) (nil fontified nil 427 . 428) (nil fontified nil 424 . 427) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 416 . 422) (nil fontified nil 410 . 416) (nil fontified nil 391 . 410) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 373 . 387) (nil fontified nil 371 . 373) (nil fontified nil 370 . 371) (nil fontified nil 364 . 370) (nil fontified nil 363 . 364) (nil fontified nil 360 . 363) (nil fontified nil 356 . 360) (356 . 435)) nil (25356 55667 752320 307000) 0 nil])
([nil nil ((356 . 357) (#("    " 0 4 (fontified t)) . 356) 361) nil (25356 55667 752314 756000) 0 nil])
([nil nil ((397 . 401) 398) nil (25356 55667 752312 175000) 0 nil])
([nil nil ((431 . 432) (#("    " 0 4 (fontified t)) . 431) 437) nil (25356 55667 752306 419000) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . -371) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) 375 (t 25356 55667 794462 200000)) nil (25356 55686 189213 628000) 0 nil])
([nil nil ((371 . 374)) nil (25356 55686 189208 168000) 0 nil])
([nil nil ((371 . 376) (#("fra" 0 3 (fontified nil)) . 371) (371 . 374) (#("frame" 0 5 (fontified t)) . -371) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (371 . 376) (#("fra" 0 3 (fontified t)) . -371) (undo-tree-id172 . -3) (undo-tree-id173 . -3) 374) nil (25356 55686 189202 895000) 0 nil])
([nil nil ((238 . 246) (t 25356 55686 207796 358000)) nil (25364 39391 641182 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 412 . 413) (nil fontified nil 241 . 413) (241 . 413)) nil (25364 39391 641181 244000) 0 nil])
([nil nil ((#("   pub id: Option<usize>," 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 9 (face font-lock-variable-name-face fontified t) 9 11 (fontified t) 11 17 (face font-lock-type-face fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) fontified t) 18 23 (face font-lock-type-face fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 25 (fontified t)) . 282) (undo-tree-id2 . -25)) nil (25364 39391 641179 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 282) (undo-tree-id1 . -1)) nil (25364 39391 641177 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -285) 282) nil (25364 39391 641754 854000) 0 nil])
([nil nil ((#("pub date: DateTime<Utc>," 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-variable-name-face fontified t) 8 10 (fontified t) 10 18 (face font-lock-type-face fontified t) 18 19 (face (rainbow-delimiters-depth-2-face) fontified t) 19 22 (face font-lock-type-face fontified t) 22 23 (face (rainbow-delimiters-depth-2-face) fontified t) 23 24 (fontified t)) . 307) (undo-tree-id4 . -24)) nil (25364 39397 930898 893000) 0 nil] [nil nil ((#("pub samples: Vec<f32>," 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t) 21 22 (fontified t)) . 336) (undo-tree-id0 . -22)) ((336 . 358)) (25364 39391 641170 957000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 307) (undo-tree-id3 . -1)) nil (25364 39397 930895 673000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -307)) nil (25364 39397 930884 498000) 0 nil])
([nil nil ((360 . 363) (t 25364 39397 974307 600000)) nil (25364 39465 126227 567000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -362) (undo-tree-id89 . -1) 363) nil (25364 39465 126226 260000) 0 nil])
([nil nil ((362 . 369)) nil (25364 39465 126224 702000) 0 nil])
([nil nil ((365 . 374) (#("Audi" 0 4 (fontified nil)) . 365) (365 . 369) (#("AudioClip" 0 9 (fontified nil)) . -365) (365 . 374) (#("Audi" 0 4 (face font-lock-type-face fontified t)) . -365) (undo-tree-id88 . -4) 369) nil (25364 39465 126223 540000) 0 nil])
([nil nil ((374 . 377)) nil (25364 39465 126221 164000) 0 nil])
([nil nil ((377 . 381) (#("    " 0 4 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 377) (377 . 381) (376 . 378)) nil (25364 39465 126220 174000) 0 nil])
([nil nil ((381 . 384)) nil (25364 39465 126218 847000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -381) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -382) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . -383) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 384) nil (25364 39465 126216 810000) 0 nil])
([nil nil ((381 . 385)) nil (25364 39465 126202 96000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -384) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 385) nil (25364 39465 126200 948000) 0 nil])
([nil nil ((384 . 388)) nil (25364 39465 126196 748000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -381) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("u" 0 1 (fontified t)) . -382) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -383) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -384) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("f" 0 1 (fontified t)) . -385) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -386) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -387) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 388) nil (25364 39465 126192 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1095 . 1096) (nil fontified nil 381 . 1096) (381 . 1096)) nil (25364 39465 126151 841000) 0 nil])
([nil nil ((#(" id: self.id," 0 1 (fontified t) 1 3 (face font-lock-variable-name-face fontified t) 3 5 (fontified t) 5 9 (face font-lock-keyword-face fontified t) 9 13 (fontified t)) . 739) (undo-tree-id10 . -1) (undo-tree-id11 . -12) (undo-tree-id12 . -13)) nil (25364 39465 126150 452000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 739) (undo-tree-id9 . -1)) nil (25364 39465 126147 429000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . -740) 739) nil (25364 39465 126145 838000) 0 nil])
([nil nil ((#("date: self.date," 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 16 (fontified t)) . 777) (undo-tree-id6 . -2) (undo-tree-id7 . -15) (undo-tree-id8 . -16)) nil (25364 39465 126144 473000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 777) (undo-tree-id5 . -1)) nil (25364 39465 126140 433000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -777)) nil (25364 39465 126131 367000) 0 nil])
([nil nil ((154 . 157) (t 25364 39465 167645 60000)) nil (25364 39496 108260 937000) 0 nil])
([nil nil ((nil rear-nonsticky nil 569 . 570) (nil fontified nil 155 . 570) (155 . 570)) nil (25364 39496 108254 674000) 0 nil])
([nil nil ((607 . 610) (t 25364 39496 120980 293000)) nil (25364 39594 190909 880000) 0 nil])
([nil nil ((571 . 572)) nil (25364 39594 190908 266000) 0 nil])
([nil nil ((nil rear-nonsticky nil 601 . 602) (nil fontified nil 572 . 602) (572 . 602)) nil (25364 39594 190903 606000) 0 nil])
([nil nil ((1770 . 1775) (t 25364 39594 234319 649000)) nil (25364 39608 335797 278000) 0 nil])
([nil nil ((1775 . 1780)) nil (25364 39608 335796 152000) 0 nil])
([nil nil ((1775 . 1785) (#("envlo" 0 5 (fontified nil)) . 1775) (1775 . 1780) (#("env_logger" 0 10 (fontified nil)) . -1775) (1775 . 1785) (#("envlo" 0 5 (fontified t)) . -1775) (undo-tree-id95 . -5) (undo-tree-id96 . -4) (undo-tree-id97 . -5) (undo-tree-id98 . -5) 1780) nil (25364 39608 335794 652000) 0 nil])
([nil nil ((1785 . 1790)) nil (25364 39608 335789 529000) 0 nil])
([nil nil ((1787 . 1791) (#("ini" 0 3 (fontified nil)) . 1787) (1787 . 1790) (#("init" 0 4 (fontified nil)) . -1787) (1787 . 1791) (#("ini" 0 3 (fontified t)) . -1787) (undo-tree-id90 . -3) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -3) (undo-tree-id94 . -3) 1790) nil (25364 39608 335787 392000) 0 nil])
([nil nil ((1791 . 1793)) nil (25364 39608 335775 153000) 0 nil])
([nil nil ((1793 . 1794)) nil (25364 39608 335770 910000) 0 nil])
([nil nil ((1794 . 1795) (t 25364 39608 377653 851000)) nil (25364 39610 4252 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1794) (undo-tree-id99 . -1) 1795) nil (25364 39610 4248 633000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -833) 892 (t 25364 39610 17653 952000)) nil (25364 39650 965794 681000) 0 nil])
([nil nil ((1492 . 1496) (#("    " 0 4 (fontified nil)) . 1491) (undo-tree-id100 . -4) (1490 . 1496) (t 25364 39651 7656 469000)) nil (25364 39654 578415 658000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6710 . 6711) (nil fontified nil 1496 . 6711) (1496 . 6711) (t 25364 39654 594323 356000)) nil (25364 39747 874171 81000) 0 nil])
([nil nil ((3303 . 3307) 3329) nil (25364 39747 874168 795000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1496) 1520) nil (25364 39747 874163 927000) 0 nil])
([nil nil ((#("track\"))" 0 6 (face font-lock-string-face fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2808) (undo-tree-id120 . -8) (undo-tree-id121 . 1) (undo-tree-id122 . -8) 2816 (t 25364 39747 887662 416000)) nil (25364 39768 751410 800000) 0 nil])
([nil nil ((#("default " 0 8 (face font-lock-string-face fontified t)) . -2800) (undo-tree-id119 . -8) 2808) nil (25364 39768 751259 996000) 0 nil])
([nil nil ((#("No " 0 3 (face font-lock-string-face fontified t)) . -2797) (undo-tree-id118 . -3) 2800) nil (25364 39768 751258 148000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (face font-lock-preprocessor-face fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 7 (face font-lock-string-face fontified t)) . -2790) (undo-tree-id116 . -7) (undo-tree-id117 . -4) 2797) nil (25364 39768 751256 203000) 0 nil])
([nil nil ((#("else(|| " 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 8 (fontified t)) . -2782) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) 2790) nil (25364 39768 751253 566000) 0 nil])
([nil nil ((#("or_" 0 3 (fontified t)) . -2779) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) 2782) nil (25364 39768 762591 742000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2769) (undo-tree-id128 . -1) (#(" " 0 1 (fontified t)) . -2770) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#(" " 0 1 (fontified t)) . -2771) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -2772) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -2773) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -2774) (undo-tree-id135 . -1) (#("." 0 1 (fontified t)) . -2775) (undo-tree-id136 . -1) (#("o" 0 1 (fontified t)) . -2776) (undo-tree-id137 . -1) (#("k" 0 1 (fontified t)) . -2777) (undo-tree-id138 . -1) (#("_" 0 1 (fontified t)) . -2778) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 2779) nil (25364 39775 467770 69000) 0 nil] [nil nil ((#("ok_" 0 3 (fontified t)) . -2776) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) 2779) ((2776 . 2779)) (25364 39768 752006 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2762) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -2763) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -2764) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -2765) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -2766) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t)) . -2767) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -2768) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 2769) nil (25364 39783 966537 301000) 0 nil] [nil nil ((#("track()
      " 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) fontified t) 7 8 (fontified t) 8 14 (fontified t)) . -2755) (undo-tree-id123 . -14) (undo-tree-id124 . -8) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -14) 2769) ((2755 . 2769)) (25364 39775 467448 853000) 0 nil])
([nil nil ((#("track()
            ." 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) fontified t) 7 8 (fontified t) 8 21 (fontified t)) . -2755) (undo-tree-id101 . -21) (undo-tree-id102 . -8) (undo-tree-id103 . -21) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -21) 2776) ((2755 . 2776)) (25364 39768 751238 842000) 0 nil])
([nil nil ((#(".default_track()?;" 0 9 (fontified t) 9 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 16 (face (rainbow-delimiters-depth-3-face) fontified t) 16 17 (face rust-question-mark fontified t) 17 18 (fontified t)) . 2746) (undo-tree-id159 . -16) (undo-tree-id160 . -17) (undo-tree-id161 . -18) (t 25364 39779 234331 6000)) nil (25364 39813 72796 494000) 0 nil] [nil nil ((#("format
            " 0 7 (fontified t) 7 19 (fontified t)) . -2727) (undo-tree-id150 . -19) (undo-tree-id151 . -19) (undo-tree-id152 . -7) (undo-tree-id153 . -6) (undo-tree-id154 . -6) 2746 (t 25364 39779 234331 6000)) ((2727 . 2746)) (25364 39783 966184 566000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 2750 . 2751) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2742 . 2747) (nil fontified nil 2733 . 2742) (2733 . 2751)) nil (25364 39817 352937 341000) 0 nil] [nil nil ((nil rear-nonsticky nil 2745 . 2746) (nil fontified nil 2745 . 2746) (nil fontified nil 2733 . 2745) (2733 . 2746)) ((#("            
" 0 12 (fontified nil) 12 13 (rear-nonsticky nil fontified nil)) . 2733) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -1) (undo-tree-id165 . -13) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (nil rear-nonsticky t 2745 . 2746)) (25364 39813 72386 61000) 0 nil] [nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 2734) (undo-tree-id155 . -12) (undo-tree-id156 . -12) (undo-tree-id157 . -13) (undo-tree-id158 . -13)) ((2734 . 2747)) (25364 39806 2071 914000) 0 nil])
nil
([nil nil ((#("count\"))" 0 6 (face font-lock-string-face fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3225) (undo-tree-id199 . -7) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . 1) (undo-tree-id203 . -8) 3233 (t 25364 39817 394333 348000)) nil (25364 39846 920956 958000) 0 nil])
nil
nil
([nil nil ((#("channel " 0 8 (face font-lock-string-face fontified t)) . -3217) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) 3225) nil (25364 39846 920951 286000) 0 nil])
([nil nil ((#("Unknown " 0 8 (face font-lock-string-face fontified t)) . -3209) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (undo-tree-id195 . -8) 3217) nil (25364 39846 920947 643000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (face font-lock-preprocessor-face fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 7 (face font-lock-string-face fontified t)) . -3202) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -4) (undo-tree-id192 . -7) 3209) nil (25364 39846 920943 757000) 0 nil])
([nil nil ((#("else(|| " 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 8 (fontified t)) . -3194) (undo-tree-id184 . -8) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) 3202) nil (25364 39846 920939 112000) 0 nil])
([nil nil ((#("or_" 0 3 (fontified t)) . -3191) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) 3194) nil (25364 39846 920933 408000) 0 nil])
([nil nil ((#("ok_" 0 3 (fontified t)) . -3188) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) 3191) nil (25364 39846 921201 115000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3187) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 3188) nil (25364 39878 672428 871000) 0 nil] [nil nil ((#("channels
            ." 0 9 (fontified t) 9 22 (fontified t)) . -3166) (undo-tree-id168 . -22) (undo-tree-id169 . -22) (undo-tree-id170 . -22) (undo-tree-id171 . -22) (undo-tree-id172 . -21) (undo-tree-id173 . -22) 3188) ((3166 . 3188)) (25364 39846 920917 609000) 0 nil])
([nil nil ((#("            ?;" 0 12 (fontified t) 12 13 (face rust-question-mark fontified t) 13 14 (fontified t)) . 3175) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -14) (undo-tree-id220 . -14)) nil (25364 39878 672424 627000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 3175) (undo-tree-id214 . -1) (undo-tree-id215 . -1)) nil (25364 39878 672420 802000) 0 nil])
([nil nil ((3174 . 3176)) nil (25364 39878 672418 512000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3186) 3216) nil (25364 39878 672417 604000) 0 nil])
([nil nil ((#("id: None," 0 2 (face font-lock-variable-name-face fontified t) 2 4 (fontified t) 4 8 (face font-lock-type-face fontified t) 8 9 (fontified t)) . 3225) (undo-tree-id209 . -9) (undo-tree-id210 . -9) (undo-tree-id211 . -8) (undo-tree-id212 . -9) (undo-tree-id213 . -9)) nil (25364 39878 672416 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3225) (undo-tree-id208 . -1)) nil (25364 39878 672412 124000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3225)) nil (25364 39878 672410 226000) 0 nil])
([nil nil ((#("date: DateTime::<Utc>::from(creation_time)," 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t) 6 14 (face font-lock-type-face fontified t) 14 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) fontified t) 17 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) fontified t) 21 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-4-face) fontified t) 28 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t) 42 43 (fontified t)) . 3243) (undo-tree-id205 . -42) (undo-tree-id206 . -2) (undo-tree-id207 . -43)) nil (25364 39878 672408 952000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3243) (undo-tree-id204 . -1)) nil (25364 39878 672404 509000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3243)) nil (25364 39878 672394 948000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -3175) (3175 . 3176) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3175) (3175 . 3176) (3174 . 3176) (t 25364 39878 714337 113000)) nil (25364 39886 340598 293000) 0 nil])
([nil nil ((3176 . 3177) (t 25364 39886 384337 584000)) nil (25364 39909 17082 660000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3174) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3175) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . 1) (undo-tree-id234 . -1) (#("\\" 0 1 (fontified t)) . -3176) (undo-tree-id235 . -1) 3177) nil (25364 39909 17080 641000) 0 nil])
([nil nil ((3174 . 3175)) nil (25364 39909 17073 151000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3174) (undo-tree-id228 . -1) 3175) nil (25364 39909 17071 907000) 0 nil])
([nil nil ((3174 . 3177)) nil (25364 39909 17069 741000) 0 nil])
([nil nil ((3175 . 3181) (#("un" 0 2 (fontified t)) . -3175) (undo-tree-id227 . -2) 3177) nil (25364 39909 17068 302000) 0 nil])
([nil nil ((3175 . 3181) (#("unwrap" 0 6 (fontified nil)) . 3175) (3175 . 3181) (#("unwrap" 0 6 (fontified t)) . -3175) (undo-tree-id226 . -6) 3181) nil (25364 39909 17063 791000) 0 nil])
([nil nil ((3181 . 3183)) nil (25364 39909 17050 770000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -3183) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 3184 (t 25364 39909 24338 974000)) nil (25364 39911 962053 109000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3130) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -3131) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -3132) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#(" " 0 1 (fontified t)) . -3133) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -3134) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -3135) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t)) . -3136) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -3137) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -3138) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 3139 (t 25364 39912 4339 157000)) nil (25364 39922 401988 607000) 0 nil])
([nil nil ((3127 . 3132) (#("   " 0 3 (fontified t)) . 3127) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) 3130) nil (25364 39922 401967 940000) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3168) (undo-tree-id243 . -8) (undo-tree-id244 . -7) (undo-tree-id245 . 1) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . 1) (undo-tree-id249 . -8) (undo-tree-id250 . 2) (undo-tree-id251 . -7) 3176) nil (25364 39922 401364 601000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3167) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 3168) nil (25364 39922 401356 400000) 0 nil])
([nil nil ((3167 . 3168)) nil (25364 39922 401343 899000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -3167) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 3168 (t 25364 39922 414339 796000)) nil (25364 40001 736522 319000) 0 nil])
([nil nil ((3167 . 3170)) nil (25364 40001 736518 758000) 0 nil])
([nil nil ((3168 . 3173) (#("ok" 0 2 (fontified nil)) . 3168) (3168 . 3170) (#("ok_or" 0 5 (fontified nil)) . -3168) (3168 . 3173) (#("ok" 0 2 (fontified t)) . -3168) (undo-tree-id325 . -2) 3170) nil (25364 40001 736516 642000) 0 nil])
([nil nil ((3173 . 3175)) nil (25364 40001 736512 919000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3170) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("o" 0 1 (fontified t)) . -3171) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("r" 0 1 (fontified t)) . -3172) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3173) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3174) (undo-tree-id322 . -1) (undo-tree-id323 . 1) (undo-tree-id324 . -1) 3175) nil (25364 40001 736507 819000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3168) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("k" 0 1 (fontified t)) . -3169) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 3170) nil (25364 40001 735075 400000) 0 nil])
([nil nil ((3168 . 3171)) nil (25364 40001 735070 749000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3167) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("o" 0 1 (fontified t)) . -3168) (undo-tree-id307 . -1) (#("k" 0 1 (fontified t)) . -3169) (undo-tree-id308 . -1) (#("j" 0 1 (fontified t)) . -3170) (undo-tree-id309 . -1) 3171) nil (25364 40001 735068 834000) 0 nil])
([nil nil ((3167 . 3170)) nil (25364 40001 735062 755000) 0 nil])
([nil nil ((3168 . 3178) (#("ok" 0 2 (fontified nil)) . 3168) (3168 . 3170) (#("ok_or_else" 0 10 (fontified t)) . -3168) (undo-tree-id303 . -10) (3168 . 3178) (#("ok" 0 2 (fontified t)) . -3168) (undo-tree-id304 . -2) 3170) nil (25364 40001 735061 53000) 0 nil])
([nil nil ((3178 . 3180)) nil (25364 40001 735057 271000) 0 nil])
([nil nil ((3179 . 3181) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3179) (3179 . 3180)) nil (25364 40001 735056 229000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -3179) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 3180)) nil (25364 40001 735054 505000) 0 nil])
([nil nil ((3179 . 3184)) nil (25364 40001 735051 801000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3182) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("r" 0 1 (fontified t)) . -3183) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 3184) nil (25364 40001 735050 323000) 0 nil])
([nil nil ((3182 . 3185)) nil (25364 40001 735045 880000) 0 nil])
([nil nil ((3182 . 3189) (#("Err" 0 3 (fontified nil)) . 3182) (3182 . 3185) (#("Err(…)" 0 6 (fontified nil)) . -3182) (3182 . 3188) (#("Err" 0 3 (face font-lock-type-face fontified t)) . -3182) (undo-tree-id295 . -3) (undo-tree-id296 . -3) 3185) nil (25364 40001 735044 80000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -3187) (undo-tree-id292 . -1) (undo-tree-id293 . 1) (undo-tree-id294 . -1) 3188) nil (25364 40001 735039 887000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -3186) (undo-tree-id291 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . 3187)) nil (25364 40001 735035 708000) 0 nil])
([nil nil ((3186 . 3188) (#("\"" 0 1 (face (rainbow-delimiters-depth-4-face) fontified nil)) . -3186) (3186 . 3187)) nil (25364 40001 735033 497000) 0 nil])
([nil nil ((3187 . 3188)) nil (25364 40001 735032 185000) 0 nil])
([nil nil ((3188 . 3192)) nil (25364 40001 735031 311000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -3191) (undo-tree-id290 . -1) 3192) nil (25364 40001 735030 141000) 0 nil])
([nil nil ((3191 . 3192)) nil (25364 40001 735028 63000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -3189) (undo-tree-id287 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3190) (undo-tree-id288 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -3191) (undo-tree-id289 . -1) 3192) nil (25364 40001 735026 347000) 0 nil])
([nil nil ((3189 . 3194)) nil (25364 40001 735021 718000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -3192) (undo-tree-id285 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -3193) (undo-tree-id286 . -1) 3194) nil (25364 40001 735020 238000) 0 nil])
([nil nil ((3192 . 3205)) nil (25364 40001 735016 870000) 0 nil])
([nil nil ((#("channel" 0 7 (face font-lock-string-face fontified t)) . -3198) (undo-tree-id284 . -7) 3205) nil (25364 40001 735015 519000) 0 nil])
([nil nil ((3198 . 3201)) nil (25364 40001 735013 187000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -3199) (undo-tree-id282 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3200) (undo-tree-id283 . -1) 3201) nil (25364 40001 735010 992000) 0 nil])
([nil nil ((3199 . 3200)) nil (25364 40001 735002 181000) 0 nil])
([nil nil ((3200 . 3203)) nil (25364 40001 734997 250000) 0 nil])
([nil nil ((3204 . 3205) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -3204) (3204 . 3205) (t 25364 40001 791011 335000)) nil (25364 40013 257240 594000) 0 nil])
([nil nil ((#("rate\")" 0 5 (face font-lock-string-face fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) fontified t)) . -3438) (undo-tree-id342 . -6) (undo-tree-id343 . 1) (undo-tree-id344 . -6) 3444 (t 25364 40013 271012 40000)) nil (25364 40047 757496 596000) 0 nil])
([nil nil ((#("sample " 0 7 (face font-lock-string-face fontified t)) . -3431) (undo-tree-id341 . -7) 3438) nil (25364 40047 757493 37000) 0 nil])
([nil nil ((#("Unknown " 0 8 (face font-lock-string-face fontified t)) . -3423) (undo-tree-id340 . -8) 3431) nil (25364 40047 757491 129000) 0 nil])
([nil nil ((#("eyre!(\"" 0 5 (face font-lock-preprocessor-face fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) fontified t) 6 7 (face font-lock-string-face fontified t)) . -3416) (undo-tree-id339 . -7) 3423) nil (25364 40047 757489 294000) 0 nil])
([nil nil ((3416 . 3419)) nil (25364 40047 757487 664000) 0 nil])
([nil nil ((3416 . 3423) (#("Err" 0 3 (fontified nil)) . 3416) (3416 . 3419) (#("Err(…)" 0 6 (fontified nil)) . -3416) (3416 . 3422) (#("Err" 0 3 (face font-lock-type-face fontified t)) . -3416) (undo-tree-id338 . -3) 3419) nil (25364 40047 757486 223000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) fontified t)) . -3421) (undo-tree-id335 . -1) (undo-tree-id336 . 1) (undo-tree-id337 . -1) 3422) nil (25364 40047 757483 7000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-6-face) fontified nil)) . -3420) (undo-tree-id334 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-6-face) fontified t)) . 3421)) nil (25364 40047 757479 363000) 0 nil])
([nil nil ((3420 . 3421) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -3420) (3420 . 3421)) nil (25364 40047 757477 383000) 0 nil])
([nil nil ((3421 . 3422) (3420 . 3422) (#("\"" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -3420) (3420 . 3421)) nil (25364 40047 757475 885000) 0 nil])
([nil nil ((3422 . 3423)) nil (25364 40047 757474 472000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-string-face fontified t)) . -3421) (undo-tree-id332 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -3422) (undo-tree-id333 . -1) 3423) nil (25364 40047 757473 145000) 0 nil])
([nil nil ((3421 . 3433)) nil (25364 40047 757470 458000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -3432) (undo-tree-id331 . -1) 3433) nil (25364 40047 757469 346000) 0 nil])
([nil nil ((3432 . 3441)) nil (25364 40047 757467 238000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -3438) (undo-tree-id328 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3439) (undo-tree-id329 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3440) (undo-tree-id330 . -1) 3441) nil (25364 40047 757464 639000) 0 nil])
([nil nil ((3438 . 3440)) nil (25364 40047 757453 684000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -3443) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 3444 (t 25364 40047 771014 158000)) nil (25364 40054 166211 469000) 0 nil])
([nil nil ((3443 . 3444) (t 25364 40054 181014 552000)) nil (25364 40058 796225 223000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -3443) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 3444 (t 25364 40058 811014 835000)) nil (25364 40079 796539 710000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -2749) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 2750 (t 25364 40079 811016 125000)) nil (25364 40140 990290 998000) 0 nil])
([nil nil ((2749 . 2752)) nil (25364 40140 990287 802000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2750) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("n" 0 1 (fontified t)) . -2751) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 2752) nil (25364 40140 990286 466000) 0 nil])
([nil nil ((2750 . 2753)) nil (25364 40140 990281 522000) 0 nil])
([nil nil ((2750 . 2756) (#("exp" 0 3 (fontified nil)) . 2750) (2750 . 2753) (#("expect" 0 6 (fontified nil)) . -2750) (2750 . 2756) (#("exp" 0 3 (fontified t)) . -2750) (undo-tree-id360 . -3) (undo-tree-id361 . -1) (undo-tree-id362 . -2) (undo-tree-id363 . -3) 2753) nil (25364 40140 990279 995000) 0 nil])
([nil nil ((2758 . 2760) (2757 . 2759) (#("\"" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -2757) (2757 . 2758) (2756 . 2758)) nil (25364 40140 990275 387000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . -2758) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2759) (undo-tree-id358 . -1) (undo-tree-id359 . -1) 2760) nil (25364 40140 990273 243000) 0 nil])
([nil nil ((2758 . 2760)) nil (25364 40140 990268 884000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -2758) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2759) (undo-tree-id354 . -1) (undo-tree-id355 . -1) 2760) nil (25364 40140 990266 595000) 0 nil])
([nil nil ((2758 . 2774)) nil (25364 40140 990254 883000) 0 nil])
([nil nil ((571 . 573) (t 25364 40141 4353 214000)) nil (25364 40178 417888 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 617 . 618) (nil fontified nil 571 . 618) (571 . 618)) nil (25364 40178 417886 778000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -617) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 618) nil (25364 40178 417881 656000) 0 nil])
([nil nil ((#("   pub fn import(name: String, path: String) -> Result<AudioClip> {
        // Create a media source. Note that the MediaSource trait is automatically implemented for File,
        // among other types.
        let file = Box::new(File::open(Path::new(&path))?);

        let creation_time = file.metadata()?.created()?;

        // Create the media source stream using the boxed media source from above.
        let mss = MediaSourceStream::new(file, Default::default());

        // Create a hint to help the format registry guess what format reader is appropriate. In this
        // example we'll leave it empty.
        let hint = Hint::new();

        // Use the default options when reading and decoding.
        let format_opts: FormatOptions = Default::default();
        let metadata_opts: MetadataOptions = Default::default();
        let decoder_opts: DecoderOptions = Default::default();

        // Probe the media source stream for a format.
        let probed =
            symphonia::default::get_probe().format(&hint, mss, &format_opts, &metadata_opts)?;

        // Get the format reader yielded by the probe operation.
        let mut format = probed.format;

        // Get the default track.
        let track = format.default_track().expect(\"No default track\");
            

        // Create a decoder for the track.
        let mut decoder =
            symphonia::default::get_codecs().make(&track.codec_params, &decoder_opts)?;

        // Store the track identifier, we'll use it to filter packets.
        let track_id = track.id;

        let mut sample_count = 0;
        let mut sample_buf = None;
        let channels = track
	    .codec_params
            .channels.ok_or_else(|| Err(\"No default track\"));

        let mut clip = AudioClip {
            name,
            samples: Vec::new(),
            sample_rate: track
                .codec_params
                .sample_rate
                .ok_or_else(|| Err(\"Unknown sample rate\")),
        };

        loop {
            // Get the next packet from the format reader.
            let packet = match format.next_packet() {
                Ok(packet_ok) => packet_ok,
                Err(Error::IoError(ref packet_err))
                    if packet_err.kind() == std::io::ErrorKind::UnexpectedEof =>
                {
                    break;
                }
                Err(packet_err) => {
                    return Err(packet_err.into());
                }
            };

            // If the packet does not belong to the selected track, skip it.
            if packet.track_id() != track_id {
                continue;
            }

            // Decode the packet into audio samples, ignoring any decode errors.
            match decoder.decode(&packet) {
                Ok(audio_buf) => {
                    // The decoded audio samples may now be accessed via the audio buffer if per-channel
                    // slices of samples in their native decoded format is desired. Use-cases where
                    // the samples need to be accessed in an interleaved order or converted into
                    // another sample format, or a byte buffer is required, are covered by copying the
                    // audio buffer into a sample buffer or raw sample buffer, respectively. In the
                    // example below, we will copy the audio buffer into a sample buffer in an
                    // interleaved order while also converting to a f32 sample format.

                    // If this is the *first* decoded packet, create a sample buffer matching the
                    // decoded audio buffer format.
                    if sample_buf.is_none() {
                        // Get the audio buffer specification.
                        let spec = *audio_buf.spec();

                        // Get the capacity of the decoded buffer. Note: This is capacity, not length!
                        let duration = audio_buf.capacity() as u64;

                        // Create the f32 sample buffer.
                        sample_buf = Some(SampleBuffer::<f32>::new(duration, spec));
                    }

                    // Copy the decoded audio buffer into the sample buffer in an interleaved format.
                    if let Some(buf) = &mut sample_buf {
                        buf.copy_interleaved_ref(audio_buf);
                        let mono: Vec<f32> = buf
                            .samples()
                            .iter()
                            .step_by(channels.count())
                            .copied()
                            .collect();
                        clip.samples.extend_from_slice(&mono);

                        // The samples may now be access via the `samples()` function.
                        sample_count += buf.samples().len();
                        log::info!(\"\\rDecoded {} samples\", sample_count);
                    }
                }
                Err(Error::DecodeError(_)) => (),
                Err(_) => break,
            }
        }

        Ok(clip)
    }" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 16 (face font-lock-function-name-face fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 21 (face font-lock-variable-name-face fontified t) 21 23 (fontified t) 23 29 (face font-lock-type-face fontified t) 29 31 (fontified t) 31 35 (face font-lock-variable-name-face fontified t) 35 37 (fontified t) 37 43 (face font-lock-type-face fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 46 (fontified t) 46 47 (syntax-table (1) fontified t) 47 48 (fontified t) 48 54 (face font-lock-type-face fontified t) 54 55 (face (rainbow-delimiters-depth-2-face) fontified t) 55 64 (face font-lock-type-face fontified t) 64 65 (face (rainbow-delimiters-depth-2-face) fontified t) 65 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 68 (fontified t) 68 76 (fontified t) 76 79 (face font-lock-comment-delimiter-face fontified t) 79 173 (face font-lock-comment-face fontified t) 173 181 (fontified t) 181 184 (face font-lock-comment-delimiter-face fontified t) 184 203 (face font-lock-comment-face fontified t) 203 211 (fontified t) 211 214 (face font-lock-keyword-face fontified t) 214 215 (fontified t) 215 219 (face font-lock-variable-name-face fontified t) 219 222 (fontified t) 222 225 (face font-lock-type-face fontified t) 225 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-3-face) fontified t) 231 235 (face font-lock-type-face fontified t) 235 241 (fontified t) 241 242 (face (rainbow-delimiters-depth-4-face) fontified t) 242 246 (face font-lock-type-face fontified t) 246 251 (fontified t) 251 252 (face (rainbow-delimiters-depth-5-face) fontified t) 252 253 (face rust-ampersand-face fontified t) 253 257 (fontified t) 257 258 (face (rainbow-delimiters-depth-5-face) fontified t) 258 259 (face (rainbow-delimiters-depth-4-face) fontified t) 259 260 (face rust-question-mark fontified t) 260 261 (face (rainbow-delimiters-depth-3-face) fontified t) 261 272 (fontified t) 272 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t) 276 289 (face font-lock-variable-name-face fontified t) 289 305 (fontified t) 305 306 (face (rainbow-delimiters-depth-3-face) fontified t) 306 307 (face (rainbow-delimiters-depth-3-face) fontified t) 307 308 (face rust-question-mark fontified t) 308 316 (fontified t) 316 317 (face (rainbow-delimiters-depth-3-face) fontified t) 317 318 (face (rainbow-delimiters-depth-3-face) fontified t) 318 319 (face rust-question-mark fontified t) 319 330 (fontified t) 330 333 (face font-lock-comment-delimiter-face fontified t) 333 405 (face font-lock-comment-face fontified t) 405 413 (fontified t) 413 416 (face font-lock-keyword-face fontified t) 416 417 (fontified t) 417 420 (face font-lock-variable-name-face fontified t) 420 423 (fontified t) 423 440 (face font-lock-type-face fontified t) 440 445 (fontified t) 445 446 (face (rainbow-delimiters-depth-3-face) fontified t) 446 452 (fontified t) 452 459 (face font-lock-type-face fontified t) 459 468 (fontified t) 468 469 (face (rainbow-delimiters-depth-4-face) fontified t) 469 470 (face (rainbow-delimiters-depth-4-face) fontified t) 470 471 (face (rainbow-delimiters-depth-3-face) fontified t) 471 482 (fontified t) 482 485 (face font-lock-comment-delimiter-face fontified t) 485 576 (face font-lock-comment-face fontified t) 576 577 (fontified t) 577 579 (fontified t) 579 584 (fontified t) 584 587 (fontified t face font-lock-comment-delimiter-face) 587 617 (fontified t face font-lock-comment-face) 617 625 (fontified t) 625 628 (face font-lock-keyword-face fontified t) 628 629 (fontified t) 629 633 (face font-lock-variable-name-face fontified t) 633 636 (fontified t) 636 640 (face font-lock-type-face fontified t) 640 645 (fontified t) 645 646 (face (rainbow-delimiters-depth-3-face) fontified t) 646 647 (face (rainbow-delimiters-depth-3-face) fontified t) 647 658 (fontified t) 658 661 (face font-lock-comment-delimiter-face fontified t) 661 712 (face font-lock-comment-face fontified t) 712 720 (fontified t) 720 723 (face font-lock-keyword-face fontified t) 723 724 (fontified t) 724 735 (face font-lock-variable-name-face fontified t) 735 737 (fontified t) 737 750 (face font-lock-type-face fontified t) 750 753 (fontified t) 753 760 (face font-lock-type-face fontified t) 760 769 (fontified t) 769 770 (face (rainbow-delimiters-depth-3-face) fontified t) 770 771 (face (rainbow-delimiters-depth-3-face) fontified t) 771 781 (fontified t) 781 784 (face font-lock-keyword-face fontified t) 784 785 (fontified t) 785 798 (face font-lock-variable-name-face fontified t) 798 800 (fontified t) 800 815 (face font-lock-type-face fontified t) 815 818 (fontified t) 818 825 (face font-lock-type-face fontified t) 825 834 (fontified t) 834 835 (face (rainbow-delimiters-depth-3-face) fontified t) 835 836 (face (rainbow-delimiters-depth-3-face) fontified t) 836 846 (fontified t) 846 849 (face font-lock-keyword-face fontified t) 849 850 (fontified t) 850 862 (face font-lock-variable-name-face fontified t) 862 864 (fontified t) 864 878 (face font-lock-type-face fontified t) 878 881 (fontified t) 881 888 (face font-lock-type-face fontified t) 888 897 (fontified t) 897 898 (face (rainbow-delimiters-depth-3-face) fontified t) 898 899 (face (rainbow-delimiters-depth-3-face) fontified t) 899 910 (fontified t) 910 913 (face font-lock-comment-delimiter-face fontified t) 913 957 (face font-lock-comment-face fontified t) 957 965 (fontified t) 965 968 (face font-lock-keyword-face fontified t) 968 969 (fontified t) 969 975 (face font-lock-variable-name-face fontified t) 975 990 (fontified t) 990 999 (face font-lock-constant-face fontified t) 999 1001 (fontified t) 1001 1008 (face font-lock-constant-face fontified t) 1008 1019 (fontified t) 1019 1020 (face (rainbow-delimiters-depth-3-face) fontified t) 1020 1021 (face (rainbow-delimiters-depth-3-face) fontified t) 1021 1028 (fontified t) 1028 1029 (face (rainbow-delimiters-depth-3-face) fontified t) 1029 1030 (face rust-ampersand-face fontified t) 1030 1041 (fontified t) 1041 1042 (face rust-ampersand-face fontified t) 1042 1055 (fontified t) 1055 1056 (face rust-ampersand-face fontified t) 1056 1069 (fontified t) 1069 1070 (face (rainbow-delimiters-depth-3-face) fontified t) 1070 1071 (face rust-question-mark fontified t) 1071 1082 (fontified t) 1082 1085 (face font-lock-comment-delimiter-face fontified t) 1085 1139 (face font-lock-comment-face fontified t) 1139 1147 (fontified t) 1147 1150 (face font-lock-keyword-face fontified t) 1150 1151 (fontified t) 1151 1154 (face font-lock-keyword-face fontified t) 1154 1155 (fontified t) 1155 1161 (face font-lock-variable-name-face fontified t) 1161 1188 (fontified t) 1188 1191 (face font-lock-comment-delimiter-face fontified t) 1191 1214 (face font-lock-comment-face fontified t) 1214 1222 (fontified t) 1222 1225 (face font-lock-keyword-face fontified t) 1225 1226 (fontified t) 1226 1231 (face font-lock-variable-name-face fontified t) 1231 1234 (fontified t) 1234 1240 (fontified t) 1240 1249 (fontified t) 1249 1254 (fontified t) 1254 1255 (face (rainbow-delimiters-depth-3-face) fontified t) 1255 1256 (face (rainbow-delimiters-depth-3-face) fontified t) 1256 1257 (fontified t) 1257 1263 (fontified t) 1263 1264 (face (rainbow-delimiters-depth-3-face) fontified t) 1264 1282 (face font-lock-string-face fontified t) 1282 1283 (face (rainbow-delimiters-depth-3-face) fontified t) 1283 1284 (fontified t rear-nonsticky t) 1284 1285 (fontified t) 1285 1297 (fontified t) 1297 1298 (fontified t) 1298 1299 (fontified t) 1299 1307 (fontified t) 1307 1310 (face font-lock-comment-delimiter-face fontified t) 1310 1342 (face font-lock-comment-face fontified t) 1342 1350 (fontified t) 1350 1353 (face font-lock-keyword-face fontified t) 1353 1354 (fontified t) 1354 1357 (face font-lock-keyword-face fontified t) 1357 1358 (fontified t) 1358 1365 (face font-lock-variable-name-face fontified t) 1365 1380 (fontified t) 1380 1389 (face font-lock-constant-face fontified t) 1389 1391 (fontified t) 1391 1398 (face font-lock-constant-face fontified t) 1398 1410 (fontified t) 1410 1411 (face (rainbow-delimiters-depth-3-face) fontified t) 1411 1412 (face (rainbow-delimiters-depth-3-face) fontified t) 1412 1417 (fontified t) 1417 1418 (face (rainbow-delimiters-depth-3-face) fontified t) 1418 1419 (face rust-ampersand-face fontified t) 1419 1439 (fontified t) 1439 1440 (face rust-ampersand-face fontified t) 1440 1452 (fontified t) 1452 1453 (face (rainbow-delimiters-depth-3-face) fontified t) 1453 1454 (face rust-question-mark fontified t) 1454 1465 (fontified t) 1465 1467 (face font-lock-comment-delimiter-face fontified t) 1467 1468 (face font-lock-comment-delimiter-face fontified t) 1468 1528 (face font-lock-comment-face fontified t) 1528 1536 (fontified t) 1536 1539 (face font-lock-keyword-face fontified t) 1539 1540 (fontified t) 1540 1548 (face font-lock-variable-name-face fontified t) 1548 1561 (fontified t) 1561 1562 (fontified t) 1562 1570 (fontified t) 1570 1573 (face font-lock-keyword-face fontified t) 1573 1574 (fontified t) 1574 1577 (face font-lock-keyword-face fontified t) 1577 1578 (fontified t) 1578 1590 (face font-lock-variable-name-face fontified t) 1590 1596 (fontified t) 1596 1604 (fontified t) 1604 1607 (face font-lock-keyword-face fontified t) 1607 1608 (fontified t) 1608 1611 (face font-lock-keyword-face fontified t) 1611 1612 (fontified t) 1612 1622 (face font-lock-variable-name-face fontified t) 1622 1625 (fontified t) 1625 1629 (face font-lock-type-face fontified t) 1629 1631 (fontified t) 1631 1639 (fontified t) 1639 1642 (face font-lock-keyword-face fontified t) 1642 1643 (fontified t) 1643 1651 (face font-lock-variable-name-face fontified t) 1651 1660 (fontified t) 1660 1665 (fontified t) 1665 1679 (fontified t) 1679 1692 (fontified t) 1692 1701 (fontified t) 1701 1711 (fontified t) 1711 1712 (face (rainbow-delimiters-depth-3-face) fontified t) 1712 1715 (fontified t) 1715 1718 (face font-lock-type-face fontified t) 1718 1719 (face (rainbow-delimiters-depth-4-face) fontified t) 1719 1737 (face font-lock-string-face fontified t) 1737 1738 (face (rainbow-delimiters-depth-4-face) fontified t) 1738 1739 (face (rainbow-delimiters-depth-3-face) fontified t) 1739 1740 (fontified t) 1740 1741 (fontified t) 1741 1742 (fontified t) 1742 1750 (fontified t) 1750 1753 (face font-lock-keyword-face fontified t) 1753 1754 (fontified t) 1754 1757 (face font-lock-keyword-face fontified t) 1757 1758 (fontified t) 1758 1762 (face font-lock-variable-name-face fontified t) 1762 1765 (fontified t) 1765 1774 (face font-lock-type-face fontified t) 1774 1775 (fontified t) 1775 1776 (face (rainbow-delimiters-depth-3-face) fontified t) 1776 1777 (fontified t) 1777 1789 (fontified t) 1789 1795 (fontified t) 1795 1807 (fontified t) 1807 1814 (face font-lock-variable-name-face fontified t) 1814 1816 (fontified t) 1816 1819 (face font-lock-type-face fontified t) 1819 1824 (fontified t) 1824 1825 (face (rainbow-delimiters-depth-4-face) fontified t) 1825 1826 (face (rainbow-delimiters-depth-4-face) fontified t) 1826 1828 (fontified t) 1828 1840 (fontified t) 1840 1851 (face font-lock-variable-name-face fontified t) 1851 1859 (fontified t) 1859 1889 (fontified t) 1889 1918 (fontified t) 1918 1945 (fontified t) 1945 1946 (face (rainbow-delimiters-depth-4-face) fontified t) 1946 1949 (fontified t) 1949 1952 (face font-lock-type-face fontified t) 1952 1953 (face (rainbow-delimiters-depth-5-face) fontified t) 1953 1974 (face font-lock-string-face fontified t) 1974 1975 (face (rainbow-delimiters-depth-5-face) fontified t) 1975 1976 (face (rainbow-delimiters-depth-4-face) fontified t) 1976 1978 (fontified t) 1978 1986 (fontified t) 1986 1987 (face (rainbow-delimiters-depth-3-face) fontified t) 1987 1989 (fontified t) 1989 1990 (fontified t) 1990 1998 (fontified t) 1998 2002 (face font-lock-keyword-face fontified t) 2002 2003 (fontified t) 2003 2004 (face (rainbow-delimiters-depth-3-face) fontified t) 2004 2005 (fontified t) 2005 2017 (fontified t) 2017 2020 (face font-lock-comment-delimiter-face fontified t) 2020 2064 (face font-lock-comment-face fontified t) 2064 2076 (fontified t) 2076 2079 (face font-lock-keyword-face fontified t) 2079 2080 (fontified t) 2080 2086 (face font-lock-variable-name-face fontified t) 2086 2089 (fontified t) 2089 2094 (face font-lock-keyword-face fontified t) 2094 2113 (fontified t) 2113 2114 (face (rainbow-delimiters-depth-4-face) fontified t) 2114 2115 (face (rainbow-delimiters-depth-4-face) fontified t) 2115 2116 (fontified t) 2116 2117 (face (rainbow-delimiters-depth-4-face) fontified t) 2117 2118 (fontified t) 2118 2134 (fontified t) 2134 2136 (face font-lock-type-face fontified t) 2136 2137 (face (rainbow-delimiters-depth-5-face) fontified t) 2137 2146 (fontified t) 2146 2147 (face (rainbow-delimiters-depth-5-face) fontified t) 2147 2149 (fontified t) 2149 2150 (fontified t syntax-table (1)) 2150 2162 (fontified t) 2162 2178 (fontified t) 2178 2181 (face font-lock-type-face fontified t) 2181 2182 (face (rainbow-delimiters-depth-5-face) fontified t) 2182 2187 (face font-lock-type-face fontified t) 2187 2189 (fontified t) 2189 2196 (face font-lock-type-face fontified t) 2196 2197 (face (rainbow-delimiters-depth-6-face) fontified t) 2197 2200 (face font-lock-keyword-face fontified t) 2200 2201 (fontified t) 2201 2211 (face font-lock-variable-name-face fontified t) 2211 2212 (face (rainbow-delimiters-depth-6-face) fontified t) 2212 2213 (face (rainbow-delimiters-depth-5-face) fontified t) 2213 2214 (fontified t) 2214 2234 (fontified t) 2234 2236 (face font-lock-keyword-face fontified t) 2236 2252 (fontified t) 2252 2253 (face (rainbow-delimiters-depth-5-face) fontified t) 2253 2254 (face (rainbow-delimiters-depth-5-face) fontified t) 2254 2258 (fontified t) 2258 2261 (face font-lock-constant-face fontified t) 2261 2263 (fontified t) 2263 2265 (face font-lock-constant-face fontified t) 2265 2267 (fontified t) 2267 2276 (face font-lock-type-face fontified t) 2276 2278 (fontified t) 2278 2291 (face font-lock-type-face fontified t) 2291 2293 (fontified t) 2293 2294 (fontified t syntax-table (1)) 2294 2295 (fontified t) 2295 2311 (fontified t) 2311 2312 (face (rainbow-delimiters-depth-5-face) fontified t) 2312 2313 (fontified t) 2313 2333 (fontified t) 2333 2338 (face font-lock-keyword-face fontified t) 2338 2340 (fontified t) 2340 2356 (fontified t) 2356 2357 (face (rainbow-delimiters-depth-5-face) fontified t) 2357 2358 (fontified t) 2358 2374 (fontified t) 2374 2377 (face font-lock-type-face fontified t) 2377 2378 (face (rainbow-delimiters-depth-5-face) fontified t) 2378 2388 (fontified t) 2388 2389 (face (rainbow-delimiters-depth-5-face) fontified t) 2389 2391 (fontified t) 2391 2392 (fontified t syntax-table (1)) 2392 2393 (fontified t) 2393 2394 (face (rainbow-delimiters-depth-5-face) fontified t) 2394 2395 (fontified t) 2395 2415 (fontified t) 2415 2421 (face font-lock-keyword-face fontified t) 2421 2422 (fontified t) 2422 2425 (face font-lock-type-face fontified t) 2425 2426 (face (rainbow-delimiters-depth-6-face) fontified t) 2426 2441 (fontified t) 2441 2442 (face (rainbow-delimiters-depth-7-face) fontified t) 2442 2443 (face (rainbow-delimiters-depth-7-face) fontified t) 2443 2444 (face (rainbow-delimiters-depth-6-face) fontified t) 2444 2446 (fontified t) 2446 2462 (fontified t) 2462 2463 (face (rainbow-delimiters-depth-5-face) fontified t) 2463 2464 (fontified t) 2464 2476 (fontified t) 2476 2477 (face (rainbow-delimiters-depth-4-face) fontified t) 2477 2479 (fontified t) 2479 2480 (fontified t) 2480 2492 (fontified t) 2492 2495 (face font-lock-comment-delimiter-face fontified t) 2495 2557 (face font-lock-comment-face fontified t) 2557 2569 (fontified t) 2569 2571 (face font-lock-keyword-face fontified t) 2571 2587 (fontified t) 2587 2588 (face (rainbow-delimiters-depth-4-face) fontified t) 2588 2589 (face (rainbow-delimiters-depth-4-face) fontified t) 2589 2602 (fontified t) 2602 2603 (face (rainbow-delimiters-depth-4-face) fontified t) 2603 2604 (fontified t) 2604 2620 (fontified t) 2620 2628 (face font-lock-keyword-face fontified t) 2628 2630 (fontified t) 2630 2642 (fontified t) 2642 2643 (face (rainbow-delimiters-depth-4-face) fontified t) 2643 2644 (fontified t) 2644 2645 (fontified t) 2645 2657 (fontified t) 2657 2660 (face font-lock-comment-delimiter-face fontified t) 2660 2672 (face font-lock-comment-face fontified t) 2672 2685 (face font-lock-comment-face fontified t) 2685 2686 (face font-lock-comment-face fontified t) 2686 2726 (face font-lock-comment-face fontified t) 2726 2738 (fontified t) 2738 2743 (face font-lock-keyword-face fontified t) 2743 2758 (fontified t) 2758 2759 (face (rainbow-delimiters-depth-4-face) fontified t) 2759 2760 (face rust-ampersand-face fontified t) 2760 2766 (fontified t) 2766 2767 (face (rainbow-delimiters-depth-4-face) fontified t) 2767 2768 (fontified t) 2768 2769 (face (rainbow-delimiters-depth-4-face) fontified t) 2769 2770 (fontified t) 2770 2785 (fontified t) 2785 2786 (fontified t) 2786 2788 (face font-lock-type-face fontified t) 2788 2789 (face (rainbow-delimiters-depth-5-face) fontified t) 2789 2798 (fontified t) 2798 2799 (face (rainbow-delimiters-depth-5-face) fontified t) 2799 2801 (fontified t) 2801 2802 (fontified t syntax-table (1)) 2802 2803 (fontified t) 2803 2804 (face (rainbow-delimiters-depth-5-face) fontified t) 2804 2805 (fontified t) 2805 2825 (fontified t) 2825 2828 (face font-lock-comment-delimiter-face fontified t) 2828 2910 (face font-lock-comment-face fontified t) 2910 2930 (fontified t) 2930 2933 (face font-lock-comment-delimiter-face fontified t) 2933 2948 (face font-lock-comment-face fontified t) 2948 3010 (face font-lock-comment-face fontified t) 3010 3030 (fontified t) 3030 3033 (face font-lock-comment-delimiter-face fontified t) 3033 3103 (face font-lock-comment-face fontified t) 3103 3107 (face font-lock-comment-face fontified t) 3107 3111 (fontified t) 3111 3127 (fontified t) 3127 3130 (face font-lock-comment-delimiter-face fontified t) 3130 3156 (face font-lock-comment-face fontified t) 3156 3157 (face font-lock-comment-face fontified t) 3157 3196 (face font-lock-comment-face fontified t) 3196 3206 (face font-lock-comment-face fontified t) 3206 3210 (face font-lock-comment-face fontified t) 3210 3214 (fontified t) 3214 3230 (fontified t) 3230 3233 (face font-lock-comment-delimiter-face fontified t) 3233 3236 (face font-lock-comment-face fontified t) 3236 3238 (face font-lock-comment-face fontified t) 3238 3310 (face font-lock-comment-face fontified t) 3310 3325 (fontified t) 3325 3330 (fontified t) 3330 3333 (face font-lock-comment-delimiter-face fontified t) 3333 3405 (face font-lock-comment-face fontified t) 3405 3421 (fontified t) 3421 3425 (fontified t) 3425 3428 (face font-lock-comment-delimiter-face fontified t) 3428 3478 (face font-lock-comment-face fontified t) 3478 3492 (face font-lock-comment-face fontified t) 3492 3493 (fontified t) 3493 3513 (fontified t) 3513 3516 (face font-lock-comment-delimiter-face fontified t) 3516 3591 (face font-lock-comment-face fontified t) 3591 3611 (fontified t) 3611 3614 (face font-lock-comment-delimiter-face fontified t) 3614 3618 (face font-lock-comment-face fontified t) 3618 3643 (fontified t face font-lock-comment-face) 3643 3663 (fontified t) 3663 3665 (face font-lock-keyword-face fontified t) 3665 3684 (fontified t) 3684 3685 (face (rainbow-delimiters-depth-6-face) fontified t) 3685 3686 (face (rainbow-delimiters-depth-6-face) fontified t) 3686 3687 (fontified t) 3687 3688 (face (rainbow-delimiters-depth-6-face) fontified t) 3688 3689 (fontified t) 3689 3713 (fontified t) 3713 3716 (face font-lock-comment-delimiter-face fontified t) 3716 3752 (face font-lock-comment-face fontified t) 3752 3776 (fontified t) 3776 3779 (face font-lock-keyword-face fontified t) 3779 3780 (fontified t) 3780 3784 (face font-lock-variable-name-face fontified t) 3784 3802 (fontified t) 3802 3803 (face (rainbow-delimiters-depth-7-face) fontified t) 3803 3804 (face (rainbow-delimiters-depth-7-face) fontified t) 3804 3806 (fontified t) 3806 3807 (fontified t) 3807 3831 (fontified t) 3831 3834 (face font-lock-comment-delimiter-face fontified t) 3834 3910 (face font-lock-comment-face fontified t) 3910 3934 (fontified t) 3934 3937 (face font-lock-keyword-face fontified t) 3937 3938 (fontified t) 3938 3946 (face font-lock-variable-name-face fontified t) 3946 3967 (fontified t) 3967 3968 (face (rainbow-delimiters-depth-7-face) fontified t) 3968 3969 (face (rainbow-delimiters-depth-7-face) fontified t) 3969 3970 (fontified t) 3970 3972 (face font-lock-keyword-face fontified t) 3972 3973 (fontified t) 3973 3976 (face font-lock-type-face fontified t) 3976 3978 (fontified t) 3978 3979 (fontified t) 3979 4003 (fontified t) 4003 4006 (face font-lock-comment-delimiter-face fontified t) 4006 4036 (face font-lock-comment-face fontified t) 4036 4073 (fontified t) 4073 4077 (face font-lock-type-face fontified t) 4077 4078 (face (rainbow-delimiters-depth-7-face) fontified t) 4078 4090 (face font-lock-type-face fontified t) 4090 4092 (fontified t) 4092 4093 (face (rainbow-delimiters-depth-8-face) fontified t) 4093 4096 (face font-lock-type-face fontified t) 4096 4097 (face (rainbow-delimiters-depth-8-face) fontified t) 4097 4102 (fontified t) 4102 4103 (face (rainbow-delimiters-depth-8-face) fontified t) 4103 4117 (fontified t) 4117 4118 (face (rainbow-delimiters-depth-8-face) fontified t) 4118 4119 (face (rainbow-delimiters-depth-7-face) fontified t) 4119 4141 (fontified t) 4141 4142 (face (rainbow-delimiters-depth-6-face) fontified t) 4142 4164 (fontified t) 4164 4167 (face font-lock-comment-delimiter-face fontified t) 4167 4246 (face font-lock-comment-face fontified t) 4246 4266 (fontified t) 4266 4268 (face font-lock-keyword-face fontified t) 4268 4269 (fontified t) 4269 4272 (face font-lock-keyword-face fontified t) 4272 4273 (fontified t) 4273 4277 (face font-lock-type-face fontified t) 4277 4278 (face (rainbow-delimiters-depth-6-face) fontified t) 4278 4281 (fontified t) 4281 4282 (face (rainbow-delimiters-depth-6-face) fontified t) 4282 4285 (fontified t) 4285 4286 (face rust-ampersand-face fontified t) 4286 4289 (face font-lock-keyword-face fontified t) 4289 4301 (fontified t) 4301 4302 (face (rainbow-delimiters-depth-6-face) fontified t) 4302 4351 (fontified t) 4351 4352 (face (rainbow-delimiters-depth-7-face) fontified t) 4352 4361 (fontified t) 4361 4362 (face (rainbow-delimiters-depth-7-face) fontified t) 4362 4388 (fontified t) 4388 4391 (face font-lock-keyword-face fontified t) 4391 4392 (fontified t) 4392 4396 (face font-lock-variable-name-face fontified t) 4396 4398 (fontified t) 4398 4401 (face font-lock-type-face fontified t) 4401 4402 (face (rainbow-delimiters-depth-7-face) fontified t) 4402 4405 (face font-lock-type-face fontified t) 4405 4406 (face (rainbow-delimiters-depth-7-face) fontified t) 4406 4449 (fontified t) 4449 4450 (face (rainbow-delimiters-depth-7-face) fontified t) 4450 4451 (face (rainbow-delimiters-depth-7-face) fontified t) 4451 4485 (fontified t) 4485 4486 (face (rainbow-delimiters-depth-7-face) fontified t) 4486 4487 (face (rainbow-delimiters-depth-7-face) fontified t) 4487 4524 (fontified t) 4524 4525 (face (rainbow-delimiters-depth-7-face) fontified t) 4525 4539 (fontified t) 4539 4540 (face (rainbow-delimiters-depth-8-face) fontified t) 4540 4541 (face (rainbow-delimiters-depth-8-face) fontified t) 4541 4542 (face (rainbow-delimiters-depth-7-face) fontified t) 4542 4578 (fontified t) 4578 4579 (face (rainbow-delimiters-depth-7-face) fontified t) 4579 4580 (face (rainbow-delimiters-depth-7-face) fontified t) 4580 4617 (fontified t) 4617 4618 (face (rainbow-delimiters-depth-7-face) fontified t) 4618 4619 (face (rainbow-delimiters-depth-7-face) fontified t) 4619 4675 (fontified t) 4675 4676 (face (rainbow-delimiters-depth-7-face) fontified t) 4676 4677 (face rust-ampersand-face fontified t) 4677 4681 (fontified t) 4681 4682 (face (rainbow-delimiters-depth-7-face) fontified t) 4682 4709 (fontified t) 4709 4712 (face font-lock-comment-delimiter-face fontified t) 4712 4772 (face font-lock-comment-face fontified t) 4772 4823 (fontified t) 4823 4824 (face (rainbow-delimiters-depth-7-face) fontified t) 4824 4825 (face (rainbow-delimiters-depth-7-face) fontified t) 4825 4829 (fontified t) 4829 4830 (face (rainbow-delimiters-depth-7-face) fontified t) 4830 4831 (face (rainbow-delimiters-depth-7-face) fontified t) 4831 4857 (fontified t) 4857 4860 (face font-lock-constant-face fontified t) 4860 4862 (fontified t) 4862 4867 (face font-lock-preprocessor-face fontified t) 4867 4868 (face (rainbow-delimiters-depth-7-face) fontified t) 4868 4890 (face font-lock-string-face fontified t) 4890 4904 (fontified t) 4904 4905 (face (rainbow-delimiters-depth-7-face) fontified t) 4905 4927 (fontified t) 4927 4928 (face (rainbow-delimiters-depth-6-face) fontified t) 4928 4945 (fontified t) 4945 4946 (face (rainbow-delimiters-depth-5-face) fontified t) 4946 4963 (fontified t) 4963 4966 (face font-lock-type-face fontified t) 4966 4967 (face (rainbow-delimiters-depth-5-face) fontified t) 4967 4972 (face font-lock-type-face fontified t) 4972 4974 (fontified t) 4974 4985 (face font-lock-type-face fontified t) 4985 4986 (face (rainbow-delimiters-depth-6-face) fontified t) 4986 4987 (fontified t) 4987 4988 (face (rainbow-delimiters-depth-6-face) fontified t) 4988 4989 (face (rainbow-delimiters-depth-5-face) fontified t) 4989 4991 (fontified t) 4991 4992 (fontified t syntax-table (1)) 4992 4993 (fontified t) 4993 4994 (face (rainbow-delimiters-depth-5-face) fontified t) 4994 4995 (face (rainbow-delimiters-depth-5-face) fontified t) 4995 5013 (fontified t) 5013 5016 (face font-lock-type-face fontified t) 5016 5017 (face (rainbow-delimiters-depth-5-face) fontified t) 5017 5018 (fontified t) 5018 5019 (face (rainbow-delimiters-depth-5-face) fontified t) 5019 5021 (fontified t) 5021 5022 (fontified t syntax-table (1)) 5022 5023 (fontified t) 5023 5028 (face font-lock-keyword-face fontified t) 5028 5042 (fontified t) 5042 5043 (face (rainbow-delimiters-depth-4-face) fontified t) 5043 5052 (fontified t) 5052 5053 (face (rainbow-delimiters-depth-3-face) fontified t) 5053 5063 (fontified t) 5063 5065 (face font-lock-type-face fontified t) 5065 5066 (face (rainbow-delimiters-depth-3-face) fontified t) 5066 5070 (fontified t) 5070 5071 (face (rainbow-delimiters-depth-3-face) fontified t) 5071 5072 (fontified t) 5072 5076 (fontified t) 5076 5077 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . 1541) (undo-tree-id391 . -5077) (undo-tree-id392 . -3) (undo-tree-id393 . -1240) (undo-tree-id394 . -1240) (undo-tree-id395 . -629) (undo-tree-id396 . -1741) (undo-tree-id397 . -1740) (undo-tree-id398 . -901) (undo-tree-id399 . -1264) (undo-tree-id400 . 3796) (undo-tree-id401 . -1789) (undo-tree-id402 . -2726) (undo-tree-id403 . -1853) (undo-tree-id404 . -1976) (undo-tree-id405 . -4534) (undo-tree-id406 . -4539) (undo-tree-id407 . -4533) (undo-tree-id408 . -4534) (undo-tree-id409 . -10) (undo-tree-id410 . -5077) (undo-tree-id411 . -5077) (undo-tree-id412 . -5077) (t 25364 40178 464355 513000)) nil (25364 40261 451935 883000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1540) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 1541) nil (25364 40261 451415 710000) 0 nil])
([nil nil ((1541 . 1545) (#("    " 0 4 (fontified nil)) . 1540) (1540 . 1544) (1540 . 1541)) nil (25364 40261 451398 323000) 0 nil])
([nil nil ((1540 . 1544)) nil (25364 40267 371338 866000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6758 . 6759) (nil fontified nil 1544 . 6759) (1544 . 6759)) nil (25364 40275 442025 864000) 0 nil] [nil nil ((nil rear-nonsticky nil 4561 . 4562) (nil fontified nil 1544 . 4562) (1544 . 4562)) ((#("    pub fn play(&self, host: AudioBackend) -> Result<PlayHandle> {
        let host = host.host().wrap_err(\"Could not open specified host\")?;
        let device = host
            .default_output_device()
            .ok_or_else(|| eyre!(\"No output device\"))?;
        log::info!(\"Output device: {}\", device.name()?);
        let config = device.default_output_config()?;

        log::info!(\"Begin playback...\");

        let sample_rate = config.sample_rate().0;
        let state = PlaybackState {
            time: 0,
            samples: self.resample(sample_rate).samples,
            done_cbs: vec![],
            changed_cbs: vec![],
            changed_cbs_triggered_at: 0,
            sample_rate: sample_rate as usize,
        };
        let state: PlaybackStateHandle = Arc::new(Mutex::new(Some(state)));
        let state_2 = state.clone();
        let channels = config.channels();

        let err_fn = move |err| {
            log::error!(\"an error occurred on stream: {}\", err);
        };

        fn write_output_data<T>(output: &mut [T], channels: u16, writer: &PlaybackStateHandle)
        where
            T: cpal::Sample,
        {
            if let Ok(mut guard) = writer.try_lock() {
                if let Some(state) = guard.as_mut() {
                    for frame in output.chunks_mut(channels.into()) {
                        for sample in frame.iter_mut() {
                            *sample =
                                cpal::Sample::from(state.samples.get(state.time).unwrap_or(&0f32));
                        }
                        state.time += 1;
                    }
                    if state.time >= state.samples.len() {
                        for cb in &*state.done_cbs {
                            cb();
                        }
                    }
                    if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                        for cb in &*state.changed_cbs {
                            cb();
                        }
                        state.changed_cbs_triggered_at = state.time;
                    }
                }
            }
        }

        let stream = match config.sample_format() {
            cpal::SampleFormat::F32 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<f32>(data, channels, &state),
                err_fn,
            )?,
            cpal::SampleFormat::I16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<i16>(data, channels, &state),
                err_fn,
            )?,
            cpal::SampleFormat::U16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<u16>(data, channels, &state),
                err_fn,
            )?,
        };

        stream.play()?;

        Ok(PlayHandle {
            _stream: stream,
            state: state_2,
        })
    }
" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 15 (face font-lock-function-name-face fontified nil) 15 16 (face (rainbow-delimiters-depth-2-face) fontified nil) 16 17 (face rust-ampersand-face fontified nil) 17 21 (face font-lock-keyword-face fontified nil) 21 23 (fontified nil) 23 27 (face font-lock-variable-name-face fontified nil) 27 29 (fontified nil) 29 41 (face font-lock-type-face fontified nil) 41 42 (face (rainbow-delimiters-depth-2-face) fontified nil) 42 44 (fontified nil) 44 45 (syntax-table (1) fontified nil) 45 46 (fontified nil) 46 52 (face font-lock-type-face fontified nil) 52 53 (face (rainbow-delimiters-depth-2-face) fontified nil) 53 63 (face font-lock-type-face fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 65 (fontified nil) 65 66 (face (rainbow-delimiters-depth-2-face) fontified nil) 66 75 (fontified nil) 75 78 (face font-lock-keyword-face fontified nil) 78 79 (fontified nil) 79 83 (face font-lock-variable-name-face fontified nil) 83 95 (fontified nil) 95 96 (face (rainbow-delimiters-depth-3-face) fontified nil) 96 97 (face (rainbow-delimiters-depth-3-face) fontified nil) 97 106 (fontified nil) 106 107 (face (rainbow-delimiters-depth-3-face) fontified nil) 107 138 (face font-lock-string-face fontified nil) 138 139 (face (rainbow-delimiters-depth-3-face) fontified nil) 139 140 (face rust-question-mark fontified nil) 140 150 (fontified nil) 150 153 (face font-lock-keyword-face fontified nil) 153 154 (fontified nil) 154 160 (face font-lock-variable-name-face fontified nil) 160 202 (fontified nil) 202 203 (face (rainbow-delimiters-depth-3-face) fontified nil) 203 204 (face (rainbow-delimiters-depth-3-face) fontified nil) 204 228 (fontified nil) 228 229 (face (rainbow-delimiters-depth-3-face) fontified nil) 229 232 (fontified nil) 232 237 (face font-lock-preprocessor-face fontified nil) 237 238 (face (rainbow-delimiters-depth-4-face) fontified nil) 238 256 (face font-lock-string-face fontified nil) 256 257 (face (rainbow-delimiters-depth-4-face) fontified nil) 257 258 (face (rainbow-delimiters-depth-3-face) fontified nil) 258 259 (face rust-question-mark fontified nil) 259 269 (fontified nil) 269 272 (face font-lock-constant-face fontified nil) 272 274 (fontified nil) 274 279 (face font-lock-preprocessor-face fontified nil) 279 280 (face (rainbow-delimiters-depth-3-face) fontified nil) 280 299 (face font-lock-string-face fontified nil) 299 312 (fontified nil) 312 313 (face (rainbow-delimiters-depth-4-face) fontified nil) 313 314 (face (rainbow-delimiters-depth-4-face) fontified nil) 314 315 (face rust-question-mark fontified nil) 315 316 (face (rainbow-delimiters-depth-3-face) fontified nil) 316 326 (fontified nil) 326 329 (face font-lock-keyword-face fontified nil) 329 330 (fontified nil) 330 336 (face font-lock-variable-name-face fontified nil) 336 367 (fontified nil) 367 368 (face (rainbow-delimiters-depth-3-face) fontified nil) 368 369 (face (rainbow-delimiters-depth-3-face) fontified nil) 369 370 (face rust-question-mark fontified nil) 370 381 (fontified nil) 381 384 (face font-lock-constant-face fontified nil) 384 386 (fontified nil) 386 391 (face font-lock-preprocessor-face fontified nil) 391 392 (face (rainbow-delimiters-depth-3-face) fontified nil) 392 411 (face font-lock-string-face fontified nil) 411 412 (face (rainbow-delimiters-depth-3-face) fontified nil) 412 423 (fontified nil) 423 426 (face font-lock-keyword-face fontified nil) 426 427 (fontified nil) 427 438 (face font-lock-variable-name-face fontified nil) 438 459 (fontified nil) 459 460 (face (rainbow-delimiters-depth-3-face) fontified nil) 460 461 (face (rainbow-delimiters-depth-3-face) fontified nil) 461 473 (fontified nil) 473 476 (face font-lock-keyword-face fontified nil) 476 477 (fontified nil) 477 482 (face font-lock-variable-name-face fontified nil) 482 485 (fontified nil) 485 498 (face font-lock-type-face fontified nil) 498 499 (fontified nil) 499 500 (face (rainbow-delimiters-depth-3-face) fontified nil) 500 513 (fontified nil) 513 517 (face font-lock-variable-name-face fontified nil) 517 534 (fontified nil) 534 541 (face font-lock-variable-name-face fontified nil) 541 543 (fontified nil) 543 547 (face font-lock-keyword-face fontified nil) 547 556 (fontified nil) 556 557 (face (rainbow-delimiters-depth-4-face) fontified nil) 557 568 (fontified nil) 568 569 (face (rainbow-delimiters-depth-4-face) fontified nil) 569 591 (fontified nil) 591 599 (face font-lock-variable-name-face fontified nil) 599 601 (fontified nil) 601 605 (face font-lock-preprocessor-face fontified nil) 605 606 (face (rainbow-delimiters-depth-4-face) fontified nil) 606 607 (face (rainbow-delimiters-depth-4-face) fontified nil) 607 621 (fontified nil) 621 632 (face font-lock-variable-name-face fontified nil) 632 634 (fontified nil) 634 638 (face font-lock-preprocessor-face fontified nil) 638 639 (face (rainbow-delimiters-depth-4-face) fontified nil) 639 640 (face (rainbow-delimiters-depth-4-face) fontified nil) 640 654 (fontified nil) 654 678 (face font-lock-variable-name-face fontified nil) 678 695 (fontified nil) 695 706 (face font-lock-variable-name-face fontified nil) 706 720 (fontified nil) 720 722 (face font-lock-keyword-face fontified nil) 722 723 (fontified nil) 723 728 (face font-lock-type-face fontified nil) 728 738 (fontified nil) 738 739 (face (rainbow-delimiters-depth-3-face) fontified nil) 739 749 (fontified nil) 749 752 (face font-lock-keyword-face fontified nil) 752 753 (fontified nil) 753 758 (face font-lock-variable-name-face fontified nil) 758 760 (fontified nil) 760 779 (face font-lock-type-face fontified nil) 779 782 (fontified nil) 782 785 (face font-lock-type-face fontified nil) 785 790 (fontified nil) 790 791 (face (rainbow-delimiters-depth-3-face) fontified nil) 791 796 (face font-lock-type-face fontified nil) 796 801 (fontified nil) 801 802 (face (rainbow-delimiters-depth-4-face) fontified nil) 802 806 (face font-lock-type-face fontified nil) 806 807 (face (rainbow-delimiters-depth-5-face) fontified nil) 807 812 (fontified nil) 812 813 (face (rainbow-delimiters-depth-5-face) fontified nil) 813 814 (face (rainbow-delimiters-depth-4-face) fontified nil) 814 815 (face (rainbow-delimiters-depth-3-face) fontified nil) 815 825 (fontified nil) 825 828 (face font-lock-keyword-face fontified nil) 828 829 (fontified nil) 829 836 (face font-lock-variable-name-face fontified nil) 836 850 (fontified nil) 850 851 (face (rainbow-delimiters-depth-3-face) fontified nil) 851 852 (face (rainbow-delimiters-depth-3-face) fontified nil) 852 862 (fontified nil) 862 865 (face font-lock-keyword-face fontified nil) 865 866 (fontified nil) 866 874 (face font-lock-variable-name-face fontified nil) 874 892 (fontified nil) 892 893 (face (rainbow-delimiters-depth-3-face) fontified nil) 893 894 (face (rainbow-delimiters-depth-3-face) fontified nil) 894 905 (fontified nil) 905 908 (face font-lock-keyword-face fontified nil) 908 909 (fontified nil) 909 915 (face font-lock-variable-name-face fontified nil) 915 918 (fontified nil) 918 922 (face font-lock-keyword-face fontified nil) 922 929 (fontified nil) 929 930 (face (rainbow-delimiters-depth-3-face) fontified nil) 930 943 (fontified nil) 943 946 (face font-lock-constant-face fontified nil) 946 948 (fontified nil) 948 954 (face font-lock-preprocessor-face fontified nil) 954 955 (face (rainbow-delimiters-depth-4-face) fontified nil) 955 988 (face font-lock-string-face fontified nil) 988 993 (fontified nil) 993 994 (face (rainbow-delimiters-depth-4-face) fontified nil) 994 1004 (fontified nil) 1004 1005 (face (rainbow-delimiters-depth-3-face) fontified nil) 1005 1016 (fontified nil) 1016 1018 (face font-lock-keyword-face fontified nil) 1018 1019 (fontified nil) 1019 1036 (face font-lock-function-name-face fontified nil) 1036 1037 (face (rainbow-delimiters-depth-3-face) fontified nil) 1037 1038 (face font-lock-type-face fontified nil) 1038 1039 (face (rainbow-delimiters-depth-3-face) fontified nil) 1039 1040 (face (rainbow-delimiters-depth-3-face) fontified nil) 1040 1046 (face font-lock-variable-name-face fontified nil) 1046 1048 (fontified nil) 1048 1049 (face rust-ampersand-face fontified nil) 1049 1052 (face font-lock-keyword-face fontified nil) 1052 1053 (fontified nil) 1053 1054 (face (rainbow-delimiters-depth-4-face) fontified nil) 1054 1055 (face font-lock-type-face fontified nil) 1055 1056 (face (rainbow-delimiters-depth-4-face) fontified nil) 1056 1058 (fontified nil) 1058 1066 (face font-lock-variable-name-face fontified nil) 1066 1068 (fontified nil) 1068 1071 (face font-lock-type-face fontified nil) 1071 1073 (fontified nil) 1073 1079 (face font-lock-variable-name-face fontified nil) 1079 1081 (fontified nil) 1081 1082 (face rust-ampersand-face fontified nil) 1082 1101 (face font-lock-type-face fontified nil) 1101 1102 (face (rainbow-delimiters-depth-3-face) fontified nil) 1102 1111 (fontified nil) 1111 1116 (face font-lock-keyword-face fontified nil) 1116 1129 (fontified nil) 1129 1130 (face font-lock-variable-name-face fontified nil) 1130 1132 (fontified nil) 1132 1136 (face font-lock-constant-face fontified nil) 1136 1138 (fontified nil) 1138 1144 (face font-lock-type-face fontified nil) 1144 1154 (fontified nil) 1154 1155 (face (rainbow-delimiters-depth-3-face) fontified nil) 1155 1168 (fontified nil) 1168 1170 (face font-lock-keyword-face fontified nil) 1170 1171 (fontified nil) 1171 1174 (face font-lock-keyword-face fontified nil) 1174 1175 (fontified nil) 1175 1177 (face font-lock-type-face fontified nil) 1177 1178 (face (rainbow-delimiters-depth-4-face) fontified nil) 1178 1181 (face font-lock-keyword-face fontified nil) 1181 1187 (fontified nil) 1187 1188 (face (rainbow-delimiters-depth-4-face) fontified nil) 1188 1206 (fontified nil) 1206 1207 (face (rainbow-delimiters-depth-4-face) fontified nil) 1207 1208 (face (rainbow-delimiters-depth-4-face) fontified nil) 1208 1209 (fontified nil) 1209 1210 (face (rainbow-delimiters-depth-4-face) fontified nil) 1210 1227 (fontified nil) 1227 1229 (face font-lock-keyword-face fontified nil) 1229 1230 (fontified nil) 1230 1233 (face font-lock-keyword-face fontified nil) 1233 1234 (fontified nil) 1234 1238 (face font-lock-type-face fontified nil) 1238 1239 (face (rainbow-delimiters-depth-5-face) fontified nil) 1239 1244 (fontified nil) 1244 1245 (face (rainbow-delimiters-depth-5-face) fontified nil) 1245 1260 (fontified nil) 1260 1261 (face (rainbow-delimiters-depth-5-face) fontified nil) 1261 1262 (face (rainbow-delimiters-depth-5-face) fontified nil) 1262 1263 (fontified nil) 1263 1264 (face (rainbow-delimiters-depth-5-face) fontified nil) 1264 1285 (fontified nil) 1285 1288 (face font-lock-keyword-face fontified nil) 1288 1289 (fontified nil) 1289 1294 (face font-lock-variable-name-face fontified nil) 1294 1295 (fontified nil) 1295 1297 (face font-lock-keyword-face fontified nil) 1297 1315 (fontified nil) 1315 1316 (face (rainbow-delimiters-depth-6-face) fontified nil) 1316 1329 (fontified nil) 1329 1330 (face (rainbow-delimiters-depth-7-face) fontified nil) 1330 1331 (face (rainbow-delimiters-depth-7-face) fontified nil) 1331 1332 (face (rainbow-delimiters-depth-6-face) fontified nil) 1332 1333 (fontified nil) 1333 1334 (face (rainbow-delimiters-depth-6-face) fontified nil) 1334 1359 (fontified nil) 1359 1362 (face font-lock-keyword-face fontified nil) 1362 1363 (fontified nil) 1363 1369 (face font-lock-variable-name-face fontified nil) 1369 1370 (fontified nil) 1370 1372 (face font-lock-keyword-face fontified nil) 1372 1387 (fontified nil) 1387 1388 (face (rainbow-delimiters-depth-7-face) fontified nil) 1388 1389 (face (rainbow-delimiters-depth-7-face) fontified nil) 1389 1390 (fontified nil) 1390 1391 (face (rainbow-delimiters-depth-7-face) fontified nil) 1391 1462 (fontified nil) 1462 1466 (face font-lock-constant-face fontified nil) 1466 1468 (fontified nil) 1468 1474 (face font-lock-type-face fontified nil) 1474 1480 (fontified nil) 1480 1481 (face (rainbow-delimiters-depth-8-face) fontified nil) 1481 1496 (fontified nil) 1496 1498 (fontified nil) 1498 1499 (face (rainbow-delimiters-depth-9-face) fontified nil) 1499 1509 (fontified nil) 1509 1510 (face (rainbow-delimiters-depth-9-face) fontified nil) 1510 1520 (fontified nil) 1520 1521 (face (rainbow-delimiters-depth-9-face) fontified nil) 1521 1522 (face rust-ampersand-face fontified nil) 1522 1523 (fontified nil) 1523 1526 (face font-lock-type-face fontified nil) 1526 1527 (face (rainbow-delimiters-depth-9-face) fontified nil) 1527 1528 (face (rainbow-delimiters-depth-8-face) fontified nil) 1528 1530 (fontified nil) 1530 1554 (fontified nil) 1554 1555 (face (rainbow-delimiters-depth-7-face) fontified nil) 1555 1556 (fontified nil) 1556 1597 (fontified nil) 1597 1617 (fontified nil) 1617 1618 (face (rainbow-delimiters-depth-6-face) fontified nil) 1618 1619 (fontified nil) 1619 1639 (fontified nil) 1639 1641 (face font-lock-keyword-face fontified nil) 1641 1653 (fontified nil) 1653 1654 (fontified nil syntax-table (1)) 1654 1673 (fontified nil) 1673 1674 (face (rainbow-delimiters-depth-6-face) fontified nil) 1674 1675 (face (rainbow-delimiters-depth-6-face) fontified nil) 1675 1676 (fontified nil) 1676 1677 (face (rainbow-delimiters-depth-6-face) fontified nil) 1677 1678 (fontified nil) 1678 1702 (fontified nil) 1702 1705 (face font-lock-keyword-face fontified nil) 1705 1706 (fontified nil) 1706 1708 (face font-lock-variable-name-face fontified nil) 1708 1709 (fontified nil) 1709 1711 (face font-lock-keyword-face fontified nil) 1711 1712 (fontified nil) 1712 1713 (face rust-ampersand-face fontified nil) 1713 1729 (fontified nil) 1729 1730 (face (rainbow-delimiters-depth-7-face) fontified nil) 1730 1731 (fontified nil) 1731 1761 (fontified nil) 1761 1762 (face (rainbow-delimiters-depth-8-face) fontified nil) 1762 1763 (face (rainbow-delimiters-depth-8-face) fontified nil) 1763 1765 (fontified nil) 1765 1789 (fontified nil) 1789 1790 (face (rainbow-delimiters-depth-7-face) fontified nil) 1790 1791 (fontified nil) 1791 1811 (fontified nil) 1811 1812 (face (rainbow-delimiters-depth-6-face) fontified nil) 1812 1813 (fontified nil) 1813 1833 (fontified nil) 1833 1835 (face font-lock-keyword-face fontified nil) 1835 1847 (fontified nil) 1847 1848 (fontified nil syntax-table (1)) 1848 1907 (fontified nil) 1907 1908 (face (rainbow-delimiters-depth-6-face) fontified nil) 1908 1909 (fontified nil) 1909 1933 (fontified nil) 1933 1936 (face font-lock-keyword-face fontified nil) 1936 1937 (fontified nil) 1937 1939 (face font-lock-variable-name-face fontified nil) 1939 1940 (fontified nil) 1940 1942 (face font-lock-keyword-face fontified nil) 1942 1943 (fontified nil) 1943 1944 (face rust-ampersand-face fontified nil) 1944 1963 (fontified nil) 1963 1964 (face (rainbow-delimiters-depth-7-face) fontified nil) 1964 1965 (fontified nil) 1965 1995 (fontified nil) 1995 1996 (face (rainbow-delimiters-depth-8-face) fontified nil) 1996 1997 (face (rainbow-delimiters-depth-8-face) fontified nil) 1997 1999 (fontified nil) 1999 2023 (fontified nil) 2023 2024 (face (rainbow-delimiters-depth-7-face) fontified nil) 2024 2025 (fontified nil) 2025 2094 (fontified nil) 2094 2114 (fontified nil) 2114 2115 (face (rainbow-delimiters-depth-6-face) fontified nil) 2115 2116 (fontified nil) 2116 2132 (fontified nil) 2132 2133 (face (rainbow-delimiters-depth-5-face) fontified nil) 2133 2134 (fontified nil) 2134 2146 (fontified nil) 2146 2147 (face (rainbow-delimiters-depth-4-face) fontified nil) 2147 2148 (fontified nil) 2148 2156 (fontified nil) 2156 2157 (face (rainbow-delimiters-depth-3-face) fontified nil) 2157 2158 (fontified nil) 2158 2159 (fontified nil) 2159 2167 (fontified nil) 2167 2170 (face font-lock-keyword-face fontified nil) 2170 2171 (fontified nil) 2171 2177 (face font-lock-variable-name-face fontified nil) 2177 2180 (fontified nil) 2180 2185 (face font-lock-keyword-face fontified nil) 2185 2206 (fontified nil) 2206 2207 (face (rainbow-delimiters-depth-3-face) fontified nil) 2207 2208 (face (rainbow-delimiters-depth-3-face) fontified nil) 2208 2209 (fontified nil) 2209 2210 (face (rainbow-delimiters-depth-3-face) fontified nil) 2210 2211 (fontified nil) 2211 2223 (fontified nil) 2223 2227 (face font-lock-constant-face fontified nil) 2227 2229 (fontified nil) 2229 2241 (face font-lock-type-face fontified nil) 2241 2243 (fontified nil) 2243 2246 (face font-lock-type-face fontified nil) 2246 2248 (fontified nil) 2248 2249 (fontified nil syntax-table (1)) 2249 2276 (fontified nil) 2276 2277 (face (rainbow-delimiters-depth-4-face) fontified nil) 2277 2278 (fontified nil) 2278 2294 (fontified nil) 2294 2295 (face rust-ampersand-face fontified nil) 2295 2306 (fontified nil) 2306 2307 (face (rainbow-delimiters-depth-5-face) fontified nil) 2307 2308 (face (rainbow-delimiters-depth-5-face) fontified nil) 2308 2310 (fontified nil) 2310 2326 (fontified nil) 2326 2330 (face font-lock-keyword-face fontified nil) 2330 2338 (fontified nil) 2338 2339 (face font-lock-variable-name-face fontified nil) 2339 2341 (fontified nil) 2341 2342 (face rust-ampersand-face fontified nil) 2342 2364 (fontified nil) 2364 2365 (face (rainbow-delimiters-depth-5-face) fontified nil) 2365 2368 (face font-lock-type-face fontified nil) 2368 2369 (face (rainbow-delimiters-depth-5-face) fontified nil) 2369 2370 (face (rainbow-delimiters-depth-5-face) fontified nil) 2370 2386 (fontified nil) 2386 2387 (face rust-ampersand-face fontified nil) 2387 2392 (fontified nil) 2392 2393 (face (rainbow-delimiters-depth-5-face) fontified nil) 2393 2395 (fontified nil) 2395 2419 (fontified nil) 2419 2431 (fontified nil) 2431 2432 (face (rainbow-delimiters-depth-4-face) fontified nil) 2432 2433 (face rust-question-mark fontified nil) 2433 2435 (fontified nil) 2435 2447 (fontified nil) 2447 2451 (face font-lock-constant-face fontified nil) 2451 2453 (fontified nil) 2453 2465 (face font-lock-type-face fontified nil) 2465 2467 (fontified nil) 2467 2470 (face font-lock-type-face fontified nil) 2470 2472 (fontified nil) 2472 2473 (fontified nil syntax-table (1)) 2473 2500 (fontified nil) 2500 2501 (face (rainbow-delimiters-depth-4-face) fontified nil) 2501 2518 (fontified nil) 2518 2519 (face rust-ampersand-face fontified nil) 2519 2530 (fontified nil) 2530 2531 (face (rainbow-delimiters-depth-5-face) fontified nil) 2531 2532 (face (rainbow-delimiters-depth-5-face) fontified nil) 2532 2550 (fontified nil) 2550 2554 (face font-lock-keyword-face fontified nil) 2554 2562 (fontified nil) 2562 2563 (face font-lock-variable-name-face fontified nil) 2563 2565 (fontified nil) 2565 2566 (face rust-ampersand-face fontified nil) 2566 2588 (fontified nil) 2588 2589 (face (rainbow-delimiters-depth-5-face) fontified nil) 2589 2592 (face font-lock-type-face fontified nil) 2592 2593 (face (rainbow-delimiters-depth-5-face) fontified nil) 2593 2594 (face (rainbow-delimiters-depth-5-face) fontified nil) 2594 2610 (fontified nil) 2610 2611 (face rust-ampersand-face fontified nil) 2611 2616 (fontified nil) 2616 2617 (face (rainbow-delimiters-depth-5-face) fontified nil) 2617 2655 (fontified nil) 2655 2656 (face (rainbow-delimiters-depth-4-face) fontified nil) 2656 2657 (face rust-question-mark fontified nil) 2657 2671 (fontified nil) 2671 2675 (face font-lock-constant-face fontified nil) 2675 2677 (fontified nil) 2677 2689 (face font-lock-type-face fontified nil) 2689 2691 (fontified nil) 2691 2694 (face font-lock-type-face fontified nil) 2694 2696 (fontified nil) 2696 2697 (fontified nil syntax-table (1)) 2697 2724 (fontified nil) 2724 2725 (face (rainbow-delimiters-depth-4-face) fontified nil) 2725 2742 (fontified nil) 2742 2743 (face rust-ampersand-face fontified nil) 2743 2754 (fontified nil) 2754 2755 (face (rainbow-delimiters-depth-5-face) fontified nil) 2755 2756 (face (rainbow-delimiters-depth-5-face) fontified nil) 2756 2774 (fontified nil) 2774 2778 (face font-lock-keyword-face fontified nil) 2778 2786 (fontified nil) 2786 2787 (face font-lock-variable-name-face fontified nil) 2787 2789 (fontified nil) 2789 2790 (face rust-ampersand-face fontified nil) 2790 2812 (fontified nil) 2812 2813 (face (rainbow-delimiters-depth-5-face) fontified nil) 2813 2816 (face font-lock-type-face fontified nil) 2816 2817 (face (rainbow-delimiters-depth-5-face) fontified nil) 2817 2818 (face (rainbow-delimiters-depth-5-face) fontified nil) 2818 2834 (fontified nil) 2834 2835 (face rust-ampersand-face fontified nil) 2835 2840 (fontified nil) 2840 2841 (face (rainbow-delimiters-depth-5-face) fontified nil) 2841 2879 (fontified nil) 2879 2880 (face (rainbow-delimiters-depth-4-face) fontified nil) 2880 2881 (face rust-question-mark fontified nil) 2881 2891 (fontified nil) 2891 2892 (face (rainbow-delimiters-depth-3-face) fontified nil) 2892 2914 (fontified nil) 2914 2915 (face (rainbow-delimiters-depth-3-face) fontified nil) 2915 2916 (face (rainbow-delimiters-depth-3-face) fontified nil) 2916 2917 (face rust-question-mark fontified nil) 2917 2928 (fontified nil) 2928 2930 (face font-lock-type-face fontified nil) 2930 2931 (face (rainbow-delimiters-depth-3-face) fontified nil) 2931 2941 (face font-lock-type-face fontified nil) 2941 2942 (fontified nil) 2942 2943 (face (rainbow-delimiters-depth-4-face) fontified nil) 2943 2956 (fontified nil) 2956 2963 (face font-lock-variable-name-face fontified nil) 2963 2985 (fontified nil) 2985 2990 (face font-lock-variable-name-face fontified nil) 2990 3009 (fontified nil) 3009 3010 (face (rainbow-delimiters-depth-4-face) fontified nil) 3010 3011 (face (rainbow-delimiters-depth-3-face) fontified nil) 3011 3012 (fontified nil) 3012 3016 (fontified nil) 3016 3017 (face (rainbow-delimiters-depth-2-face) fontified nil) 3017 3018 (fontified nil rear-nonsticky nil)) . 1544) (undo-tree-id413 . -261) (undo-tree-id414 . -168) (undo-tree-id415 . -29) (undo-tree-id416 . -41) (undo-tree-id417 . -53) (undo-tree-id418 . -63) (undo-tree-id419 . -485) (undo-tree-id420 . -498) (undo-tree-id421 . -760) (undo-tree-id422 . -779) (undo-tree-id423 . -1082) (undo-tree-id424 . -1101) (undo-tree-id425 . -2386) (undo-tree-id426 . -2392) (undo-tree-id427 . -2610) (undo-tree-id428 . -2616) (undo-tree-id429 . -2834) (undo-tree-id430 . -2840) (undo-tree-id431 . -2931) (undo-tree-id432 . -2941) (undo-tree-id433 . -1642) (undo-tree-id434 . -1647) (undo-tree-id435 . -522) (undo-tree-id436 . -11) (undo-tree-id437 . -1019) (nil fontified t 4555 . 4556) (nil fontified t 4554 . 4555) (nil fontified t 4553 . 4554) (nil fontified t 4534 . 4553) (nil fontified t 4529 . 4534) (nil fontified t 4507 . 4529) (nil fontified t 4500 . 4507) (nil fontified t 4487 . 4500) (nil fontified t 4486 . 4487) (nil fontified t 4485 . 4486) (nil fontified t 4475 . 4485) (nil fontified t 4474 . 4475) (nil fontified t 4472 . 4474) (nil fontified t 4461 . 4472) (nil fontified t 4460 . 4461) (nil fontified t 4459 . 4460) (nil fontified t 4458 . 4459) (nil fontified t 4436 . 4458) (nil fontified t 4435 . 4436) (nil fontified t 4425 . 4435) (nil fontified t 4424 . 4425) (nil fontified t 4423 . 4424) (nil fontified t 4385 . 4423) (nil fontified t 4384 . 4385) (nil fontified t 4379 . 4384) (nil fontified t 4378 . 4379) (nil fontified t 4362 . 4378) (nil fontified t 4361 . 4362) (nil fontified t 4360 . 4361) (nil fontified t 4357 . 4360) (nil fontified t 4356 . 4357) (nil fontified t 4334 . 4356) (nil fontified t 4333 . 4334) (nil fontified t 4331 . 4333) (nil fontified t 4330 . 4331) (nil fontified t 4322 . 4330) (nil fontified t 4318 . 4322) (nil fontified t 4300 . 4318) (nil fontified t 4299 . 4300) (nil fontified t 4298 . 4299) (nil fontified t 4287 . 4298) (nil fontified t 4286 . 4287) (nil fontified t 4269 . 4286) (nil fontified t 4268 . 4269) (nil fontified t 4241 . 4268) (nil fontified t 4240 . 4241) (nil fontified t 4238 . 4240) (nil fontified t 4235 . 4238) (nil fontified t 4233 . 4235) (nil fontified t 4221 . 4233) (nil fontified t 4219 . 4221) (nil fontified t 4215 . 4219) (nil fontified t 4201 . 4215) (nil fontified t 4200 . 4201) (nil fontified t 4199 . 4200) (nil fontified t 4161 . 4199) (nil fontified t 4160 . 4161) (nil fontified t 4155 . 4160) (nil fontified t 4154 . 4155) (nil fontified t 4138 . 4154) (nil fontified t 4137 . 4138) (nil fontified t 4136 . 4137) (nil fontified t 4133 . 4136) (nil fontified t 4132 . 4133) (nil fontified t 4110 . 4132) (nil fontified t 4109 . 4110) (nil fontified t 4107 . 4109) (nil fontified t 4106 . 4107) (nil fontified t 4098 . 4106) (nil fontified t 4094 . 4098) (nil fontified t 4076 . 4094) (nil fontified t 4075 . 4076) (nil fontified t 4074 . 4075) (nil fontified t 4063 . 4074) (nil fontified t 4062 . 4063) (nil fontified t 4045 . 4062) (nil fontified t 4044 . 4045) (nil fontified t 4017 . 4044) (nil fontified t 4016 . 4017) (nil fontified t 4014 . 4016) (nil fontified t 4011 . 4014) (nil fontified t 4009 . 4011) (nil fontified t 3997 . 4009) (nil fontified t 3995 . 3997) (nil fontified t 3991 . 3995) (nil fontified t 3979 . 3991) (nil fontified t 3977 . 3979) (nil fontified t 3976 . 3977) (nil fontified t 3975 . 3976) (nil fontified t 3963 . 3975) (nil fontified t 3939 . 3963) (nil fontified t 3937 . 3939) (nil fontified t 3936 . 3937) (nil fontified t 3931 . 3936) (nil fontified t 3930 . 3931) (nil fontified t 3914 . 3930) (nil fontified t 3913 . 3914) (nil fontified t 3912 . 3913) (nil fontified t 3909 . 3912) (nil fontified t 3908 . 3909) (nil fontified t 3886 . 3908) (nil fontified t 3885 . 3886) (nil fontified t 3883 . 3885) (nil fontified t 3882 . 3883) (nil fontified t 3874 . 3882) (nil fontified t 3870 . 3874) (nil fontified t 3854 . 3870) (nil fontified t 3852 . 3854) (nil fontified t 3851 . 3852) (nil fontified t 3850 . 3851) (nil fontified t 3839 . 3850) (nil fontified t 3838 . 3839) (nil fontified t 3822 . 3838) (nil fontified t 3821 . 3822) (nil fontified t 3820 . 3821) (nil fontified t 3793 . 3820) (nil fontified t 3792 . 3793) (nil fontified t 3790 . 3792) (nil fontified t 3787 . 3790) (nil fontified t 3785 . 3787) (nil fontified t 3773 . 3785) (nil fontified t 3771 . 3773) (nil fontified t 3767 . 3771) (nil fontified t 3755 . 3767) (nil fontified t 3754 . 3755) (nil fontified t 3753 . 3754) (nil fontified t 3752 . 3753) (nil fontified t 3751 . 3752) (nil fontified t 3750 . 3751) (nil fontified t 3729 . 3750) (nil fontified t 3724 . 3729) (nil fontified t 3721 . 3724) (nil fontified t 3715 . 3721) (nil fontified t 3714 . 3715) (nil fontified t 3711 . 3714) (nil fontified t 3703 . 3711) (nil fontified t 3702 . 3703) (nil fontified t 3701 . 3702) (nil fontified t 3700 . 3701) (nil fontified t 3692 . 3700) (nil fontified t 3691 . 3692) (nil fontified t 3690 . 3691) (nil fontified t 3678 . 3690) (nil fontified t 3677 . 3678) (nil fontified t 3676 . 3677) (nil fontified t 3660 . 3676) (nil fontified t 3659 . 3660) (nil fontified t 3658 . 3659) (nil fontified t 3638 . 3658) (nil fontified t 3569 . 3638) (nil fontified t 3568 . 3569) (nil fontified t 3567 . 3568) (nil fontified t 3543 . 3567) (nil fontified t 3541 . 3543) (nil fontified t 3540 . 3541) (nil fontified t 3539 . 3540) (nil fontified t 3509 . 3539) (nil fontified t 3508 . 3509) (nil fontified t 3507 . 3508) (nil fontified t 3488 . 3507) (nil fontified t 3487 . 3488) (nil fontified t 3486 . 3487) (nil fontified t 3484 . 3486) (nil fontified t 3483 . 3484) (nil fontified t 3481 . 3483) (nil fontified t 3480 . 3481) (nil fontified t 3477 . 3480) (nil fontified t 3453 . 3477) (nil fontified t 3452 . 3453) (nil fontified t 3451 . 3452) (nil fontified t 3392 . 3451) (nil fontified t 3391 . 3392) (nil fontified t 3379 . 3391) (nil fontified t 3377 . 3379) (nil fontified t 3357 . 3377) (nil fontified t 3356 . 3357) (nil fontified t 3355 . 3356) (nil fontified t 3335 . 3355) (nil fontified t 3334 . 3335) (nil fontified t 3333 . 3334) (nil fontified t 3309 . 3333) (nil fontified t 3307 . 3309) (nil fontified t 3306 . 3307) (nil fontified t 3305 . 3306) (nil fontified t 3275 . 3305) (nil fontified t 3274 . 3275) (nil fontified t 3273 . 3274) (nil fontified t 3257 . 3273) (nil fontified t 3256 . 3257) (nil fontified t 3255 . 3256) (nil fontified t 3253 . 3255) (nil fontified t 3252 . 3253) (nil fontified t 3250 . 3252) (nil fontified t 3249 . 3250) (nil fontified t 3246 . 3249) (nil fontified t 3222 . 3246) (nil fontified t 3221 . 3222) (nil fontified t 3220 . 3221) (nil fontified t 3219 . 3220) (nil fontified t 3218 . 3219) (nil fontified t 3217 . 3218) (nil fontified t 3198 . 3217) (nil fontified t 3197 . 3198) (nil fontified t 3185 . 3197) (nil fontified t 3183 . 3185) (nil fontified t 3163 . 3183) (nil fontified t 3162 . 3163) (nil fontified t 3161 . 3162) (nil fontified t 3141 . 3161) (nil fontified t 3100 . 3141) (nil fontified t 3099 . 3100) (nil fontified t 3098 . 3099) (nil fontified t 3074 . 3098) (nil fontified t 3072 . 3074) (nil fontified t 3071 . 3072) (nil fontified t 3070 . 3071) (nil fontified t 3067 . 3070) (nil fontified t 3066 . 3067) (nil fontified t 3065 . 3066) (nil fontified t 3064 . 3065) (nil fontified t 3054 . 3064) (nil fontified t 3053 . 3054) (nil fontified t 3043 . 3053) (nil fontified t 3042 . 3043) (nil fontified t 3040 . 3042) (nil fontified t 3025 . 3040) (nil fontified t 3024 . 3025) (nil fontified t 3018 . 3024) (nil fontified t 3012 . 3018) (nil fontified t 3010 . 3012) (nil fontified t 3006 . 3010) (nil fontified t 2935 . 3006) (nil fontified t 2934 . 2935) (nil fontified t 2933 . 2934) (nil fontified t 2932 . 2933) (nil fontified t 2931 . 2932) (nil fontified t 2916 . 2931) (nil fontified t 2914 . 2916) (nil fontified t 2913 . 2914) (nil fontified t 2907 . 2913) (nil fontified t 2906 . 2907) (nil fontified t 2903 . 2906) (nil fontified t 2878 . 2903) (nil fontified t 2877 . 2878) (nil fontified t 2876 . 2877) (nil fontified t 2875 . 2876) (nil fontified t 2874 . 2875) (nil fontified t 2873 . 2874) (nil fontified t 2860 . 2873) (nil fontified t 2859 . 2860) (nil fontified t 2841 . 2859) (nil fontified t 2839 . 2841) (nil fontified t 2838 . 2839) (nil fontified t 2833 . 2838) (nil fontified t 2832 . 2833) (nil fontified t 2829 . 2832) (nil fontified t 2808 . 2829) (nil fontified t 2807 . 2808) (nil fontified t 2806 . 2807) (nil fontified t 2805 . 2806) (nil fontified t 2804 . 2805) (nil fontified t 2789 . 2804) (nil fontified t 2788 . 2789) (nil fontified t 2783 . 2788) (nil fontified t 2782 . 2783) (nil fontified t 2778 . 2782) (nil fontified t 2777 . 2778) (nil fontified t 2774 . 2777) (nil fontified t 2773 . 2774) (nil fontified t 2771 . 2773) (nil fontified t 2754 . 2771) (nil fontified t 2753 . 2754) (nil fontified t 2752 . 2753) (nil fontified t 2751 . 2752) (nil fontified t 2750 . 2751) (nil fontified t 2732 . 2750) (nil fontified t 2731 . 2732) (nil fontified t 2725 . 2731) (nil fontified t 2722 . 2725) (nil fontified t 2721 . 2722) (nil fontified t 2719 . 2721) (nil fontified t 2718 . 2719) (nil fontified t 2715 . 2718) (nil fontified t 2714 . 2715) (nil fontified t 2712 . 2714) (nil fontified t 2699 . 2712) (nil fontified t 2698 . 2699) (nil fontified t 2688 . 2698) (nil fontified t 2682 . 2688) (nil fontified t 2680 . 2682) (nil fontified t 2676 . 2680) (nil fontified t 2674 . 2676) (nil fontified t 2673 . 2674) (nil fontified t 2660 . 2673) (nil fontified t 2655 . 2660) (nil fontified t 2646 . 2655) (nil fontified t 2645 . 2646) (nil fontified t 2626 . 2645) (nil fontified t 2625 . 2626) (nil fontified t 2623 . 2625) (nil fontified t 2617 . 2623) (nil fontified t 2615 . 2617) (nil fontified t 2612 . 2615) (nil fontified t 2610 . 2612) (nil fontified t 2602 . 2610) (nil fontified t 2600 . 2602) (nil fontified t 2599 . 2600) (nil fontified t 2598 . 2599) (nil fontified t 2597 . 2598) (nil fontified t 2596 . 2597) (nil fontified t 2593 . 2596) (nil fontified t 2592 . 2593) (nil fontified t 2590 . 2592) (nil fontified t 2584 . 2590) (nil fontified t 2583 . 2584) (nil fontified t 2582 . 2583) (nil fontified t 2581 . 2582) (nil fontified t 2580 . 2581) (nil fontified t 2563 . 2580) (nil fontified t 2562 . 2563) (nil fontified t 2560 . 2562) (nil fontified t 2549 . 2560) (nil fontified t 2548 . 2549) (nil fontified t 2538 . 2548) (nil fontified t 2537 . 2538) (nil fontified t 2532 . 2537) (nil fontified t 2499 . 2532) (nil fontified t 2498 . 2499) (nil fontified t 2492 . 2498) (nil fontified t 2490 . 2492) (nil fontified t 2487 . 2490) (nil fontified t 2474 . 2487) (nil fontified t 2473 . 2474) (nil fontified t 2466 . 2473) (nil fontified t 2462 . 2466) (nil fontified t 2459 . 2462) (nil fontified t 2453 . 2459) (nil fontified t 2452 . 2453) (nil fontified t 2449 . 2452) (nil fontified t 2438 . 2449) (nil fontified t 2437 . 2438) (nil fontified t 2436 . 2437) (nil fontified t 2418 . 2436) (nil fontified t 2410 . 2418) (nil fontified t 2409 . 2410) (nil fontified t 2406 . 2409) (nil fontified t 2396 . 2406) (nil fontified t 2395 . 2396) (nil fontified t 2394 . 2395) (nil fontified t 2380 . 2394) (nil fontified t 2373 . 2380) (nil fontified t 2372 . 2373) (nil fontified t 2369 . 2372) (nil fontified t 2359 . 2369) (nil fontified t 2358 . 2359) (nil fontified t 2357 . 2358) (nil fontified t 2356 . 2357) (nil fontified t 2351 . 2356) (nil fontified t 2350 . 2351) (nil fontified t 2346 . 2350) (nil fontified t 2345 . 2346) (nil fontified t 2340 . 2345) (nil fontified t 2335 . 2340) (nil fontified t 2334 . 2335) (nil fontified t 2329 . 2334) (nil fontified t 2326 . 2329) (nil fontified t 2323 . 2326) (nil fontified t 2304 . 2323) (nil fontified t 2302 . 2304) (nil fontified t 2297 . 2302) (nil fontified t 2296 . 2297) (nil fontified t 2293 . 2296) (nil fontified t 2283 . 2293) (nil fontified t 2282 . 2283) (nil fontified t 2272 . 2282) (nil fontified t 2267 . 2272) (nil fontified t 2266 . 2267) (nil fontified t 2264 . 2266) (nil fontified t 2250 . 2264) (nil fontified t 2239 . 2250) (nil fontified t 2222 . 2239) (nil fontified t 2198 . 2222) (nil fontified t 2184 . 2198) (nil fontified t 2183 . 2184) (nil fontified t 2182 . 2183) (nil fontified t 2178 . 2182) (nil fontified t 2176 . 2178) (nil fontified t 2165 . 2176) (nil fontified t 2151 . 2165) (nil fontified t 2150 . 2151) (nil fontified t 2149 . 2150) (nil fontified t 2145 . 2149) (nil fontified t 2143 . 2145) (nil fontified t 2135 . 2143) (nil fontified t 2113 . 2135) (nil fontified t 2112 . 2113) (nil fontified t 2101 . 2112) (nil fontified t 2100 . 2101) (nil fontified t 2091 . 2100) (nil fontified t 2087 . 2091) (nil fontified t 2085 . 2087) (nil fontified t 2078 . 2085) (nil fontified t 2061 . 2078) (nil fontified t 2057 . 2061) (nil fontified t 2044 . 2057) (nil fontified t 2043 . 2044) (nil fontified t 2042 . 2043) (nil fontified t 2029 . 2042) (nil fontified t 2026 . 2029) (nil fontified t 2021 . 2026) (nil fontified t 2020 . 2021) (nil fontified t 2017 . 2020) (nil fontified t 2005 . 2017) (nil fontified t 2004 . 2005) (nil fontified t 2003 . 2004) (nil fontified t 1982 . 2003) (nil fontified t 1971 . 1982) (nil fontified t 1970 . 1971) (nil fontified t 1967 . 1970) (nil fontified t 1956 . 1967) (nil fontified t 1955 . 1956) (nil fontified t 1936 . 1955) (nil fontified t 1935 . 1936) (nil fontified t 1930 . 1935) (nil fontified t 1928 . 1930) (nil fontified t 1925 . 1928) (nil fontified t 1914 . 1925) (nil fontified t 1913 . 1914) (nil fontified t 1912 . 1913) (nil fontified t 1911 . 1912) (nil fontified t 1880 . 1911) (nil fontified t 1874 . 1880) (nil fontified t 1873 . 1874) (nil fontified t 1870 . 1873) (nil fontified t 1860 . 1870) (nil fontified t 1859 . 1860) (nil fontified t 1858 . 1859) (nil fontified t 1857 . 1858) (nil fontified t 1856 . 1857) (nil fontified t 1843 . 1856) (nil fontified t 1824 . 1843) (nil fontified t 1823 . 1824) (nil fontified t 1818 . 1823) (nil fontified t 1816 . 1818) (nil fontified t 1813 . 1816) (nil fontified t 1803 . 1813) (nil fontified t 1802 . 1803) (nil fontified t 1801 . 1802) (nil fontified t 1800 . 1801) (nil fontified t 1782 . 1800) (nil fontified t 1781 . 1782) (nil fontified t 1776 . 1781) (nil fontified t 1773 . 1776) (nil fontified t 1772 . 1773) (nil fontified t 1748 . 1772) (nil fontified t 1747 . 1748) (nil fontified t 1746 . 1747) (nil fontified t 1704 . 1746) (nil fontified t 1698 . 1704) (nil fontified t 1697 . 1698) (nil fontified t 1694 . 1697) (nil fontified t 1684 . 1694) (nil fontified t 1683 . 1684) (nil fontified t 1682 . 1683) (nil fontified t 1651 . 1682) (nil fontified t 1650 . 1651) (nil fontified t 1641 . 1650) (nil fontified t 1640 . 1641) (nil fontified t 1639 . 1640) (nil fontified t 1627 . 1639) (nil fontified t 1623 . 1627) (nil fontified t 1622 . 1623) (nil fontified t 1619 . 1622) (nil fontified t 1610 . 1619) (nil fontified t 1609 . 1610) (nil fontified t 1608 . 1609) (nil fontified t 1607 . 1608) (nil fontified t 1597 . 1607) (nil fontified t 1596 . 1597) (nil fontified t 1590 . 1596) (nil fontified t 1589 . 1590) (nil fontified t 1588 . 1589) (nil fontified t 1586 . 1588) (nil fontified t 1585 . 1586) (nil fontified t 1573 . 1585) (nil fontified t 1571 . 1573) (nil fontified t 1567 . 1571) (nil fontified t 1565 . 1567) (nil fontified t 1561 . 1565) (nil fontified t 1560 . 1561) (nil fontified t 1559 . 1560) (nil fontified t 1555 . 1559) (nil fontified t 1554 . 1555) (nil fontified t 1552 . 1554) (nil fontified t 1551 . 1552) (nil fontified t 1548 . 1551) (nil fontified t 1544 . 1548) (nil rear-nonsticky t 4561 . 4562) (t 25364 40261 467693 942000)) (25364 40261 451391 355000) 0 nil])
([nil nil ((#("id: None," 0 2 (face font-lock-variable-name-face fontified t) 2 4 (fontified t) 4 8 (face font-lock-type-face fontified t) 8 9 (fontified t)) . 3390) (undo-tree-id442 . -9) (undo-tree-id443 . -8) (undo-tree-id444 . -2) (undo-tree-id445 . -9) (t 25364 40275 487694 803000)) nil (25364 40283 158055 300000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 3390) (undo-tree-id441 . -1)) nil (25364 40283 158050 873000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3390)) nil (25364 40283 158048 646000) 0 nil])
([nil nil ((#("date: DateTime::<Utc>::from(creation_time)," 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t) 6 14 (face font-lock-type-face fontified t) 14 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) fontified t) 17 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) fontified t) 21 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-4-face) fontified t) 28 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t) 42 43 (fontified t)) . 3408) (undo-tree-id439 . -42) (undo-tree-id440 . -43)) nil (25364 40283 158047 260000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3408) (undo-tree-id438 . -1)) nil (25364 40283 158043 302000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3408)) nil (25364 40283 158033 986000) 0 nil])
([nil nil ((#("Result" 0 6 (face font-lock-type-face fontified t)) . -600) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) 606 (t 25364 40283 204361 943000)) nil (25364 40312 864601 23000) 0 nil])
([nil nil ((600 . 601)) nil (25364 40312 864595 893000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -600) (undo-tree-id450 . -1) 601) nil (25364 40312 864594 700000) 0 nil])
([nil nil ((600 . 603)) nil (25364 40312 864592 127000) 0 nil])
([nil nil ((600 . 606) (#("Res" 0 3 (fontified nil)) . 600) (600 . 603) (#("Result" 0 6 (face font-lock-type-face fontified t)) . -600) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (600 . 606) (#("Res" 0 3 (face font-lock-type-face fontified t)) . -600) (undo-tree-id448 . -3) (undo-tree-id449 . -3) 603) nil (25364 40312 864587 128000) 0 nil])
([nil nil ((#("use anyhow::Result;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-constant-face fontified t) 10 12 (fontified t) 12 18 (face font-lock-type-face fontified t) 18 19 (fontified t)) . 135) (undo-tree-id458 . -19) (undo-tree-id459 . -4) (undo-tree-id460 . -18) (undo-tree-id461 . -19) (t 25364 40312 911030 434000)) nil (25364 40319 468761 425000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 135) (undo-tree-id456 . -1) (undo-tree-id457 . -1)) nil (25364 40319 468754 25000) 0 nil])
([nil nil ((1797 . 1799) (t 25364 40319 484364 171000)) nil (25364 40336 19322 368000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1524) 1537 (t 25364 40336 37698 520000)) nil (25364 40369 461836 369000) 0 nil])
([nil nil ((6661 . 6665) (#("    " 0 4 (fontified nil)) . 6660) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (6664 . 6665) (t 25364 40369 477700 573000)) nil (25364 40391 591998 646000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10260 . 10261) (nil fontified nil 6665 . 10261) (6665 . 10261)) nil (25364 40391 591982 227000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6665) (undo-tree-id466 . -4) 6672 (t 25364 40391 641035 267000)) nil (25364 40393 317215 192000) 0 nil])
([nil nil ((#("AudioBackend" 0 12 (face font-lock-type-face fontified t)) . -6690) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) 6702 (t 25364 40393 334368 704000)) nil (25364 40399 92895 271000) 0 nil])
([nil nil ((#("host: " 0 4 (face font-lock-variable-name-face fontified t) 4 6 (fontified t)) . -6684) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) 6690) nil (25364 40399 92890 474000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6682) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -6683) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) 6684) nil (25364 40399 92882 155000) 0 nil])
([nil nil ((#("host\")?;" 0 5 (face font-lock-string-face fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (face rust-question-mark fontified t) 7 8 (fontified t)) . -6774) (undo-tree-id534 . -8) (undo-tree-id535 . -8) 6782 (t 25364 40399 107702 392000)) nil (25364 40418 517732 636000) 0 nil])
([nil nil ((#("specified " 0 10 (face font-lock-string-face fontified t)) . -6764) (undo-tree-id532 . -10) (undo-tree-id533 . -10) 6774) nil (25364 40418 517729 950000) 0 nil])
([nil nil ((#("open " 0 5 (face font-lock-string-face fontified t)) . -6759) (undo-tree-id530 . -5) (undo-tree-id531 . -5) 6764) nil (25364 40418 517727 502000) 0 nil])
([nil nil ((#("not " 0 4 (face font-lock-string-face fontified t)) . -6755) (undo-tree-id528 . -4) (undo-tree-id529 . -4) 6759) nil (25364 40418 517724 955000) 0 nil])
([nil nil ((#("Could " 0 6 (face font-lock-string-face fontified t)) . -6749) (undo-tree-id526 . -6) (undo-tree-id527 . -6) 6755) nil (25364 40418 517722 504000) 0 nil])
([nil nil ((#("err(\"" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 5 (face font-lock-string-face fontified t)) . -6744) (undo-tree-id524 . -5) (undo-tree-id525 . -5) 6749) nil (25364 40418 517720 130000) 0 nil])
([nil nil ((#("wrap_" 0 5 (fontified t)) . -6739) (undo-tree-id522 . -5) (undo-tree-id523 . -5) 6744) nil (25364 40418 517717 633000) 0 nil])
([nil nil ((#("host()." 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 7 (fontified t)) . -6732) (undo-tree-id520 . -7) (undo-tree-id521 . -7) 6739) nil (25364 40418 517714 883000) 0 nil])
([nil nil ((6732 . 6734)) nil (25364 40418 517712 592000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -6727) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("o" 0 1 (fontified t)) . -6728) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("s" 0 1 (fontified t)) . -6729) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("t" 0 1 (fontified t)) . -6730) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("." 0 1 (fontified t)) . -6731) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("d" 0 1 (fontified t)) . -6732) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("e" 0 1 (fontified t)) . -6733) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 6734) nil (25364 40418 517709 229000) 0 nil])
([nil nil ((6727 . 6731)) nil (25364 40418 517665 226000) 0 nil])
([nil nil ((75 . 76) (75 . 76) (75 . 87) (6727 . 6727) (6727 . 6739) (#("host" 0 3 (fontified nil) 3 4 (fontified nil)) . 6727) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . 1) (6727 . 6730) (#("default_host (use cpal::default_host)" 0 37 (fontified nil)) . -6727) (6727 . 6764) (#("hos" 0 3 (fontified t)) . -6727) (undo-tree-id491 . -3) 6730) nil (25364 40418 517663 263000) 0 nil])
([nil nil ((6753 . 6755)) nil (25364 40418 517656 307000) 0 nil])
([nil nil ((6755 . 6756)) nil (25364 40418 517655 485000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -6755) (undo-tree-id486 . -1) 6756) nil (25364 40418 517653 534000) 0 nil])
([nil nil ((6755 . 6756)) nil (25364 40503 141705 48000) 0 nil])
([nil nil ((#("PlayHandle" 0 10 (face font-lock-type-face fontified t)) . -6708) (undo-tree-id550 . -10) (undo-tree-id551 . -10) (undo-tree-id552 . -10) 6718 (t 25364 40504 587708 867000)) nil (25364 40538 795372 795000) 0 nil] [nil nil ((#("PlayHandle" 0 10 (face font-lock-type-face fontified t)) . -6708) (undo-tree-id536 . -10) (undo-tree-id537 . -10) (undo-tree-id538 . -10) (undo-tree-id539 . -10) 6718 (t 25364 40418 564370 253000)) ((6708 . 6718)) (25364 40502 787603 498000) 0 nil])
([nil nil ((6708 . 6710)) nil (25364 40538 795360 94000) 0 nil])
([nil nil ((6708 . 6710)) ((#("()" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t) 1 2 (face (rainbow-delimiters-depth-3-face) fontified t)) . 6708) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -1) (undo-tree-id543 . 1) (undo-tree-id544 . -1) (undo-tree-id545 . 1) (undo-tree-id546 . -2) (undo-tree-id547 . 2) (undo-tree-id548 . -1) (undo-tree-id549 . -2) (t 25364 40497 311041 754000)) (25364 40497 292941 801000) 0 nil])
([nil nil ((#("        let state = PlaybackState {
            time: 0,
            samples: self.resample(sample_rate).samples,
            done_cbs: vec![],
            changed_cbs: vec![],
            changed_cbs_triggered_at: 0,
            sample_rate: sample_rate as usize,
        };" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 17 (face font-lock-variable-name-face fontified t) 17 20 (fontified t) 20 33 (face font-lock-type-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 48 (fontified t) 48 52 (face font-lock-variable-name-face fontified t) 52 69 (fontified t) 69 76 (face font-lock-variable-name-face fontified t) 76 78 (fontified t) 78 82 (face font-lock-keyword-face fontified t) 82 91 (fontified t) 91 92 (face (rainbow-delimiters-depth-4-face) fontified t) 92 103 (fontified t) 103 104 (face (rainbow-delimiters-depth-4-face) fontified t) 104 126 (fontified t) 126 134 (face font-lock-variable-name-face fontified t) 134 136 (fontified t) 136 140 (face font-lock-preprocessor-face fontified t) 140 141 (face (rainbow-delimiters-depth-4-face) fontified t) 141 142 (face (rainbow-delimiters-depth-4-face) fontified t) 142 156 (fontified t) 156 167 (face font-lock-variable-name-face fontified t) 167 169 (fontified t) 169 173 (face font-lock-preprocessor-face fontified t) 173 174 (face (rainbow-delimiters-depth-4-face) fontified t) 174 175 (face (rainbow-delimiters-depth-4-face) fontified t) 175 189 (fontified t) 189 213 (face font-lock-variable-name-face fontified t) 213 230 (fontified t) 230 241 (face font-lock-variable-name-face fontified t) 241 255 (fontified t) 255 257 (face font-lock-keyword-face fontified t) 257 258 (fontified t) 258 263 (face font-lock-type-face fontified t) 263 273 (fontified t) 273 274 (face (rainbow-delimiters-depth-3-face) fontified t) 274 275 (fontified t)) . 7072) (undo-tree-id553 . -275) (undo-tree-id554 . -20) (undo-tree-id555 . -33) (undo-tree-id556 . -275) (undo-tree-id557 . -275) (t 25364 40538 814377 634000)) nil (25364 40546 307116 59000) 0 nil])
nil
([nil nil ((#(" let state: PlaybackStateHandle = Arc::new(Mutex::new(Some(state)));" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 10 (face font-lock-variable-name-face fontified t) 10 12 (fontified t) 12 31 (face font-lock-type-face fontified t) 31 34 (fontified t) 34 37 (face font-lock-type-face fontified t) 37 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-3-face) fontified t) 43 48 (face font-lock-type-face fontified t) 48 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-4-face) fontified t) 54 58 (face font-lock-type-face fontified t) 58 59 (face (rainbow-delimiters-depth-5-face) fontified t) 59 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-5-face) fontified t) 65 66 (face (rainbow-delimiters-depth-4-face) fontified t) 66 67 (face (rainbow-delimiters-depth-3-face) fontified t) 67 68 (fontified t)) . 7080) (undo-tree-id561 . -12) (undo-tree-id562 . -31) (undo-tree-id563 . -59) (undo-tree-id564 . -64) (undo-tree-id565 . -68) (t 25364 40546 324378 95000)) nil (25364 40550 843882 905000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7080) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1)) nil (25364 40550 843875 578000) 0 nil])
([nil nil ((#("       " 0 7 (fontified t)) . -7081) 7080) nil (25364 40550 843862 322000) 0 nil])
([nil nil ((#("let state_2 = state.clone();" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) fontified t) 26 27 (face (rainbow-delimiters-depth-3-face) fontified t) 27 28 (fontified t)) . 7081) (undo-tree-id567 . -14) (undo-tree-id568 . -19) (undo-tree-id569 . -28) (t 25364 40550 861045 40000)) nil (25364 40554 530874 498000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7081) (undo-tree-id566 . -1)) nil (25364 40554 530870 71000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -7081)) nil (25364 40554 530859 776000) 0 nil])
([nil nil ((#("PlaybackStateHandle" 0 19 (face font-lock-type-face fontified t)) . -7301) (undo-tree-id578 . -19) (undo-tree-id579 . -19) (undo-tree-id580 . -19) 7320 (t 25364 40554 547711 934000)) nil (25364 40571 73495 574000) 0 nil])
([nil nil ((#("writer: &" 0 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t) 8 9 (fontified t)) . -7292) (undo-tree-id574 . -9) (undo-tree-id575 . -9) (undo-tree-id576 . -9) (undo-tree-id577 . -9) 7301) nil (25364 40571 73491 269000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -7290) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#(" " 0 1 (fontified t)) . -7291) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 7292) nil (25364 40571 73483 151000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -8335) (undo-tree-id590 . -1) (undo-tree-id591 . 1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 8336 (t 25364 40571 91046 283000)) nil (25364 40591 773628 520000) 0 nil])
([nil nil ((#("if let Ok(mut guard) = writer.try_lock() {" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 9 (face font-lock-type-face fontified t) 9 10 (face (rainbow-delimiters-depth-4-face) fontified t) 10 13 (face font-lock-keyword-face fontified t) 13 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-4-face) fontified t) 20 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-4-face) fontified t) 39 40 (face (rainbow-delimiters-depth-4-face) fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-4-face) fontified t)) . 7357) (undo-tree-id582 . -29) (undo-tree-id583 . -42) (undo-tree-id584 . -42) (undo-tree-id585 . -41) (undo-tree-id586 . -23) (undo-tree-id587 . -29) (undo-tree-id588 . -42) (undo-tree-id589 . -42)) nil (25364 40591 773623 805000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7357) (undo-tree-id581 . -1)) nil (25364 40591 773616 930000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -7357)) nil (25364 40591 773610 879000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8186) (#("    " 0 4 (fontified t)) . -8172) (#("    " 0 4 (fontified t)) . -8111) (#("    " 0 4 (fontified t)) . -8089) (#("    " 0 4 (fontified t)) . -8063) (#("    " 0 4 (fontified t)) . -8007) (#("    " 0 4 (fontified t)) . -7911) (#("    " 0 4 (fontified t)) . -7893) (#("    " 0 4 (fontified t)) . -7875) (#("    " 0 4 (fontified t)) . -7849) (#("    " 0 4 (fontified t)) . -7796) (#("    " 0 4 (fontified t)) . -7737) (#("    " 0 4 (fontified t)) . -7719) (#("    " 0 4 (fontified t)) . -7686) (#("    " 0 4 (fontified t)) . -7664) (#("    " 0 4 (fontified t)) . -7576) (#("    " 0 4 (fontified t)) . -7538) (#("    " 0 4 (fontified t)) . -7481) (#("    " 0 4 (fontified t)) . -7411) 7395) nil (25364 40591 773603 971000) 0 nil])
([nil nil ((#("            if let Some(state) = guard.as_mut() {" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 23 (face font-lock-type-face fontified t) 23 24 (face (rainbow-delimiters-depth-4-face) fontified t) 24 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-4-face) fontified t) 30 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-4-face) fontified t) 46 47 (face (rainbow-delimiters-depth-4-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-4-face) fontified t)) . 7345) (undo-tree-id611 . -49) (undo-tree-id612 . -12) (undo-tree-id613 . -12) (undo-tree-id614 . -12) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -49) (undo-tree-id618 . -33) (undo-tree-id619 . -38) (undo-tree-id620 . -49) (undo-tree-id621 . -49) (t 25364 40591 791047 553000)) nil (25364 40606 647811 346000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7344) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) 7345) nil (25364 40606 647793 431000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -8136) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . 1) (undo-tree-id598 . -1) 8137) nil (25364 40606 647773 636000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8050) (#("    " 0 4 (fontified t)) . -7993) (#("    " 0 4 (fontified t)) . -7975) (#("    " 0 4 (fontified t)) . -7953) (#("    " 0 4 (fontified t)) . -7901) (#("    " 0 4 (fontified t)) . -7809) (#("    " 0 4 (fontified t)) . -7795) (#("    " 0 4 (fontified t)) . -7781) (#("    " 0 4 (fontified t)) . -7759) (#("    " 0 4 (fontified t)) . -7710) (#("    " 0 4 (fontified t)) . -7655) (#("    " 0 4 (fontified t)) . -7641) (#("    " 0 4 (fontified t)) . -7612) (#("    " 0 4 (fontified t)) . -7594) (#("    " 0 4 (fontified t)) . -7510) (#("    " 0 4 (fontified t)) . -7476) (#("    " 0 4 (fontified t)) . -7423) (#("    " 0 4 (fontified t)) . -7357) 7349) nil (25364 40606 647751 681000) 0 nil])
([nil nil ((#("            if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                for cb in &*state.changed_cbs {
                    cb();
                }
                state.changed_cbs_triggered_at = state.time;
            }" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 26 (fontified t) 26 27 (syntax-table (1) fontified t) 27 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-4-face) fontified t) 87 88 (fontified t) 88 104 (fontified t) 104 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t) 108 110 (face font-lock-variable-name-face fontified t) 110 111 (fontified t) 111 113 (face font-lock-keyword-face fontified t) 113 114 (fontified t) 114 115 (face rust-ampersand-face fontified t) 115 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-5-face) fontified t) 135 136 (fontified t) 136 158 (fontified t) 158 159 (face (rainbow-delimiters-depth-6-face) fontified t) 159 160 (face (rainbow-delimiters-depth-6-face) fontified t) 160 162 (fontified t) 162 178 (fontified t) 178 179 (face (rainbow-delimiters-depth-5-face) fontified t) 179 180 (fontified t) 180 241 (fontified t) 241 253 (fontified t) 253 254 (face (rainbow-delimiters-depth-4-face) fontified t)) . 7797) (undo-tree-id641 . -254) (undo-tree-id642 . -254) (undo-tree-id643 . -254) (undo-tree-id644 . -15) (undo-tree-id645 . -20) (undo-tree-id646 . -29) (undo-tree-id647 . -34) (undo-tree-id648 . -62) (undo-tree-id649 . -67) (undo-tree-id650 . -116) (undo-tree-id651 . -121) (undo-tree-id652 . -196) (undo-tree-id653 . -201) (undo-tree-id654 . -229) (undo-tree-id655 . -234) (undo-tree-id656 . -254) (undo-tree-id657 . -254) (undo-tree-id658 . -254) (t 25364 40606 667715 133000)) nil (25364 40708 976443 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7796) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 7797) nil (25364 40708 976424 381000) 0 nil])
([nil nil ((#("            if state.time >= state.samples.len() {
                for cb in &*state.done_cbs {
                    cb();
                }
            }" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 26 (fontified t) 26 27 (syntax-table (1) fontified t) 27 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-4-face) fontified t) 47 48 (face (rainbow-delimiters-depth-4-face) fontified t) 48 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-4-face) fontified t) 50 51 (fontified t) 51 67 (fontified t) 67 70 (face font-lock-keyword-face fontified t) 70 71 (fontified t) 71 73 (face font-lock-variable-name-face fontified t) 73 74 (fontified t) 74 76 (face font-lock-keyword-face fontified t) 76 77 (fontified t) 77 78 (face rust-ampersand-face fontified t) 78 94 (fontified t) 94 95 (face (rainbow-delimiters-depth-5-face) fontified t) 95 96 (fontified t) 96 118 (fontified t) 118 119 (face (rainbow-delimiters-depth-6-face) fontified t) 119 120 (face (rainbow-delimiters-depth-6-face) fontified t) 120 122 (fontified t) 122 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-5-face) fontified t) 139 140 (fontified t) 140 152 (fontified t) 152 153 (face (rainbow-delimiters-depth-4-face) fontified t)) . 7643) (undo-tree-id679 . -153) (undo-tree-id680 . -153) (undo-tree-id681 . -153) (undo-tree-id682 . -153) (undo-tree-id683 . -153) (undo-tree-id684 . -153) (undo-tree-id685 . -15) (undo-tree-id686 . -20) (undo-tree-id687 . -29) (undo-tree-id688 . -34) (undo-tree-id689 . -79) (undo-tree-id690 . -84) (undo-tree-id691 . -153) (undo-tree-id692 . -153) (undo-tree-id693 . -153) (t 25364 40709 24388 83000)) nil (25364 40722 926761 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7653) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#(" " 0 1 (fontified t)) . -7654) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#(" " 0 1 (fontified t)) . -7655) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("
" 0 1 (fontified t)) . -7656) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) 7657) nil (25364 40722 926745 429000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7665) (undo-tree-id662 . -1) (undo-tree-id663 . -1)) nil (25364 40722 926729 944000) 0 nil])
([nil nil ((#("                     " 0 1 (fontified t) 1 13 (fontified t) 13 21 (fontified t)) . -7652) (undo-tree-id659 . -13) (undo-tree-id660 . -1) (undo-tree-id661 . -20) 7665) nil (25364 40722 926723 30000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -7883) (undo-tree-id713 . -5) (undo-tree-id714 . -5) (undo-tree-id715 . -5) (undo-tree-id716 . -5) 7888 (t 25364 40722 947722 271000)) nil (25364 40732 676643 838000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -7880) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#(" " 0 1 (fontified t)) . -7881) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("&" 0 1 (fontified t)) . -7882) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) 7883) nil (25364 40732 676634 504000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -8099) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) 8104 (t 25364 40732 694389 535000)) nil (25364 40735 489803 394000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8096) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#(" " 0 1 (fontified t)) . -8097) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("&" 0 1 (fontified t)) . -8098) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) 8099) nil (25364 40735 489794 979000) 0 nil])
([nil nil ((#("state" 0 5 (fontified t)) . -8315) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) 8320 (t 25364 40735 534389 710000)) nil (25364 40740 131300 588000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8312) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#(" " 0 1 (fontified t)) . -8313) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (#("&" 0 1 (fontified t)) . -8314) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) 8315) nil (25364 40740 131292 329000) 0 nil])
([nil nil ((#("state.time += 1;" 0 16 (fontified t)) . 7612) (undo-tree-id768 . -5) (undo-tree-id769 . -16) (undo-tree-id770 . -16) (t 25364 40740 177723 328000)) nil (25364 40759 166914 504000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7612) (undo-tree-id767 . -1)) nil (25364 40759 166908 953000) 0 nil])
([nil nil ((#("                " 0 4 (fontified t) 4 7 (fontified t) 7 14 (fontified t) 14 16 (fontified t)) . -7608) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -9) 7612) nil (25364 40759 166902 501000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -7509) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) 7510 (t 25364 40759 187724 495000)) nil (25364 40766 333722 991000) 0 nil])
([nil nil ((7486 . 7489) (#("                       " 0 23 (fontified t)) . 7486) (undo-tree-id771 . -23) (undo-tree-id772 . -23) (undo-tree-id773 . -23) (undo-tree-id774 . -23) 7509) nil (25364 40766 333714 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (nil fontified nil 733 . 1006) (733 . 1006) (t 25364 40766 351058 268000)) nil (25364 40880 973819 227000) 0 nil])
([nil nil ((800 . 801) (t 25364 40880 991065 306000)) nil (25364 40894 168552 348000) 0 nil])
([nil nil ((845 . 846)) nil (25364 40894 168550 558000) 0 nil])
([nil nil ((883 . 884)) nil (25364 40894 168546 50000) 0 nil])
([nil nil ((7350 . 7351) (#("	" 0 1 (fontified nil)) . 7349) (undo-tree-id778 . -1) (7349 . 7351) (#("	" 0 1 (fontified nil)) . 7348) (7348 . 7349) (7348 . 7349) (t 25364 40894 214399 451000)) nil (25364 40943 703192 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7735 . 7736) (nil fontified nil 7349 . 7736) (7349 . 7736)) nil (25364 40943 703182 539000) 0 nil])
([nil nil ((7349 . 7350) (#("       " 0 7 (fontified t)) . 7349) 7383) nil (25364 40943 703177 97000) 0 nil])
([nil nil ((733 . 737) (t 25364 40943 721069 156000)) nil (25364 40964 554174 906000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -733) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("u" 0 1 (fontified t)) . -734) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("b" 0 1 (fontified t)) . -735) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (#(" " 0 1 (fontified t)) . -736) (undo-tree-id785 . -1) (undo-tree-id786 . -1) 737 (t 25364 40964 571070 436000)) nil (25364 40977 225282 492000) 0 nil])
([nil nil ((7468 . 7469) (t 25364 40977 271071 216000)) nil (25364 40991 656033 814000) 0 nil])
([nil nil ((7499 . 7500)) nil (25364 40991 656424 320000) 0 nil])
([nil nil ((7533 . 7534)) nil (25364 40996 851795 385000) 0 nil] [nil nil ((7500 . 7503)) ((#("
		" 0 3 (fontified t)) . 7500) (undo-tree-id787 . -3) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -3)) (25364 40991 656026 80000) 0 nil])
([nil nil ((7953 . 7954) (t 25364 40996 897739 86000)) nil (25364 41032 321514 772000) 0 nil])
nil
([nil nil ((7954 . 7955)) nil (25364 41032 321513 599000) 0 nil])
([nil nil ((7955 . 7959)) nil (25364 41032 321512 687000) 0 nil])
([nil nil ((7959 . 7961)) nil (25364 41032 321511 707000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -7956) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t)) . -7957) (undo-tree-id808 . -1) (#("t" 0 1 (fontified t)) . -7958) (undo-tree-id809 . -1) (#("e" 0 1 (fontified t)) . -7959) (undo-tree-id810 . -1) (#("r" 0 1 (fontified t)) . -7960) (undo-tree-id811 . -1) 7961) nil (25364 41032 321508 919000) 0 nil])
([nil nil ((#("        fn write_output_data<T>(output: &mut [T], channels: u16, w)
        where
            T: cpal::Sample,
        {
            for frame in output.chunks_mut(channels.into()) {
                for sample in frame.iter_mut() {
                    *sample =
			cpal::Sample::from(state.samples.get(state.time).unwrap_or(&0f32));
                }
            }

        }" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 19 (face font-lock-function-name-face fontified t) 19 28 (face font-lock-function-name-face fontified t) 28 29 (face (rainbow-delimiters-depth-3-face) fontified t) 29 30 (face font-lock-type-face fontified t) 30 31 (face (rainbow-delimiters-depth-3-face) fontified t) 31 32 (face (rainbow-delimiters-depth-3-face) fontified t) 32 38 (face font-lock-variable-name-face fontified t) 38 40 (fontified t) 40 41 (face rust-ampersand-face fontified t) 41 44 (face font-lock-keyword-face fontified t) 44 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-4-face) fontified t) 46 47 (face font-lock-type-face fontified t) 47 48 (face (rainbow-delimiters-depth-4-face) fontified t) 48 50 (fontified t) 50 58 (face font-lock-variable-name-face fontified t) 58 60 (fontified t) 60 63 (face font-lock-type-face fontified t) 63 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-3-face) fontified t) 67 68 (fontified t) 68 76 (fontified t) 76 81 (face font-lock-keyword-face fontified t) 81 94 (fontified t) 94 95 (face font-lock-variable-name-face fontified t) 95 97 (fontified t) 97 101 (face font-lock-constant-face fontified t) 101 103 (fontified t) 103 109 (face font-lock-type-face fontified t) 109 111 (fontified t) 111 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-3-face) fontified t) 120 121 (fontified t) 121 133 (fontified t) 133 136 (face font-lock-keyword-face fontified t) 136 137 (fontified t) 137 142 (face font-lock-variable-name-face fontified t) 142 143 (fontified t) 143 145 (face font-lock-keyword-face fontified t) 145 163 (fontified t) 163 164 (face (rainbow-delimiters-depth-4-face) fontified t) 164 177 (fontified t) 177 178 (face (rainbow-delimiters-depth-5-face) fontified t) 178 179 (face (rainbow-delimiters-depth-5-face) fontified t) 179 180 (face (rainbow-delimiters-depth-4-face) fontified t) 180 181 (fontified t) 181 182 (face (rainbow-delimiters-depth-4-face) fontified t) 182 183 (fontified t) 183 199 (fontified t) 199 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t) 203 209 (face font-lock-variable-name-face fontified t) 209 210 (fontified t) 210 212 (face font-lock-keyword-face fontified t) 212 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-5-face) fontified t) 228 229 (face (rainbow-delimiters-depth-5-face) fontified t) 229 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-5-face) fontified t) 231 232 (fontified t) 232 262 (fontified t) 262 265 (fontified t) 265 269 (face font-lock-constant-face fontified t) 269 271 (fontified t) 271 277 (face font-lock-type-face fontified t) 277 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-6-face) fontified t) 284 299 (fontified t) 299 301 (fontified t) 301 302 (face (rainbow-delimiters-depth-7-face) fontified t) 302 312 (fontified t) 312 313 (face (rainbow-delimiters-depth-7-face) fontified t) 313 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-7-face) fontified t) 324 325 (face rust-ampersand-face fontified t) 325 326 (fontified t) 326 329 (face font-lock-type-face fontified t) 329 330 (face (rainbow-delimiters-depth-7-face) fontified t) 330 331 (face (rainbow-delimiters-depth-6-face) fontified t) 331 333 (fontified t) 333 349 (fontified t) 349 350 (face (rainbow-delimiters-depth-5-face) fontified t) 350 351 (fontified t) 351 362 (fontified t) 362 363 (fontified t) 363 364 (face (rainbow-delimiters-depth-4-face) fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 374 (fontified t) 374 375 (face (rainbow-delimiters-depth-3-face) fontified t)) . 7890) (undo-tree-id791 . -375) (undo-tree-id792 . -365) (undo-tree-id793 . -374) (undo-tree-id794 . -120) (undo-tree-id795 . -365) (undo-tree-id796 . -365) (undo-tree-id797 . -365) (undo-tree-id798 . -365) (undo-tree-id799 . 309) (undo-tree-id800 . -66) (undo-tree-id801 . -67) (undo-tree-id802 . -284) (undo-tree-id803 . -289) (undo-tree-id804 . -302) (undo-tree-id805 . -307) (undo-tree-id806 . -375)) nil (25364 41032 321055 657000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9038 . 9039) (nil fontified nil 7890 . 9039) (7890 . 9039)) nil (25364 41040 607325 466000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -7468) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 7469 (t 25364 41032 367741 264000)) nil (25364 41067 508938 739000) 0 nil] [nil nil ((#("                    if state.time >= state.samples.len() {
                        for cb in &*state.done_cbs {
                            cb();
                        }
                    }
                    if state.time >= state.changed_cbs_triggered_at + state.sample_rate / 100 {
                        for cb in &*state.changed_cbs {
                            cb();
                        }
                        state.changed_cbs_triggered_at = state.time;" 0 20 (fontified t) 20 22 (face font-lock-keyword-face fontified t) 22 34 (fontified t) 34 35 (syntax-table (1) fontified t) 35 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-6-face) fontified t) 55 56 (face (rainbow-delimiters-depth-6-face) fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-6-face) fontified t) 58 83 (fontified t) 83 86 (face font-lock-keyword-face fontified t) 86 87 (fontified t) 87 89 (face font-lock-variable-name-face fontified t) 89 90 (fontified t) 90 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 94 (face rust-ampersand-face fontified t) 94 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-7-face) fontified t) 111 142 (fontified t) 142 143 (face (rainbow-delimiters-depth-8-face) fontified t) 143 144 (face (rainbow-delimiters-depth-8-face) fontified t) 144 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-7-face) fontified t) 171 192 (fontified t) 192 193 (face (rainbow-delimiters-depth-6-face) fontified t) 193 214 (fontified t) 214 216 (face font-lock-keyword-face fontified t) 216 228 (fontified t) 228 229 (syntax-table (1) fontified t) 229 288 (fontified t) 288 289 (face (rainbow-delimiters-depth-6-face) fontified t) 289 314 (fontified t) 314 317 (face font-lock-keyword-face fontified t) 317 318 (fontified t) 318 320 (face font-lock-variable-name-face fontified t) 320 321 (fontified t) 321 323 (face font-lock-keyword-face fontified t) 323 324 (fontified t) 324 325 (face rust-ampersand-face fontified t) 325 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-7-face) fontified t) 345 376 (fontified t) 376 377 (face (rainbow-delimiters-depth-8-face) fontified t) 377 378 (face (rainbow-delimiters-depth-8-face) fontified t) 378 404 (fontified t) 404 405 (face (rainbow-delimiters-depth-7-face) fontified t) 405 474 (fontified t)) . 8501) (undo-tree-id812 . -474) (undo-tree-id813 . -101) (undo-tree-id814 . -109) (undo-tree-id815 . -101) (undo-tree-id816 . -109) (undo-tree-id817 . -237) (undo-tree-id818 . -261) (undo-tree-id819 . -237) (undo-tree-id820 . -261) (undo-tree-id821 . -332) (undo-tree-id822 . -343) (undo-tree-id823 . -332) (undo-tree-id824 . -343) (undo-tree-id825 . -436) (undo-tree-id826 . -460) (undo-tree-id827 . -436) (undo-tree-id828 . -460) (undo-tree-id829 . -474) (undo-tree-id830 . -474) (t 25364 41032 367741 264000)) ((8501 . 8975)) (25364 41040 606029 567000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -7532) (undo-tree-id833 . -1) (undo-tree-id834 . -1) 7533) nil (25364 41067 508934 933000) 0 nil])
nil
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -7498) (undo-tree-id831 . -1) (undo-tree-id832 . -1) 7499) nil (25364 41067 508928 424000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -800) (undo-tree-id841 . -1) (undo-tree-id842 . -1) 801 (t 25364 41067 527743 422000)) nil (25364 41075 28222 709000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -844) (undo-tree-id839 . -1) (undo-tree-id840 . -1) 845) nil (25364 41075 28218 557000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -881) (undo-tree-id837 . -1) (undo-tree-id838 . -1) 882) nil (25364 41075 28212 198000) 0 nil])
([nil nil ((#("#[macro_use]
extern crate log;" 0 1 (face font-lock-preprocessor-face fontified t) 1 2 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 2 11 (face font-lock-preprocessor-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face) fontified t) 12 13 (fontified t) 13 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 25 (face font-lock-keyword-face fontified t) 25 29 (fontified t) 29 30 (fontified t rear-nonsticky t)) . 614) (undo-tree-id849 . -30) (undo-tree-id850 . -12) (undo-tree-id851 . -30) (undo-tree-id852 . -30) (t 25364 41075 81077 219000)) nil (25364 41089 399079 808000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -613) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) 614) nil (25364 41089 399072 645000) 0 nil])
([nil nil ((#("            cpal::SampleFormat::F32 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<f32>(data, channels),
                err_fn,
            )?,
            cpal::SampleFormat::I16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<i16>(data, channels),
                err_fn,
            )?,
            cpal::SampleFormat::U16 => device.build_output_stream(
                &config.into(),
                move |data, _: &_| write_output_data::<u16>(data, channels),
                err_fn,
            )?," 0 12 (fontified t) 12 16 (face font-lock-constant-face fontified t) 16 18 (fontified t) 18 30 (face font-lock-type-face fontified t) 30 32 (fontified t) 32 35 (face font-lock-type-face fontified t) 35 37 (fontified t) 37 38 (fontified t syntax-table (1)) 38 56 (fontified t) 56 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-4-face) fontified t) 66 67 (fontified t) 67 83 (fontified t) 83 84 (face rust-ampersand-face fontified t) 84 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-5-face) fontified t) 96 97 (face (rainbow-delimiters-depth-5-face) fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 106 (fontified t) 106 115 (fontified t) 115 119 (face font-lock-keyword-face fontified t) 119 127 (fontified t) 127 128 (face font-lock-variable-name-face fontified t) 128 130 (fontified t) 130 131 (face rust-ampersand-face fontified t) 131 143 (fontified t) 143 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-5-face) fontified t) 154 157 (face font-lock-type-face fontified t) 157 158 (face (rainbow-delimiters-depth-5-face) fontified t) 158 159 (face (rainbow-delimiters-depth-5-face) fontified t) 159 173 (fontified t) 173 174 (face (rainbow-delimiters-depth-5-face) fontified t) 174 176 (fontified t) 176 177 (fontified t) 177 200 (fontified t) 200 212 (fontified t) 212 213 (face (rainbow-delimiters-depth-4-face) fontified t) 213 214 (face rust-question-mark fontified t) 214 228 (fontified t) 228 232 (face font-lock-constant-face fontified t) 232 234 (fontified t) 234 246 (face font-lock-type-face fontified t) 246 248 (fontified t) 248 251 (face font-lock-type-face fontified t) 251 253 (fontified t) 253 254 (fontified t syntax-table (1)) 254 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-4-face) fontified t) 282 299 (fontified t) 299 300 (face rust-ampersand-face fontified t) 300 308 (fontified t) 308 311 (fontified t) 311 312 (face (rainbow-delimiters-depth-5-face) fontified t) 312 313 (face (rainbow-delimiters-depth-5-face) fontified t) 313 315 (fontified t) 315 331 (fontified t) 331 335 (face font-lock-keyword-face fontified t) 335 343 (fontified t) 343 344 (face font-lock-variable-name-face fontified t) 344 346 (fontified t) 346 347 (face rust-ampersand-face fontified t) 347 369 (fontified t) 369 370 (face (rainbow-delimiters-depth-5-face) fontified t) 370 373 (face font-lock-type-face fontified t) 373 374 (face (rainbow-delimiters-depth-5-face) fontified t) 374 375 (face (rainbow-delimiters-depth-5-face) fontified t) 375 384 (fontified t) 384 389 (fontified t) 389 390 (face (rainbow-delimiters-depth-5-face) fontified t) 390 392 (fontified t) 392 428 (fontified t) 428 429 (face (rainbow-delimiters-depth-4-face) fontified t) 429 430 (face rust-question-mark fontified t) 430 444 (fontified t) 444 448 (face font-lock-constant-face fontified t) 448 450 (fontified t) 450 462 (face font-lock-type-face fontified t) 462 464 (fontified t) 464 467 (face font-lock-type-face fontified t) 467 469 (fontified t) 469 470 (fontified t syntax-table (1)) 470 497 (fontified t) 497 498 (face (rainbow-delimiters-depth-4-face) fontified t) 498 515 (fontified t) 515 516 (face rust-ampersand-face fontified t) 516 527 (fontified t) 527 528 (face (rainbow-delimiters-depth-5-face) fontified t) 528 529 (face (rainbow-delimiters-depth-5-face) fontified t) 529 531 (fontified t) 531 539 (fontified t) 539 547 (fontified t) 547 551 (face font-lock-keyword-face fontified t) 551 559 (fontified t) 559 560 (face font-lock-variable-name-face fontified t) 560 561 (fontified t) 561 562 (fontified t) 562 563 (face rust-ampersand-face fontified t) 563 565 (fontified t) 565 585 (fontified t) 585 586 (face (rainbow-delimiters-depth-5-face) fontified t) 586 589 (face font-lock-type-face fontified t) 589 590 (face (rainbow-delimiters-depth-5-face) fontified t) 590 591 (face (rainbow-delimiters-depth-5-face) fontified t) 591 605 (fontified t) 605 606 (face (rainbow-delimiters-depth-5-face) fontified t) 606 607 (fontified t) 607 608 (fontified t) 608 644 (fontified t) 644 645 (face (rainbow-delimiters-depth-4-face) fontified t) 645 646 (face rust-question-mark fontified t) 646 647 (fontified t)) . 9056) (undo-tree-id853 . -647) (undo-tree-id854 . -390) (undo-tree-id855 . -606) (undo-tree-id856 . -647) (undo-tree-id857 . -173) (undo-tree-id858 . -174) (undo-tree-id859 . -134) (undo-tree-id860 . -158) (undo-tree-id861 . -158) (undo-tree-id862 . -174) (undo-tree-id863 . -134) (undo-tree-id864 . -174) (undo-tree-id865 . -389) (undo-tree-id866 . -390) (undo-tree-id867 . -350) (undo-tree-id868 . -374) (undo-tree-id869 . -374) (undo-tree-id870 . -390) (undo-tree-id871 . -350) (undo-tree-id872 . -390) (undo-tree-id873 . -605) (undo-tree-id874 . -606) (undo-tree-id875 . -566) (undo-tree-id876 . -590) (undo-tree-id877 . -590) (undo-tree-id878 . -606) (undo-tree-id879 . -566) (undo-tree-id880 . -606) (undo-tree-id881 . -647) (undo-tree-id882 . -647) (t 25364 41089 417744 766000)) nil (25364 41122 993994 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9726 . 9727) (nil fontified nil 9056 . 9727) (9056 . 9727)) nil (25364 41122 993955 175000) 0 nil])
([nil nil ((976 . 978) (t 25364 41123 14413 495000)) nil (25364 41181 796674 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1054 . 1055) (nil fontified nil 977 . 1055) (977 . 1055)) nil (25364 41181 796668 957000) 0 nil])
([nil nil ((1056 . 1058) (t 25364 41181 817750 438000)) nil (25364 41204 704457 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1867 . 1868) (nil fontified nil 1057 . 1868) (1057 . 1868)) nil (25364 41204 704455 815000) 0 nil])
([nil nil ((#("
    pub fn seek(&self, time_percent: f64) {
        let mut state = self.state.lock().unwrap();
        let state = state.as_mut().unwrap();
        state.time = (time_percent * (state.samples.len() as f64)) as usize;
        state.changed_cbs_triggered_at = 0;
    }" 0 5 (fontified t) 5 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 16 (face font-lock-function-name-face fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 18 (face rust-ampersand-face fontified t) 18 22 (face font-lock-keyword-face fontified t) 22 24 (fontified t) 24 36 (face font-lock-variable-name-face fontified t) 36 38 (fontified t) 38 41 (face font-lock-type-face fontified t) 41 42 (face (rainbow-delimiters-depth-2-face) fontified t) 42 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 53 (fontified t) 53 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 60 (face font-lock-keyword-face fontified t) 60 61 (fontified t) 61 66 (face font-lock-variable-name-face fontified t) 66 69 (fontified t) 69 73 (face font-lock-keyword-face fontified t) 73 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-3-face) fontified t) 85 86 (face (rainbow-delimiters-depth-3-face) fontified t) 86 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-3-face) fontified t) 94 95 (face (rainbow-delimiters-depth-3-face) fontified t) 95 105 (fontified t) 105 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t) 109 114 (face font-lock-variable-name-face fontified t) 114 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-3-face) fontified t) 130 131 (face (rainbow-delimiters-depth-3-face) fontified t) 131 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-3-face) fontified t) 139 140 (face (rainbow-delimiters-depth-3-face) fontified t) 140 163 (fontified t) 163 164 (face (rainbow-delimiters-depth-3-face) fontified t) 164 179 (fontified t) 179 180 (face (rainbow-delimiters-depth-4-face) fontified t) 180 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-5-face) fontified t) 198 199 (face (rainbow-delimiters-depth-5-face) fontified t) 199 200 (fontified t) 200 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t) 203 206 (face font-lock-type-face fontified t) 206 207 (face (rainbow-delimiters-depth-4-face) fontified t) 207 208 (face (rainbow-delimiters-depth-3-face) fontified t) 208 209 (fontified t) 209 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 217 (face font-lock-type-face fontified t) 217 267 (fontified t) 267 268 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1598) (undo-tree-id883 . -268) (undo-tree-id884 . -268) (undo-tree-id885 . -268)) nil (25364 41204 704449 938000) 0 nil])
([nil nil ((89 . 95) (t 25364 41204 724418 512000)) nil (25364 41241 312119 994000) 0 nil])
([nil nil ((91 . 97) (#("Stre" 0 4 (fontified nil)) . 91) (91 . 95) (#("Stream" 0 6 (fontified nil)) . -91) (91 . 97) (#("Stre" 0 4 (face font-lock-type-face fontified t)) . -91) (undo-tree-id886 . -4) (undo-tree-id887 . -3) (undo-tree-id888 . -3) 95) nil (25364 41241 312113 836000) 0 nil])
([nil nil ((#("    pub fn export(&self, path: &str) -> Result<()> {
        if !path.ends_with(\".wav\") {
            return Err(eyre!(\"Expected {} to end in .wav\", path));
        }

        let spec = hound::WavSpec {
            channels: 1,
            sample_rate: self.sample_rate,
            bits_per_sample: 32,
            sample_format: hound::SampleFormat::Float,
        };

        let mut writer = hound::WavWriter::create(path, spec)?;
        for sample in &self.samples {
            writer.write_sample(*sample)?;
        }

        writer.finalize()?;

        Ok(())
    }" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 17 (face font-lock-function-name-face fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) fontified t) 18 19 (face rust-ampersand-face fontified t) 19 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 29 (face font-lock-variable-name-face fontified t) 29 31 (fontified t) 31 32 (face rust-ampersand-face fontified t) 32 35 (face font-lock-type-face fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 38 (fontified t) 38 39 (fontified t syntax-table (1)) 39 40 (fontified t) 40 46 (face font-lock-type-face fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face (rainbow-delimiters-depth-3-face) fontified t) 48 49 (face (rainbow-delimiters-depth-3-face) fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) fontified t) 50 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 53 (fontified t) 53 61 (fontified t) 61 63 (face font-lock-keyword-face fontified t) 63 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-3-face) fontified t) 80 86 (face font-lock-string-face fontified t) 86 87 (face (rainbow-delimiters-depth-3-face) fontified t) 87 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-3-face) fontified t) 89 100 (fontified t) 100 102 (fontified t) 102 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t) 109 112 (face font-lock-type-face fontified t) 112 113 (face (rainbow-delimiters-depth-4-face) fontified t) 113 118 (face font-lock-preprocessor-face fontified t) 118 119 (face (rainbow-delimiters-depth-5-face) fontified t) 119 134 (face font-lock-string-face fontified t) 134 136 (face font-lock-string-face fontified t) 136 147 (face font-lock-string-face fontified t) 147 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-5-face) fontified t) 154 155 (face (rainbow-delimiters-depth-4-face) fontified t) 155 157 (fontified t) 157 159 (fontified t) 159 165 (fontified t) 165 166 (face (rainbow-delimiters-depth-3-face) fontified t) 166 167 (fontified t) 167 176 (fontified t) 176 179 (face font-lock-keyword-face fontified t) 179 180 (fontified t) 180 184 (face font-lock-variable-name-face fontified t) 184 187 (fontified t) 187 192 (face font-lock-constant-face fontified t) 192 194 (fontified t) 194 201 (face font-lock-type-face fontified t) 201 202 (fontified t) 202 203 (face (rainbow-delimiters-depth-3-face) fontified t) 203 212 (fontified t) 212 216 (fontified t) 216 224 (fontified t face font-lock-variable-name-face) 224 229 (fontified t) 229 241 (fontified t) 241 252 (face font-lock-variable-name-face fontified t) 252 254 (fontified t) 254 258 (face font-lock-keyword-face fontified t) 258 284 (fontified t) 284 289 (face font-lock-variable-name-face fontified t) 289 299 (face font-lock-variable-name-face fontified t) 299 305 (fontified t) 305 317 (fontified t) 317 330 (face font-lock-variable-name-face fontified t) 330 332 (fontified t) 332 337 (face font-lock-constant-face fontified t) 337 339 (fontified t) 339 351 (face font-lock-type-face fontified t) 351 353 (fontified t) 353 355 (face font-lock-type-face fontified t) 355 358 (face font-lock-type-face fontified t) 358 360 (fontified t) 360 368 (fontified t) 368 369 (face (rainbow-delimiters-depth-3-face) fontified t) 369 380 (fontified t) 380 383 (face font-lock-keyword-face fontified t) 383 384 (fontified t) 384 387 (face font-lock-keyword-face fontified t) 387 388 (fontified t) 388 394 (face font-lock-variable-name-face fontified t) 394 397 (fontified t) 397 402 (face font-lock-constant-face fontified t) 402 404 (fontified t) 404 413 (face font-lock-type-face fontified t) 413 421 (fontified t) 421 422 (face (rainbow-delimiters-depth-3-face) fontified t) 422 432 (fontified t) 432 433 (face (rainbow-delimiters-depth-3-face) fontified t) 433 434 (face rust-question-mark fontified t) 434 444 (fontified t) 444 447 (face font-lock-keyword-face fontified t) 447 448 (fontified t) 448 454 (face font-lock-variable-name-face fontified t) 454 455 (fontified t) 455 457 (face font-lock-keyword-face fontified t) 457 458 (fontified t) 458 459 (face rust-ampersand-face fontified t) 459 463 (face font-lock-keyword-face fontified t) 463 472 (fontified t) 472 473 (face (rainbow-delimiters-depth-3-face) fontified t) 473 505 (fontified t) 505 506 (face (rainbow-delimiters-depth-4-face) fontified t) 506 513 (fontified t) 513 514 (face (rainbow-delimiters-depth-4-face) fontified t) 514 515 (face rust-question-mark fontified t) 515 525 (fontified t) 525 526 (face (rainbow-delimiters-depth-3-face) fontified t) 526 551 (fontified t) 551 552 (face (rainbow-delimiters-depth-3-face) fontified t) 552 553 (face (rainbow-delimiters-depth-3-face) fontified t) 553 554 (face rust-question-mark fontified t) 554 565 (fontified t) 565 567 (face font-lock-type-face fontified t) 567 568 (face (rainbow-delimiters-depth-3-face) fontified t) 568 569 (face (rainbow-delimiters-depth-4-face) fontified t) 569 570 (face (rainbow-delimiters-depth-4-face) fontified t) 570 571 (face (rainbow-delimiters-depth-3-face) fontified t) 571 572 (fontified t) 572 576 (fontified t) 576 577 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . 10497) (undo-tree-id893 . -577) (undo-tree-id894 . -11) (undo-tree-id895 . -187) (undo-tree-id896 . -192) (undo-tree-id897 . -332) (undo-tree-id898 . -337) (undo-tree-id899 . -397) (undo-tree-id900 . -402) (undo-tree-id901 . -577) (undo-tree-id902 . -577) (t 25364 41241 331087 425000)) nil (25364 41275 333019 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10496) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) 10497) nil (25364 41275 333005 167000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -7583) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -7584) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . 1) (undo-tree-id914 . -1) 7585 (t 25364 41275 354422 847000)) nil (25364 41303 384822 263000) 0 nil])
([nil nil ((7583 . 7585)) nil (25364 41303 384808 123000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-type-face fontified t)) . -7583) (undo-tree-id906 . -1) (#("P" 0 1 (face font-lock-type-face fontified t)) . -7584) (undo-tree-id907 . -1) 7585) nil (25364 41303 384805 668000) 0 nil])
([nil nil ((7583 . 7587)) nil (25364 41303 384799 759000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -7585) (undo-tree-id904 . -1) (#("a" 0 1 (fontified t)) . -7586) (undo-tree-id905 . -1) 7587) nil (25364 41303 384797 11000) 0 nil])
([nil nil ((7585 . 7587)) nil (25364 41303 384789 728000) 0 nil])
([nil nil ((7583 . 7593) (#("Play" 0 4 (fontified nil)) . 7583) (7583 . 7587) (#("PlayHandle" 0 10 (fontified nil)) . -7583) (7583 . 7593) (#("Play" 0 4 (face font-lock-type-face fontified t)) . -7583) (undo-tree-id903 . -4) 7587) nil (25364 41303 384782 521000) 0 nil])
([nil nil ((#("

fn write_silence<T: Sample>(data: &mut [T], info: &cpal::OutputCallbackInfo) {
    for frame in data.chunks_mut(2) {
	for sample in frame.iter_mut() {
            *sample = Sample::from(&0.0);
	}	
    }

    println!(\"{:?}\",info.timestamp());
}" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 18 (face font-lock-function-name-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 22 (fontified t) 22 23 (face font-lock-type-face fontified t) 23 28 (face font-lock-type-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 34 (face font-lock-variable-name-face fontified t) 34 36 (fontified t) 36 37 (face rust-ampersand-face fontified t) 37 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-2-face) fontified t) 42 43 (face font-lock-type-face fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 46 (fontified t) 46 49 (face font-lock-variable-name-face fontified t) 49 50 (face font-lock-variable-name-face fontified t) 50 52 (fontified t) 52 53 (face rust-ampersand-face fontified t) 53 57 (face font-lock-constant-face fontified t) 57 59 (fontified t) 59 63 (face font-lock-type-face fontified t) 63 72 (face font-lock-type-face fontified t) 72 77 (face font-lock-type-face fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t) 78 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-1-face) fontified t) 80 81 (fontified t) 81 83 (fontified t) 83 85 (fontified t) 85 88 (face font-lock-keyword-face fontified t) 88 89 (fontified t) 89 94 (face font-lock-variable-name-face fontified t) 94 95 (fontified t) 95 97 (face font-lock-keyword-face fontified t) 97 98 (fontified t) 98 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-2-face)) 114 115 (fontified t) 115 116 (fontified t face (rainbow-delimiters-depth-2-face)) 116 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-2-face)) 118 119 (fontified t) 119 120 (fontified t) 120 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 130 (face font-lock-variable-name-face fontified t) 130 131 (fontified t) 131 133 (face font-lock-keyword-face fontified t) 133 148 (fontified t) 148 149 (face (rainbow-delimiters-depth-3-face) fontified t) 149 150 (face (rainbow-delimiters-depth-3-face) fontified t) 150 151 (fontified t) 151 152 (face (rainbow-delimiters-depth-3-face) fontified t) 152 175 (fontified t) 175 181 (face font-lock-type-face fontified t) 181 187 (fontified t) 187 188 (face (rainbow-delimiters-depth-4-face) fontified t) 188 189 (face rust-ampersand-face fontified t) 189 192 (fontified t) 192 193 (face (rainbow-delimiters-depth-4-face) fontified t) 193 196 (fontified t) 196 197 (face (rainbow-delimiters-depth-3-face) fontified t) 197 203 (fontified t) 203 204 (face (rainbow-delimiters-depth-2-face) fontified t) 204 205 (fontified t) 205 210 (fontified t) 210 216 (face rust-builtin-formatting-macro fontified t) 216 218 (face rust-builtin-formatting-macro fontified t) 218 219 (face (rainbow-delimiters-depth-2-face) fontified t) 219 220 (face font-lock-string-face fontified t) 220 224 (face rust-string-interpolation fontified t) 224 225 (face font-lock-string-face fontified t) 225 240 (fontified t) 240 241 (face (rainbow-delimiters-depth-3-face) fontified t) 241 242 (face (rainbow-delimiters-depth-3-face) fontified t) 242 243 (face (rainbow-delimiters-depth-2-face) fontified t) 243 245 (fontified t) 245 246 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10507) (undo-tree-id915 . -246) (undo-tree-id916 . -5) (undo-tree-id917 . -246) (undo-tree-id918 . -246) (t 25364 41303 407757 902000)) nil (25364 41314 490824 917000) 0 nil])
([nil nil ((#("    env_logger::init();
    let host = cpal::default_host();
    let device = host.default_output_device().expect(\"no output device available\");
    let err_fn = |err| eprintln!(\"an error occurred on the output audio stream: {}\", err);
    let config = device.default_output_config().unwrap();
    println!(\"Default output config: {:?}\", config);
    let stream = match config.sample_format() {
	SampleFormat::F32 => device.build_output_stream(&config.into(), write_silence::<f32>, err_fn),
	SampleFormat::I16 => device.build_output_stream(&config.into(), write_silence::<i16>, err_fn),
	SampleFormat::U16 => device.build_output_stream(&config.into(), write_silence::<u16>, err_fn),
}.unwrap();
    stream.play()?;
    std::thread::sleep(std::time::Duration::from_secs(1));
    stream.pause()?;
    std::thread::sleep(std::time::Duration::from_secs(3));
    stream.play()?;
    std::thread::sleep(std::time::Duration::from_secs(1));" 0 4 (fontified t) 4 14 (face font-lock-constant-face fontified t) 14 16 (fontified t) 16 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-2-face) fontified t) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 28 (fontified t) 28 30 (face font-lock-keyword-face fontified t) 30 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 36 (face font-lock-variable-name-face fontified t) 36 39 (fontified t) 39 43 (face font-lock-constant-face fontified t) 43 51 (fontified t) 51 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-2-face) fontified t) 58 59 (face (rainbow-delimiters-depth-2-face) fontified t) 59 61 (fontified t) 61 65 (fontified t) 65 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 75 (face font-lock-variable-name-face fontified t) 75 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-2-face) fontified t) 105 106 (face (rainbow-delimiters-depth-2-face) fontified t) 106 113 (fontified t) 113 114 (face (rainbow-delimiters-depth-2-face) fontified t) 114 125 (face font-lock-string-face fontified t) 125 142 (face font-lock-string-face fontified t) 142 143 (face (rainbow-delimiters-depth-2-face) fontified t) 143 145 (fontified t) 145 149 (fontified t) 149 152 (face font-lock-keyword-face fontified t) 152 153 (fontified t) 153 159 (face font-lock-variable-name-face fontified t) 159 168 (fontified t) 168 177 (face rust-builtin-formatting-macro fontified t) 177 178 (face (rainbow-delimiters-depth-2-face) fontified t) 178 225 (face font-lock-string-face fontified t) 225 227 (face rust-string-interpolation fontified t) 227 228 (face font-lock-string-face fontified t) 228 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 240 (fontified t) 240 243 (face font-lock-keyword-face fontified t) 243 244 (fontified t) 244 246 (face font-lock-variable-name-face fontified t) 246 250 (face font-lock-variable-name-face fontified t) 250 262 (fontified t) 262 281 (fontified t) 281 282 (face (rainbow-delimiters-depth-2-face) fontified t) 282 283 (face (rainbow-delimiters-depth-2-face) fontified t) 283 290 (fontified t) 290 291 (face (rainbow-delimiters-depth-2-face) fontified t) 291 292 (face (rainbow-delimiters-depth-2-face) fontified t) 292 294 (fontified t) 294 298 (fontified t) 298 306 (face rust-builtin-formatting-macro fontified t) 306 307 (face (rainbow-delimiters-depth-2-face) fontified t) 307 331 (face font-lock-string-face fontified t) 331 335 (face rust-string-interpolation fontified t) 335 336 (face font-lock-string-face fontified t) 336 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-2-face) fontified t) 345 351 (fontified t) 351 354 (face font-lock-keyword-face fontified t) 354 355 (fontified t) 355 356 (face font-lock-variable-name-face fontified t) 356 358 (face font-lock-variable-name-face fontified t) 358 360 (face font-lock-variable-name-face fontified t) 360 361 (face font-lock-variable-name-face fontified t) 361 364 (fontified t) 364 369 (face font-lock-keyword-face fontified t) 369 390 (fontified t) 390 391 (face (rainbow-delimiters-depth-2-face) fontified t) 391 392 (face (rainbow-delimiters-depth-2-face) fontified t) 392 393 (fontified t) 393 394 (face (rainbow-delimiters-depth-2-face) fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 408 (face font-lock-type-face fontified t) 408 410 (fontified t) 410 413 (face font-lock-type-face fontified t) 413 415 (fontified t) 415 416 (fontified t syntax-table (1)) 416 443 (fontified t) 443 444 (face (rainbow-delimiters-depth-3-face) fontified t) 444 445 (face rust-ampersand-face fontified t) 445 456 (fontified t) 456 457 (face (rainbow-delimiters-depth-4-face) fontified t) 457 458 (face (rainbow-delimiters-depth-4-face) fontified t) 458 470 (fontified t) 470 475 (fontified t) 475 476 (face (rainbow-delimiters-depth-4-face) fontified t) 476 479 (face font-lock-type-face fontified t) 479 480 (face (rainbow-delimiters-depth-4-face) fontified t) 480 488 (fontified t) 488 489 (face (rainbow-delimiters-depth-3-face) fontified t) 489 491 (fontified t) 491 492 (fontified t) 492 504 (face font-lock-type-face fontified t) 504 506 (fontified t) 506 509 (face font-lock-type-face fontified t) 509 510 (fontified t) 510 511 (fontified t) 511 512 (syntax-table (1) fontified t) 512 539 (fontified t) 539 540 (face (rainbow-delimiters-depth-3-face) fontified t) 540 541 (face rust-ampersand-face fontified t) 541 552 (fontified t) 552 553 (face (rainbow-delimiters-depth-4-face) fontified t) 553 554 (face (rainbow-delimiters-depth-4-face) fontified t) 554 571 (fontified t) 571 572 (face (rainbow-delimiters-depth-4-face) fontified t) 572 575 (face font-lock-type-face fontified t) 575 576 (face (rainbow-delimiters-depth-4-face) fontified t) 576 584 (fontified t) 584 585 (face (rainbow-delimiters-depth-3-face) fontified t) 585 587 (fontified t) 587 588 (fontified t) 588 600 (face font-lock-type-face fontified t) 600 602 (fontified t) 602 605 (face font-lock-type-face fontified t) 605 607 (fontified t) 607 608 (syntax-table (1) fontified t) 608 622 (fontified t) 622 635 (fontified t) 635 636 (face (rainbow-delimiters-depth-3-face) fontified t) 636 637 (face rust-ampersand-face fontified t) 637 648 (fontified t) 648 649 (face (rainbow-delimiters-depth-4-face) fontified t) 649 650 (face (rainbow-delimiters-depth-4-face) fontified t) 650 667 (fontified t) 667 668 (face (rainbow-delimiters-depth-4-face) fontified t) 668 671 (face font-lock-type-face fontified t) 671 672 (face (rainbow-delimiters-depth-4-face) fontified t) 672 680 (fontified t) 680 681 (face (rainbow-delimiters-depth-3-face) fontified t) 681 683 (fontified t) 683 684 (face (rainbow-delimiters-depth-2-face) fontified t) 684 691 (fontified t) 691 692 (face (rainbow-delimiters-depth-2-face) fontified t) 692 693 (face (rainbow-delimiters-depth-2-face) fontified t) 693 710 (fontified t) 710 711 (face (rainbow-delimiters-depth-2-face) fontified t) 711 712 (face (rainbow-delimiters-depth-2-face) fontified t) 712 713 (face rust-question-mark fontified t) 713 719 (fontified t) 719 722 (face font-lock-constant-face fontified t) 722 724 (fontified t) 724 730 (face font-lock-constant-face fontified t) 730 737 (fontified t) 737 738 (face (rainbow-delimiters-depth-2-face) fontified t) 738 741 (face font-lock-constant-face fontified t) 741 743 (fontified t) 743 747 (face font-lock-constant-face fontified t) 747 749 (fontified t) 749 757 (face font-lock-type-face fontified t) 757 768 (fontified t) 768 769 (face (rainbow-delimiters-depth-3-face) fontified t) 769 770 (fontified t) 770 771 (face (rainbow-delimiters-depth-3-face) fontified t) 771 772 (face (rainbow-delimiters-depth-2-face) fontified t) 772 790 (fontified t) 790 791 (face (rainbow-delimiters-depth-2-face) fontified t) 791 792 (face (rainbow-delimiters-depth-2-face) fontified t) 792 793 (face rust-question-mark fontified t) 793 799 (fontified t) 799 802 (face font-lock-constant-face fontified t) 802 804 (fontified t) 804 810 (face font-lock-constant-face fontified t) 810 817 (fontified t) 817 818 (face (rainbow-delimiters-depth-2-face) fontified t) 818 821 (face font-lock-constant-face fontified t) 821 823 (fontified t) 823 827 (face font-lock-constant-face fontified t) 827 829 (fontified t) 829 837 (face font-lock-type-face fontified t) 837 848 (fontified t) 848 849 (face (rainbow-delimiters-depth-3-face) fontified t) 849 850 (fontified t) 850 851 (face (rainbow-delimiters-depth-3-face) fontified t) 851 852 (face (rainbow-delimiters-depth-2-face) fontified t) 852 869 (fontified t) 869 870 (face (rainbow-delimiters-depth-2-face) fontified t) 870 871 (face (rainbow-delimiters-depth-2-face) fontified t) 871 872 (face rust-question-mark fontified t) 872 878 (fontified t) 878 881 (face font-lock-constant-face fontified t) 881 883 (fontified t) 883 889 (face font-lock-constant-face fontified t) 889 896 (fontified t) 896 897 (face (rainbow-delimiters-depth-2-face) fontified t) 897 900 (face font-lock-constant-face fontified t) 900 902 (fontified t) 902 906 (face font-lock-constant-face fontified t) 906 908 (fontified t) 908 916 (face font-lock-type-face fontified t) 916 927 (fontified t) 927 928 (face (rainbow-delimiters-depth-3-face) fontified t) 928 929 (fontified t) 929 930 (face (rainbow-delimiters-depth-3-face) fontified t) 930 931 (face (rainbow-delimiters-depth-2-face) fontified t) 931 932 (fontified t)) . 10535) (undo-tree-id919 . -932) (undo-tree-id920 . -276) (undo-tree-id921 . -460) (undo-tree-id922 . -473) (undo-tree-id923 . -556) (undo-tree-id924 . -569) (undo-tree-id925 . -652) (undo-tree-id926 . -665) (undo-tree-id927 . -932) (undo-tree-id928 . -932) (t 25364 41314 511091 917000)) nil (25364 41324 129078 350000) 0 nil])
([nil nil ((10535 . 10539) (t 25364 41324 147759 176000)) nil (25364 41381 60389 144000) 0 nil])
([nil nil ((10539 . 10547)) nil (25364 41381 60388 85000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -10545) (undo-tree-id936 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -10546) (undo-tree-id937 . -1) 10547) nil (25364 41381 60386 857000) 0 nil])
([nil nil ((10545 . 10554)) nil (25364 41381 60383 256000) 0 nil])
([nil nil ((10550 . 10559) (#("Audi" 0 4 (fontified nil)) . 10550) (10550 . 10554) (#("AudioClip" 0 9 (fontified nil)) . -10550) (10550 . 10559) (#("Audi" 0 4 (face font-lock-type-face fontified t)) . -10550) (undo-tree-id935 . -4) 10554) nil (25364 41381 60381 585000) 0 nil])
([nil nil ((10559 . 10560)) nil (25364 41381 60378 662000) 0 nil])
([nil nil ((10560 . 10561)) nil (25364 41381 60377 745000) 0 nil])
([nil nil ((10561 . 10567) (#("import" 0 6 (fontified nil)) . -10561) (10561 . 10567)) nil (25364 41381 60376 550000) 0 nil])
([nil nil ((10567 . 10569)) nil (25364 41381 60375 286000) 0 nil])
([nil nil ((10569 . 10573) (10568 . 10570) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10568) (10568 . 10569)) nil (25364 41381 60374 81000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41381 60372 614000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -10575) (undo-tree-id933 . -1) (undo-tree-id934 . -1) 10576) nil (25364 41381 60371 249000) 0 nil])
([nil nil ((10575 . 10576)) nil (25364 41381 60367 960000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10575) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 10576) nil (25364 41381 60366 210000) 0 nil])
([nil nil ((10575 . 10577) (#("\"" 0 1 (fontified nil)) . -10575) (10575 . 10576)) nil (25364 41381 60354 692000) 0 nil])
([nil nil ((10578 . 10579)) nil (25364 41381 60349 187000) 0 nil])
([nil nil ((10576 . 10597) (t 25364 41381 111096 5000)) nil (25364 41414 739586 470000) 0 nil])
([nil nil ((10597 . 10598)) nil (25364 41414 739585 188000) 0 nil])
([nil nil ((#("Downloads/" 0 10 (face font-lock-string-face fontified t)) . -10588) (undo-tree-id950 . -10) 10598) nil (25364 41414 739583 944000) 0 nil])
([nil nil ((#("zhang/" 0 6 (face font-lock-string-face fontified t)) . -10582) (undo-tree-id949 . -6) 10588) nil (25364 41414 739581 706000) 0 nil])
([nil nil ((#("home/" 0 5 (face font-lock-string-face fontified t)) . -10577) (undo-tree-id947 . -5) (undo-tree-id948 . -1) 10582) nil (25364 41414 739579 288000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -10576) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) 10577) nil (25364 41414 739576 18000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10596 . 10597) (nil fontified nil 10587 . 10597) (nil fontified nil 10581 . 10587) (nil fontified nil 10576 . 10581) (10576 . 10597)) nil (25364 41414 739571 772000) 0 nil])
([nil nil ((#("Downloads/" 0 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face rear-nonsticky t fontified t)) . -10587) (undo-tree-id943 . -10) 10597) nil (25364 41414 739569 621000) 0 nil])
([nil nil ((#("zhang/" 0 6 (face font-lock-string-face fontified t)) . -10581) (undo-tree-id942 . -6) 10587) nil (25364 41414 739567 150000) 0 nil])
([nil nil ((#("home/" 0 5 (face font-lock-string-face fontified t)) . -10576) (undo-tree-id938 . -5) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -2) 10581) nil (25364 41414 739563 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10634 . 10635) (nil fontified nil 10576 . 10635) (10576 . 10635)) nil (25364 41414 739548 583000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10574) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 10575 (t 25364 41414 751098 65000)) nil (25364 41432 434756 476000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41432 434741 988000) 0 nil])
([nil nil ((10574 . 10578) (t 25364 41432 487765 820000)) nil (25364 41468 652510 624000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10574) (undo-tree-id978 . -1) (#("t" 0 1 (fontified t)) . -10575) (undo-tree-id979 . -1) (#("o" 0 1 (fontified t)) . -10576) (undo-tree-id980 . -1) (#("p" 0 1 (fontified t)) . -10577) (undo-tree-id981 . -1) 10578) nil (25364 41468 652508 413000) 0 nil])
([nil nil ((10568 . 10574)) nil (25364 41468 652502 794000) 0 nil])
([nil nil ((10574 . 10576)) nil (25364 41468 652501 830000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652500 835000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -10576) (undo-tree-id976 . -1) (undo-tree-id977 . -1) 10577) nil (25364 41468 652499 647000) 0 nil])
([nil nil ((10576 . 10578)) nil (25364 41468 652496 832000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10576) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (#("r" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -10577) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 10578) nil (25364 41468 652494 948000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652487 73000) 0 nil])
([nil nil ((10576 . 10577)) nil (25364 41468 652485 947000) 0 nil])
([nil nil ((10576 . 10580) (#("f" 0 1 (fontified nil)) . 10576) (10576 . 10577) (#("from (as From)" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-3-face) fontified t) 6 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 13 (face font-lock-type-face fontified t) 13 14 (face (rainbow-delimiters-depth-3-face) fontified t)) . -10576) (undo-tree-id963 . -14) (10576 . 10590) (#("f" 0 1 (fontified t)) . -10576) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) 10577) nil (25364 41468 652483 920000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10580) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) 10581) nil (25364 41468 652476 175000) 0 nil])
([nil nil ((10580 . 10582)) nil (25364 41468 652471 857000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 10581) (undo-tree-id955 . 1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) nil (25364 41468 652469 396000) 0 nil])
([nil nil ((10587 . 10588) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -10587) (10587 . 10588)) nil (25364 41468 652454 200000) 0 nil])
([nil nil ((10590 . 10598) (t 25364 41468 674434 708000)) nil (25364 41481 372394 710000) 0 nil])
([nil nil ((10598 . 10599)) nil (25364 41481 372393 449000) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-type-face fontified t)) . -10598) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 10599) nil (25364 41481 372391 824000) 0 nil])
([nil nil ((10598 . 10600)) nil (25364 41481 372387 397000) 0 nil])
([nil nil ((10600 . 10604)) nil (25364 41481 372386 296000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 10603) (undo-tree-id982 . 1)) nil (25364 41481 372384 303000) 0 nil])
([nil nil ((10664 . 10665) (#(")" 0 1 (face font-lock-string-face fontified nil)) . -10664) (10664 . 10665)) nil (25364 41481 372372 361000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -10631) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) 10632 (t 25364 41481 424435 491000)) nil (25364 41503 733124 766000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -10633) (undo-tree-id992 . -1) (undo-tree-id993 . -1) 10634) nil (25364 41503 733120 462000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -10638) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 10639) nil (25364 41503 733117 267000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -10644) (undo-tree-id988 . -1) (undo-tree-id989 . -1) 10645) nil (25364 41503 733113 190000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -10648) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) 10649) nil (25364 41503 733105 939000) 0 nil])
([nil nil ((10662 . 10667) (t 25364 41503 784436 864000)) nil (25364 41552 281477 165000) 0 nil])
([nil nil ((10667 . 10669)) nil (25364 41552 281476 110000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10667) (undo-tree-id1025 . -1) (#("l" 0 1 (fontified t)) . -10668) (undo-tree-id1026 . -1) 10669) nil (25364 41552 281474 774000) 0 nil])
([nil nil ((10547 . 10549)) nil (25364 41552 281471 684000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -10547) (undo-tree-id1023 . -1) (#(":" 0 1 (fontified t)) . -10548) (undo-tree-id1024 . -1) 10549) nil (25364 41552 281470 386000) 0 nil])
([nil nil ((10547 . 10553)) nil (25364 41552 281467 659000) 0 nil])
([nil nil ((10549 . 10558) (#("Audi" 0 4 (fontified nil)) . 10549) (10549 . 10553) (#("AudioClip" 0 9 (fontified nil)) . -10549) (10549 . 10558) (#("Audi" 0 4 (face font-lock-type-face fontified t)) . -10549) (undo-tree-id1022 . -4) 10553) nil (25364 41552 281466 104000) 0 nil])
([nil nil ((10678 . 10680)) nil (25364 41552 281463 376000) 0 nil])
([nil nil ((10680 . 10682)) nil (25364 41552 281462 544000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10680) (undo-tree-id1020 . -1) (#("p" 0 1 (fontified t)) . -10681) (undo-tree-id1021 . -1) 10682) nil (25364 41552 281461 252000) 0 nil])
([nil nil ((10680 . 10682)) nil (25364 41552 281458 630000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10680) (undo-tree-id1018 . -1) (#("i" 0 1 (fontified t)) . -10681) (undo-tree-id1019 . -1) 10682) nil (25364 41552 281457 329000) 0 nil])
([nil nil ((10680 . 10683)) nil (25364 41552 281454 618000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -10678) (undo-tree-id1013 . -1) (#("l" 0 1 (fontified t)) . -10679) (undo-tree-id1014 . -1) (#("i" 0 1 (fontified t)) . -10680) (undo-tree-id1015 . -1) (#("p" 0 1 (fontified t)) . -10681) (undo-tree-id1016 . -1) (#("." 0 1 (fontified t)) . -10682) (undo-tree-id1017 . -1) 10683) nil (25364 41552 281452 787000) 0 nil])
([nil nil ((10678 . 10680)) nil (25364 41552 281447 93000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10679) (undo-tree-id1012 . -1) 10680) nil (25364 41552 281446 12000) 0 nil])
([nil nil ((10679 . 10693)) nil (25364 41552 281444 151000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -10689) (undo-tree-id1008 . -1) (#(" " 0 1 (fontified t)) . -10690) (undo-tree-id1009 . -1) (#("c" 0 1 (fontified t)) . -10691) (undo-tree-id1010 . -1) (#("l" 0 1 (fontified t)) . -10692) (undo-tree-id1011 . -1) 10693) nil (25364 41552 281442 291000) 0 nil])
([nil nil ((10689 . 10690)) nil (25364 41552 281437 564000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10689) (undo-tree-id1007 . -1) 10690) nil (25364 41552 281436 556000) 0 nil])
([nil nil ((10689 . 10693)) nil (25364 41552 281434 635000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10692) (undo-tree-id1006 . -1) 10693) nil (25364 41552 281433 551000) 0 nil])
([nil nil ((10692 . 10694)) nil (25364 41552 281431 534000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10693) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) 10694) nil (25364 41552 281430 292000) 0 nil])
([nil nil ((10693 . 10697)) nil (25364 41552 281427 442000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10695) (undo-tree-id1002 . -1) (#("." 0 1 (fontified t)) . -10696) (undo-tree-id1003 . -1) 10697) nil (25364 41552 281426 114000) 0 nil])
([nil nil ((10695 . 10696)) nil (25364 41552 281423 252000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10695) (undo-tree-id1001 . -1) 10696) nil (25364 41552 281422 3000) 0 nil])
([nil nil ((10695 . 10698)) nil (25364 41552 281420 32000) 0 nil])
([nil nil ((10696 . 10700) (#("pl" 0 2 (fontified nil)) . 10696) (10696 . 10698) (#("play" 0 4 (fontified nil)) . -10696) (10696 . 10700) (#("pl" 0 2 (fontified t)) . -10696) (undo-tree-id997 . -2) (undo-tree-id998 . -1) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) 10698) nil (25364 41552 281417 558000) 0 nil])
([nil nil ((10700 . 10702)) nil (25364 41552 281404 590000) 0 nil])
([nil nil ((10702 . 10703)) nil (25364 41552 281399 55000) 0 nil])
([nil nil ((10703 . 10708) (t 25364 41552 304439 842000)) nil (25364 41568 215717 388000) 0 nil])
([nil nil ((10672 . 10673)) nil (25364 41568 215711 480000) 0 nil])
([nil nil ((10709 . 10717) (t 25364 41568 267774 155000)) nil (25364 41600 997675 187000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -10713) (undo-tree-id1031 . -1) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -10714) (undo-tree-id1032 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -10715) (undo-tree-id1033 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10716) (undo-tree-id1034 . -1) 10717) nil (25364 41600 997673 424000) 0 nil])
([nil nil ((10714 . 10718) (10713 . 10715)) nil (25364 41600 997668 233000) 0 nil])
([nil nil ((10718 . 10729)) nil (25364 41600 997666 779000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -10727) (undo-tree-id1029 . -1) (#("t" 0 1 (fontified t)) . -10728) (undo-tree-id1030 . -1) 10729) nil (25364 41600 997665 371000) 0 nil])
([nil nil ((10727 . 10729)) nil (25364 41600 997662 41000) 0 nil])
([nil nil ((10730 . 10731)) nil (25364 41600 997661 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10730) (undo-tree-id1028 . -1) 10731) nil (25364 41600 997659 926000) 0 nil])
([nil nil ((10730 . 10738)) nil (25364 41600 997657 70000) 0 nil])
([nil nil ((254 . 283) (254 . 255) (10733 . 10733) (10733 . 10740) (#("chann" 0 5 (fontified nil)) . 10733) (10733 . 10738) (#("channel (use std::sync::mpsc::channel)" 0 38 (fontified nil)) . -10733) (10733 . 10771) (#("chann" 0 5 (fontified t)) . -10733) (undo-tree-id1027 . -5) 10738) nil (25364 41600 997654 273000) 0 nil])
([nil nil ((10773 . 10775) (10770 . 10774)) nil (25364 41600 997642 675000) 0 nil])
([nil nil ((10776 . 10777)) nil (25364 41600 997637 584000) 0 nil])
([nil nil ((10777 . 10782) (t 25364 41601 47776 167000)) nil (25364 41646 196728 221000) 0 nil])
([nil nil ((10782 . 10786)) nil (25364 41646 196726 831000) 0 nil])
([nil nil ((10782 . 10788) (#("hand" 0 4 (fontified nil)) . 10782) (10782 . 10786) (#("handle" 0 6 (fontified nil)) . -10782) (10782 . 10788) (#("hand" 0 4 (fontified t)) . -10782) (undo-tree-id1050 . -4) 10786) nil (25364 41646 196724 914000) 0 nil])
([nil nil ((10788 . 10793)) nil (25364 41646 196720 975000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10788) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("c" 0 1 (fontified t)) . -10789) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#("o" 0 1 (fontified t)) . -10790) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("n" 0 1 (fontified t)) . -10791) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("n" 0 1 (fontified t)) . -10792) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) 10793) nil (25364 41646 196715 935000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10777) (10777 . 10778) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10777) (10777 . 10778) (10776 . 10778)) nil (25364 41646 196043 472000) 0 nil])
([nil nil ((10790 . 10795) (t 25364 41646 217778 940000)) nil (25364 41669 591849 273000) 0 nil])
([nil nil ((10795 . 10798)) nil (25364 41669 591848 82000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -10796) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("t" 0 1 (fontified t)) . -10797) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 10798) nil (25364 41669 591846 160000) 0 nil])
([nil nil ((10796 . 10799)) nil (25364 41669 591840 309000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10797) (undo-tree-id1051 . -1) (#("r" 0 1 (fontified t)) . -10798) (undo-tree-id1052 . -1) 10799) nil (25364 41669 591837 978000) 0 nil])
([nil nil ((10797 . 10798)) nil (25364 41669 591829 992000) 0 nil])
([nil nil ((10733 . 10734)) nil (25364 41669 591825 224000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10798) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) 10799 (t 25364 41669 644447 45000)) nil (25364 41705 113818 372000) 0 nil])
([nil nil ((#("connec" 0 6 (fontified t)) . -10792) (undo-tree-id1068 . -6) (undo-tree-id1069 . -6) (undo-tree-id1070 . -6) 10798) nil (25364 41705 113813 867000) 0 nil])
([nil nil ((10792 . 10794)) nil (25364 41705 113809 939000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10793) (undo-tree-id1067 . -1) 10794) nil (25364 41705 113808 699000) 0 nil])
([nil nil ((10793 . 10794)) nil (25364 41705 113806 483000) 0 nil])
([nil nil ((10792 . 10804) (#("co" 0 2 (fontified nil)) . 10792) (10792 . 10794) (#("connect_done" 0 12 (fontified nil)) . -10792) (10792 . 10804) (#("co" 0 2 (fontified t)) . -10792) (undo-tree-id1066 . -2) 10794) nil (25364 41705 113804 861000) 0 nil])
([nil nil ((10805 . 10812) (10804 . 10806)) nil (25364 41705 113801 412000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -10810) (undo-tree-id1065 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 10811)) nil (25364 41705 113799 697000) 0 nil])
([nil nil ((10810 . 10815)) nil (25364 41705 113797 620000) 0 nil])
([nil nil ((10816 . 10817)) nil (25364 41705 113796 696000) 0 nil])
([nil nil ((10815 . 10816) (10816 . 10820) (#("	" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 10815) (10815 . 10816) (10814 . 10816)) nil (25364 41705 113795 355000) 0 nil])
([nil nil ((10816 . 10820)) nil (25364 41705 113793 457000) 0 nil])
([nil nil ((10816 . 10823) (#("done" 0 4 (fontified nil)) . 10816) (10816 . 10820) (#("done_tx" 0 7 (fontified nil)) . -10816) (10816 . 10823) (#("done" 0 4 (fontified t)) . -10816) (undo-tree-id1064 . -4) 10820) nil (25364 41705 113791 686000) 0 nil])
([nil nil ((10829 . 10831) (10823 . 10830)) nil (25364 41705 113788 416000) 0 nil])
([nil nil ((10832 . 10833)) nil (25364 41705 113787 161000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10832) (undo-tree-id1063 . -1) 10833) nil (25364 41705 113785 703000) 0 nil])
([nil nil ((10832 . 10834)) nil (25364 41705 113783 607000) 0 nil])
([nil nil ((10833 . 10839) (#("u" 0 1 (fontified nil)) . 10833) (10833 . 10834) (#("unwrap" 0 6 (fontified nil)) . -10833) (10833 . 10839) (#("u" 0 1 (fontified t)) . -10833) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 10834) nil (25364 41705 113781 676000) 0 nil])
([nil nil ((10839 . 10841)) nil (25364 41705 113776 386000) 0 nil])
([nil nil ((10841 . 10843)) nil (25364 41705 113775 310000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -10841) (undo-tree-id1058 . -1) (#(";" 0 1 (fontified t)) . -10842) (undo-tree-id1059 . -1) 10843) nil (25364 41705 113772 647000) 0 nil])
([nil nil ((10841 . 10842)) nil (25364 41705 113760 229000) 0 nil])
([nil nil ((10850 . 10855) (t 25364 41705 134449 224000)) nil (25364 41719 261561 223000) 0 nil])
([nil nil ((10855 . 10859)) nil (25364 41719 261560 52000) 0 nil])
([nil nil ((10859 . 10861)) nil (25364 41719 261559 129000) 0 nil])
([nil nil ((10855 . 10862) (#("done_r" 0 6 (fontified nil)) . 10855) (10855 . 10861) (#("done_rx" 0 7 (fontified nil)) . -10855) (10855 . 10862) (#("done_r" 0 6 (fontified t)) . -10855) (undo-tree-id1080 . -6) (undo-tree-id1081 . -6) (undo-tree-id1082 . -6) 10861) nil (25364 41719 261557 574000) 0 nil])
([nil nil ((10862 . 10865)) nil (25364 41719 261552 965000) 0 nil])
([nil nil ((10863 . 10867) (#("re" 0 2 (fontified nil)) . 10863) (10863 . 10865) (#("recv" 0 4 (fontified nil)) . -10863) (10863 . 10867) (#("re" 0 2 (fontified t)) . -10863) (undo-tree-id1076 . -2) (undo-tree-id1077 . -1) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) 10865) nil (25364 41719 261551 236000) 0 nil])
([nil nil ((10867 . 10869)) nil (25364 41719 261545 828000) 0 nil])
([nil nil ((10869 . 10872)) nil (25364 41719 261544 903000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -10870) (undo-tree-id1074 . -1) (#(";" 0 1 (fontified t)) . -10871) (undo-tree-id1075 . -1) 10872) nil (25364 41719 261542 245000) 0 nil])
([nil nil ((10870 . 10871)) nil (25364 41719 261530 162000) 0 nil])
([nil nil ((10591 . 10592) (#(" " 0 1 (fontified nil)) . 10590) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (10591 . 10592) (t 25364 41719 311116 759000)) nil (25364 41732 784124 961000) 0 nil])
([nil nil ((10564 . 10569) (t 25364 41732 807784 255000)) nil (25364 41838 219409 328000) 0 nil])
([nil nil ((10569 . 10574)) nil (25364 41838 219408 125000) 0 nil])
([nil nil ((214 . 228) (214 . 215) (10570 . 10570) (10570 . 10575) (#("info" 0 4 (fontified nil)) . 10570) (10570 . 10574) (#("info! (use log::info)" 0 21 (fontified nil)) . -10570) (10570 . 10591) (#("info" 0 4 (fontified t)) . -10570) (undo-tree-id1105 . -4) 10574) nil (25364 41838 219406 252000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -10584) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (#("i" 0 1 (fontified t)) . -10585) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -10586) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (#("f" 0 1 (fontified t)) . -10587) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (#("o" 0 1 (fontified t)) . -10588) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (#("!" 0 1 (fontified t)) . -10589) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) 10590) nil (25364 41838 219400 422000) 0 nil])
([nil nil ((10584 . 10594)) nil (25364 41838 219382 46000) 0 nil])
([nil nil ((10594 . 10596)) nil (25364 41838 219381 74000) 0 nil])
([nil nil ((10596 . 10597)) nil (25364 41838 219380 97000) 0 nil])
([nil nil ((10595 . 10596)) nil (25364 41838 219378 980000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10595) (undo-tree-id1086 . -1) 10596) nil (25364 41838 219376 712000) 0 nil])
([nil nil ((10596 . 10608) (10595 . 10597) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10595) (10595 . 10596)) nil (25364 41838 219364 580000) 0 nil])
([nil nil ((10752 . 10757) (t 25364 41838 271124 66000)) nil (25364 41854 887993 258000) 0 nil])
([nil nil ((10757 . 10760)) nil (25364 41854 887991 958000) 0 nil])
([nil nil ((10760 . 10765)) nil (25364 41854 887990 861000) 0 nil])
([nil nil ((10762 . 10767) (#("inf" 0 3 (fontified nil)) . 10762) (10762 . 10765) (#("info!" 0 5 (fontified nil)) . -10762) (10762 . 10767) (#("inf" 0 3 (fontified t)) . -10762) (undo-tree-id1106 . -3) (undo-tree-id1107 . -1) (undo-tree-id1108 . -2) 10765) nil (25364 41854 887988 424000) 0 nil])
([nil nil ((10769 . 10779) (10768 . 10770) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10768) (10768 . 10769) (10767 . 10769)) nil (25364 41854 887977 151000) 0 nil])
([nil nil ((10779 . 10784)) nil (25364 41854 887973 909000) 0 nil])
([nil nil ((10786 . 10787)) nil (25364 41854 887967 996000) 0 nil])
([nil nil ((10784 . 10793) (t 25364 41854 911125 87000)) nil (25364 41859 219689 212000) 0 nil])
([nil nil ((10963 . 10968) (t 25364 41859 271125 355000)) nil (25364 41873 19462 597000) 0 nil])
([nil nil ((10968 . 10975)) nil (25364 41873 19461 279000) 0 nil])
([nil nil ((10973 . 10978) (#("in" 0 2 (fontified nil)) . 10973) (10973 . 10975) (#("info!" 0 5 (fontified nil)) . -10973) (10973 . 10978) (#("in" 0 2 (face font-lock-keyword-face fontified t)) . -10973) (undo-tree-id1109 . -2) (undo-tree-id1110 . -1) (undo-tree-id1111 . -2) 10975) nil (25364 41873 19458 850000) 0 nil])
([nil nil ((10980 . 10984) (10979 . 10981) (#("\"" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10979) (10979 . 10980) (10978 . 10980)) nil (25364 41873 19447 564000) 0 nil])
([nil nil ((10986 . 10987)) nil (25364 41873 19441 191000) 0 nil])
([nil nil ((#("OutputDevices" 0 13 (face font-lock-type-face fontified t)) . -62) (undo-tree-id1140 . -13) (undo-tree-id1141 . -13) (undo-tree-id1142 . -13) 75 (t 25364 41873 41126 200000)) nil (25364 41947 944584 819000) 0 nil])
([nil nil ((#("Device, " 0 6 (face font-lock-type-face fontified t) 6 8 (fontified t)) . -54) (undo-tree-id1135 . -8) (undo-tree-id1136 . -6) (undo-tree-id1137 . -8) (undo-tree-id1138 . -8) (undo-tree-id1139 . -8) 62) nil (25364 41947 944580 407000) 0 nil])
([nil nil ((#("StreamConfig, " 0 12 (face font-lock-type-face fontified t) 12 14 (fontified t)) . -40) (undo-tree-id1130 . -14) (undo-tree-id1131 . -14) (undo-tree-id1132 . -14) (undo-tree-id1133 . -12) (undo-tree-id1134 . -14) 54) nil (25364 41947 944574 418000) 0 nil])
([nil nil ((#("SampleFormat, " 0 12 (face font-lock-type-face fontified t) 12 14 (fontified t)) . -26) (undo-tree-id1123 . -14) (undo-tree-id1124 . -14) (undo-tree-id1125 . -14) (undo-tree-id1126 . -12) (undo-tree-id1127 . -14) (undo-tree-id1128 . -14) (undo-tree-id1129 . -14) 40) nil (25364 41956 117607 536000) 0 nil])
([nil nil ((#("Data, " 0 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -12) (undo-tree-id1155 . -4) (undo-tree-id1156 . -6) (undo-tree-id1157 . -6) (undo-tree-id1158 . -6) (undo-tree-id1159 . -6) (undo-tree-id1160 . -6) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (undo-tree-id1163 . -6) 18) nil (25364 41970 485187 213000) 0 nil] [nil nil ((#("Sample, " 0 6 (face font-lock-type-face fontified t) 6 8 (fontified t)) . -18) (undo-tree-id1118 . -8) (undo-tree-id1119 . -8) (undo-tree-id1120 . -8) (undo-tree-id1121 . -8) (undo-tree-id1122 . -6) 26) ((18 . 26)) (25364 41947 946458 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -19) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (#("," 0 1 (fontified t)) . -20) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) 21) nil (25364 41970 485173 856000) 0 nil])
([nil nil ((#("Data, " 0 4 (face font-lock-type-face fontified t) 4 6 (fontified t)) . -12) (undo-tree-id1112 . -6) (undo-tree-id1113 . -6) (undo-tree-id1114 . -6) (undo-tree-id1115 . -4) (undo-tree-id1116 . -6) (undo-tree-id1117 . -6) 18) ((12 . 18)) (25364 41947 944549 256000) 0 nil])
([nil nil ((#("use log::info;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 14 (fontified t)) . 157) (undo-tree-id1167 . -4) (undo-tree-id1168 . -13) (undo-tree-id1169 . -14) (undo-tree-id1170 . -14) (undo-tree-id1171 . -14) (t 25364 41970 507798 846000)) nil (25364 41993 361902 243000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 157) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1)) nil (25364 41993 361891 815000) 0 nil])
([nil nil ((#("WrapErr" 0 7 (face font-lock-type-face fontified t)) . -583) (undo-tree-id1182 . -7) (undo-tree-id1183 . -7) (undo-tree-id1184 . -7) (undo-tree-id1185 . -7) (undo-tree-id1186 . -7) 590 (t 25364 41993 384466 917000)) nil (25364 41998 801897 445000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -581) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (#(" " 0 1 (fontified t)) . -582) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 583) nil (25364 41998 801886 996000) 0 nil])
([nil nil ((#("info" 0 4 (face font-lock-preprocessor-face fontified t)) . -10508) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) 10512 (t 25364 41998 824467 250000)) nil (25364 42056 493986 712000) 0 nil])
([nil nil ((#("log::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -10503) (undo-tree-id1202 . -5) (undo-tree-id1203 . -5) 10508) nil (25364 42056 493982 518000) 0 nil])
([nil nil ((10503 . 10508)) nil (25364 42056 493979 33000) 0 nil])
([nil nil ((10503 . 10510) (#("print" 0 5 (fontified nil)) . 10503) (10503 . 10508) (#("println" 0 7 (fontified nil)) . -10503) (10503 . 10510) (#("print" 0 5 (face rust-builtin-formatting-macro fontified t)) . -10503) (undo-tree-id1201 . -5) 10508) nil (25364 42056 493976 919000) 0 nil])
([nil nil ((#("info" 0 4 (face font-lock-preprocessor-face fontified t)) . -10679) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) 10683) nil (25364 42056 493972 764000) 0 nil])
([nil nil ((#("log::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -10674) (undo-tree-id1195 . -5) (undo-tree-id1196 . -5) (undo-tree-id1197 . -5) 10679) nil (25364 42056 493967 943000) 0 nil])
([nil nil ((10674 . 10679)) nil (25364 42056 493963 335000) 0 nil])
([nil nil ((10674 . 10681) (#("print" 0 5 (fontified nil)) . 10674) (10674 . 10679) (#("println" 0 7 (fontified nil)) . -10674) (10674 . 10681) (#("print" 0 5 (face rust-builtin-formatting-macro fontified t)) . -10674) (undo-tree-id1194 . -5) 10679) nil (25364 42056 493961 208000) 0 nil])
([nil nil ((#("info" 0 4 (face font-lock-preprocessor-face fontified t)) . -10888) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) 10892) nil (25364 42056 493957 86000) 0 nil])
([nil nil ((#("log::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -10883) (undo-tree-id1190 . -5) (undo-tree-id1191 . -5) 10888) nil (25364 42056 493953 84000) 0 nil])
([nil nil ((10883 . 10888)) nil (25364 42056 493948 485000) 0 nil])
([nil nil ((10883 . 10890) (#("print" 0 5 (fontified nil)) . 10883) (10883 . 10888) (#("println" 0 7 (fontified nil)) . -10883) (10883 . 10890) (#("print" 0 5 (face rust-builtin-formatting-macro fontified t)) . -10883) (undo-tree-id1187 . -5) (undo-tree-id1188 . -5) (undo-tree-id1189 . -5) 10888) nil (25364 42056 493942 407000) 0 nil])
([nil nil ((8841 . 8849) (t 25364 42056 517804 126000)) nil (25364 42384 616505 338000) 0 nil])
([nil nil ((8849 . 8853)) nil (25364 42384 616503 850000) 0 nil])
([nil nil ((8849 . 8858) (#("Atom" 0 4 (fontified nil)) . 8849) (8849 . 8853) (#("AtomicU64" 0 9 (fontified nil)) . -8849) (8849 . 8858) (#("Atom" 0 4 (face font-lock-type-face fontified t)) . -8849) (undo-tree-id1220 . -4) 8853) nil (25364 42384 616502 167000) 0 nil])
([nil nil ((8858 . 8860)) nil (25364 42384 616498 841000) 0 nil])
([nil nil ((8860 . 8869) (#("fetch_add" 0 9 (fontified nil)) . -8860) (8860 . 8869)) nil (25364 42384 616497 584000) 0 nil])
([nil nil ((8870 . 8875) (8869 . 8871)) nil (25364 42384 616495 792000) 0 nil])
([nil nil ((8871 . 8878) (#("TIME" 0 4 (fontified nil)) . 8871) (8871 . 8875) (#("TIME_MS" 0 7 (face font-lock-type-face fontified t)) . -8871) (undo-tree-id1218 . -7) (8871 . 8878) (#("TIME" 0 4 (face font-lock-type-face fontified t)) . -8871) (undo-tree-id1219 . -4) 8875) nil (25364 42384 616493 659000) 0 nil])
([nil nil ((8878 . 8881)) nil (25364 42384 616489 628000) 0 nil])
([nil nil ((8881 . 8886)) nil (25364 42384 616488 650000) 0 nil])
([nil nil ((157 . 180) (157 . 158) (8881 . 8881) (8881 . 8889) (#("Order" 0 5 (fontified nil)) . 8881) (8881 . 8886) (#("Ordering (use std::cmp::Ordering)" 0 8 (face font-lock-type-face fontified t) 8 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-9-face) fontified t) 10 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 17 (face font-lock-constant-face fontified t) 17 19 (fontified t) 19 22 (face font-lock-constant-face fontified t) 22 24 (fontified t) 24 32 (face font-lock-type-face fontified t) 32 33 (face (rainbow-delimiters-depth-9-face) fontified t)) . -8881) (undo-tree-id1215 . -33) (8881 . 8914) (#("Order" 0 5 (face font-lock-type-face fontified t)) . -8881) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) 8886) nil (25364 42384 616486 510000) 0 nil])
([nil nil ((8913 . 8918)) nil (25364 42384 616480 793000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8915) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("e" 0 1 (fontified t)) . -8916) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (#("l" 0 1 (fontified t)) . -8917) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) 8918) nil (25364 42384 616477 864000) 0 nil])
([nil nil ((8915 . 8920)) nil (25364 42384 616462 38000) 0 nil])
([nil nil ((8921 . 8922)) nil (25364 42384 616455 729000) 0 nil])
([nil nil ((#("Relax" 0 5 (face font-lock-type-face fontified t)) . -8915) (undo-tree-id1238 . -5) (undo-tree-id1239 . -5) (undo-tree-id1240 . -5) 8920 (t 25364 42384 637824 268000)) nil (25364 42419 443872 512000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) 8915) nil (25364 42419 443867 988000) 0 nil])
([nil nil ((8913 . 8915)) nil (25364 42419 443863 359000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1232 . -1) (#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1233 . -1) 8915) nil (25364 42419 443862 13000) 0 nil])
([nil nil ((#("Ordering" 0 8 (face font-lock-type-face fontified t)) . -8905) (undo-tree-id1230 . -8) (undo-tree-id1231 . -8) 8913) nil (25364 42419 443857 508000) 0 nil])
([nil nil ((8905 . 8911)) nil (25364 42419 443684 252000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8910) (undo-tree-id1229 . -1) 8911) nil (25364 42419 443683 147000) 0 nil])
([nil nil ((8910 . 8912)) nil (25364 42419 443681 135000) 0 nil])
([nil nil ((8912 . 8914)) nil (25364 42419 443680 237000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8912) (undo-tree-id1227 . -1) (#(":" 0 1 (fontified t)) . -8913) (undo-tree-id1228 . -1) 8914) nil (25364 42419 443678 995000) 0 nil])
([nil nil ((8912 . 8913)) nil (25364 42419 443675 842000) 0 nil])
([nil nil ((8910 . 8914) (#("syn" 0 3 (fontified nil)) . 8910) (8910 . 8913) (#("sync" 0 4 (fontified nil)) . -8910) (8910 . 8914) (#("syn" 0 3 (fontified t)) . -8910) (undo-tree-id1226 . -3) 8913) nil (25364 42419 443674 389000) 0 nil])
([nil nil ((8914 . 8916)) nil (25364 42419 443671 366000) 0 nil])
([nil nil ((8916 . 8918)) nil (25364 42419 443670 433000) 0 nil])
([nil nil ((8916 . 8922) (#("At" 0 2 (fontified nil)) . 8916) (8916 . 8918) (#("atomic" 0 6 (fontified nil)) . -8916) (8916 . 8922) (#("At" 0 2 (face font-lock-type-face fontified t)) . -8916) (undo-tree-id1225 . -2) 8918) nil (25364 42419 443668 751000) 0 nil])
([nil nil ((8922 . 8926)) nil (25364 42419 443665 723000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8924) (undo-tree-id1223 . -1) (#("r" 0 1 (fontified t)) . -8925) (undo-tree-id1224 . -1) 8926) nil (25364 42419 443664 424000) 0 nil])
([nil nil ((8924 . 8925)) nil (25364 42419 443661 97000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8924) (undo-tree-id1222 . -1) 8925) nil (25364 42419 443659 972000) 0 nil])
([nil nil ((8924 . 8925)) nil (25364 42419 443657 372000) 0 nil])
([nil nil ((8924 . 8932) (#("O" 0 1 (fontified nil)) . 8924) (8924 . 8925) (#("Ordering" 0 8 (fontified nil)) . -8924) (8924 . 8932) (#("O" 0 1 (face font-lock-type-face fontified t)) . -8924) (undo-tree-id1221 . -1) 8925) nil (25364 42419 443655 105000) 0 nil])
([nil nil ((8932 . 8934)) nil (25364 42419 443644 466000) 0 nil])
([nil nil ((8934 . 8941) (#("Relaxed" 0 7 (fontified nil)) . -8934) (8934 . 8941)) nil (25364 42419 443638 587000) 0 nil])
([nil nil ((#("atomic::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -8916) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) 8924 (t 25364 42419 454493 72000)) nil (25364 42423 438250 341000) 0 nil])
([nil nil ((#("sync::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -8910) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) 8916) nil (25364 42423 438244 992000) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -8905) (undo-tree-id1241 . -5) (undo-tree-id1242 . -5) 8910) nil (25364 42423 438237 173000) 0 nil])
([nil nil ((8905 . 8906) (t 25364 42423 491159 986000)) nil (25364 42452 401252 883000) 0 nil])
([nil nil ((8906 . 8921)) nil (25364 42452 401251 343000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8920) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) 8921) nil (25364 42452 401248 991000) 0 nil])
([nil nil ((8920 . 8922)) nil (25364 42452 401239 963000) 0 nil])
([nil nil ((8922 . 8924)) nil (25364 42452 401235 326000) 0 nil])
([nil nil ((#("atomic" 0 6 (face font-lock-constant-face fontified t)) . -8916) (undo-tree-id1273 . -6) (undo-tree-id1274 . -4) (undo-tree-id1275 . -6) (undo-tree-id1276 . -4) 8922 (t 25364 42452 454495 97000)) nil (25364 42471 764084 567000) 0 nil])
([nil nil ((8916 . 8917)) nil (25364 42471 764079 639000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) 8916) nil (25364 42471 764077 958000) 0 nil])
([nil nil ((8914 . 8915)) nil (25364 42471 764071 557000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -8914) (undo-tree-id1266 . -1) 8915) nil (25364 42471 764070 395000) 0 nil])
([nil nil ((8914 . 8917)) nil (25364 42471 764068 370000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8916) (undo-tree-id1265 . -1) 8917) nil (25364 42471 764067 248000) 0 nil])
([nil nil ((8916 . 8919)) nil (25364 42471 764065 288000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1264 . -1) 8919) nil (25364 42471 764064 111000) 0 nil])
([nil nil ((8918 . 8920)) nil (25364 42471 764062 167000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8914) (undo-tree-id1258 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1259 . -1) (#("a" 0 1 (fontified t)) . -8916) (undo-tree-id1260 . -1) (#("t" 0 1 (fontified t)) . -8917) (undo-tree-id1261 . -1) (#("o" 0 1 (fontified t)) . -8918) (undo-tree-id1262 . -1) (#("m" 0 1 (fontified t)) . -8919) (undo-tree-id1263 . -1) 8920) nil (25364 42471 764059 812000) 0 nil])
([nil nil ((8914 . 8916)) nil (25364 42471 764052 388000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -8914) (undo-tree-id1256 . -1) (#(":" 0 1 (fontified t)) . -8915) (undo-tree-id1257 . -1) 8916) nil (25364 42471 764050 636000) 0 nil])
([nil nil ((8914 . 8917)) nil (25364 42471 764047 255000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8916) (undo-tree-id1255 . -1) 8917) nil (25364 42471 764045 948000) 0 nil])
([nil nil ((8916 . 8919)) nil (25364 42471 764043 347000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1254 . -1) 8919) nil (25364 42471 764042 56000) 0 nil])
([nil nil ((8918 . 8920)) nil (25364 42471 764039 690000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8918) (undo-tree-id1252 . -1) (#("o" 0 1 (fontified t)) . -8919) (undo-tree-id1253 . -1) 8920) nil (25364 42471 764037 838000) 0 nil])
([nil nil ((8918 . 8922)) nil (25364 42471 764033 288000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8922) (undo-tree-id1250 . -1) (undo-tree-id1251 . 1) 8923) nil (25364 42471 764028 63000) 0 nil])
([nil nil ((10961 . 10965) (#("    " 0 4 (fontified nil)) . 10960) (undo-tree-id1305 . -4) (10959 . 10965) (t 25364 42471 817829 619000)) nil (25364 42516 94693 522000) 0 nil])
([nil nil ((10965 . 10968)) nil (25364 42516 94690 604000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10965) (undo-tree-id1302 . -1) (#("h" 0 1 (fontified t)) . -10966) (undo-tree-id1303 . -1) (#("e" 0 1 (fontified t)) . -10967) (undo-tree-id1304 . -1) 10968) nil (25364 42516 94688 668000) 0 nil])
([nil nil ((10962 . 10966) (#("    " 0 4 (fontified nil)) . 10961) (undo-tree-id1301 . -4) (10965 . 10966)) nil (25364 42516 94683 526000) 0 nil])
([nil nil ((10961 . 10965)) nil (25364 42516 94680 959000) 0 nil])
([nil nil ((10965 . 10968)) nil (25364 42516 94679 878000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10967) (undo-tree-id1300 . -1) 10968) nil (25364 42516 94678 458000) 0 nil])
([nil nil ((10967 . 10970)) nil (25364 42516 94676 95000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -10965) (undo-tree-id1295 . -1) (#("h" 0 1 (fontified t)) . -10966) (undo-tree-id1296 . -1) (#("r" 0 1 (fontified t)) . -10967) (undo-tree-id1297 . -1) (#("e" 0 1 (fontified t)) . -10968) (undo-tree-id1298 . -1) (#("a" 0 1 (fontified t)) . -10969) (undo-tree-id1299 . -1) 10970) nil (25364 42516 94673 567000) 0 nil])
([nil nil ((10965 . 10971)) nil (25364 42516 94666 483000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10970) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) 10971) nil (25364 42516 94664 985000) 0 nil])
([nil nil ((10970 . 10973)) nil (25364 42516 94661 660000) 0 nil])
([nil nil ((10970 . 10976) (#("thr" 0 3 (fontified t)) . -10970) (undo-tree-id1289 . -3) (undo-tree-id1290 . -2) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) 10973) nil (25364 42516 94659 856000) 0 nil])
([nil nil ((10976 . 10980)) nil (25364 42516 94654 151000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10978) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (#("o" 0 1 (fontified t)) . -10979) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) 10980) nil (25364 42516 94652 88000) 0 nil])
([nil nil ((10978 . 10980)) nil (25364 42516 94642 135000) 0 nil])
([nil nil ((10978 . 10983) (#("sp" 0 2 (fontified nil)) . 10978) (10978 . 10980) (#("spawn" 0 5 (fontified nil)) . -10978) (10978 . 10983) (#("sp" 0 2 (fontified t)) . -10978) (undo-tree-id1277 . -2) (undo-tree-id1278 . -1) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) 10980) nil (25364 42516 94639 356000) 0 nil])
([nil nil ((10983 . 10985)) nil (25364 42516 94626 978000) 0 nil])
([nil nil ((10984 . 10989)) nil (25364 42516 94625 697000) 0 nil])
([nil nil ((10989 . 10990) (10990 . 10994) (#("	" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 10989) (10989 . 10990) (10988 . 10990)) nil (25364 42516 94622 484000) 0 nil])
([nil nil ((10997 . 10998)) nil (25364 42516 94615 740000) 0 nil])
([nil nil ((10990 . 10995) (t 25364 42516 121165 673000)) nil (25364 42560 1482 779000) 0 nil])
([nil nil ((10990 . 10998) (#("print" 0 5 (fontified nil)) . 10990) (10990 . 10995) (#("println!" 0 8 (fontified nil)) . -10990) (10990 . 10998) (#("print" 0 5 (fontified t)) . -10990) (undo-tree-id1337 . -5) 10995) nil (25364 42560 1480 174000) 0 nil])
([nil nil ((11001 . 11002) (11000 . 11002) (10999 . 11001) (#("\"" 0 1 (face (rainbow-delimiters-depth-4-face) fontified nil)) . -10999) (10999 . 11000) (10998 . 11000)) nil (25364 42560 1476 60000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-string-interpolation fontified t)) . -11001) (undo-tree-id1336 . -1) 11002) nil (25364 42560 1473 388000) 0 nil])
([nil nil ((11002 . 11003) (11001 . 11003) (#("\"" 0 1 (face rust-string-interpolation fontified nil)) . -11001) (11001 . 11002)) nil (25364 42560 1470 479000) 0 nil])
([nil nil ((#("?" 0 1 (face rust-question-mark fontified t)) . -11002) (undo-tree-id1335 . -1) 11003) nil (25364 42560 1468 266000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -11001) (undo-tree-id1334 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 11002)) nil (25364 42560 1465 618000) 0 nil])
([nil nil ((11001 . 11003)) nil (25364 42560 1463 138000) 0 nil])
([nil nil ((11005 . 11006)) nil (25364 42560 1462 40000) 0 nil])
([nil nil ((11006 . 11009)) nil (25364 42560 1460 938000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -11008) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) 11009) nil (25364 42560 1459 472000) 0 nil])
([nil nil ((11008 . 11010)) nil (25364 42560 1455 977000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11008) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (#("m" 0 1 (fontified t)) . -11009) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 11010) nil (25364 42560 1454 225000) 0 nil])
([nil nil ((11008 . 11010)) nil (25364 42560 1448 522000) 0 nil])
([nil nil ((277 . 278) (277 . 278) (277 . 283) (11006 . 11006) (11006 . 11012) (#("atom" 0 4 (fontified nil)) . 11006) (11006 . 11010) (#("atomic (use std::sync::atomic)" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-5-face) fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 21 (face font-lock-constant-face fontified t) 21 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-5-face) fontified t)) . -11006) (undo-tree-id1325 . -30) (11006 . 11036) (#("atom" 0 4 (fontified t)) . -11006) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) 11010) nil (25364 42560 1446 69000) 0 nil])
([nil nil ((11020 . 11022)) nil (25364 42560 1439 363000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -11020) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#(":" 0 1 (fontified t)) . -11021) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) 11022) nil (25364 42560 1437 553000) 0 nil])
([nil nil ((11020 . 11023)) nil (25364 42560 1431 726000) 0 nil])
([nil nil ((11014 . 11023) (#("atomicU64" 0 9 (fontified nil)) . 11014) (11014 . 11023) (#("AtomicU64" 0 9 (face font-lock-type-face fontified t)) . -11014) (undo-tree-id1318 . -9) (11014 . 11023) (#("atomicU64" 0 9 (fontified t)) . -11014) (undo-tree-id1319 . -9) (undo-tree-id1320 . -9) 11023) nil (25364 42560 1429 671000) 0 nil])
([nil nil ((11023 . 11025)) nil (25364 42560 1423 575000) 0 nil])
([nil nil ((11025 . 11027)) nil (25364 42560 1422 237000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -11026) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 11027) nil (25364 42560 1420 617000) 0 nil])
([nil nil ((11025 . 11029) (#("l" 0 1 (fontified nil)) . 11025) (11025 . 11026) (#("load" 0 4 (fontified t)) . -11025) (undo-tree-id1313 . -4) (11025 . 11029) (#("l" 0 1 (fontified t)) . -11025) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) 11026) nil (25364 42560 1415 894000) 0 nil])
([nil nil ((11030 . 11031) (11029 . 11031)) nil (25364 42560 1409 799000) 0 nil])
([nil nil ((11031 . 11032)) nil (25364 42560 1408 131000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11031) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 11032) nil (25364 42560 1406 666000) 0 nil])
([nil nil ((11031 . 11033)) nil (25364 42560 1403 21000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . -11032) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) 11033) nil (25364 42560 1401 377000) 0 nil])
([nil nil ((11032 . 11035)) nil (25364 42560 1397 444000) 0 nil])
([nil nil ((11031 . 11038) (#("TIME" 0 4 (fontified nil)) . 11031) (11031 . 11035) (#("TIME_MS" 0 7 (face font-lock-type-face fontified t)) . -11031) (undo-tree-id1306 . -7) (11031 . 11038) (#("TIME" 0 4 (face font-lock-type-face fontified t)) . -11031) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) 11035) nil (25364 42560 1393 537000) 0 nil])
([nil nil ((11040 . 11041)) nil (25364 42560 1377 92000) 0 nil])
([nil nil ((11038 . 11039) (t 25364 42560 27835 34000)) nil (25364 42581 943865 862000) 0 nil])
([nil nil ((11039 . 11046)) nil (25364 42581 943864 756000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -11045) (undo-tree-id1354 . -1) 11046) nil (25364 42581 943863 625000) 0 nil])
([nil nil ((11045 . 11059)) nil (25364 42581 943861 689000) 0 nil])
([nil nil ((11059 . 11060)) nil (25364 42581 943860 803000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -11059) (undo-tree-id1353 . -1) 11060) nil (25364 42581 943859 662000) 0 nil])
([nil nil ((11059 . 11061)) nil (25364 42581 943857 674000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -11060) (undo-tree-id1352 . -1) 11061) nil (25364 42581 943856 473000) 0 nil])
([nil nil ((11060 . 11061)) nil (25364 42581 943854 423000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -11060) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) 11061) nil (25364 42581 943853 195000) 0 nil])
([nil nil ((11060 . 11062)) nil (25364 42581 943850 106000) 0 nil])
([nil nil ((11059 . 11067) (#("Ord" 0 3 (fontified nil)) . 11059) (11059 . 11062) (#("Ordering" 0 8 (fontified nil)) . -11059) (11059 . 11067) (#("Ord" 0 3 (face font-lock-type-face fontified t)) . -11059) (undo-tree-id1343 . -3) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) 11062) nil (25364 42581 943847 769000) 0 nil])
([nil nil ((11067 . 11071)) nil (25364 42581 943838 975000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11069) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (#("e" 0 1 (fontified t)) . -11070) (undo-tree-id1342 . -1) 11071) nil (25364 42581 943837 31000) 0 nil])
([nil nil ((11069 . 11071)) nil (25364 42581 943831 191000) 0 nil])
([nil nil ((11069 . 11076) (#("Re" 0 2 (fontified nil)) . 11069) (11069 . 11071) (#("Relaxed" 0 7 (fontified nil)) . -11069) (11069 . 11076) (#("Re" 0 2 (face font-lock-type-face fontified t)) . -11069) (undo-tree-id1338 . -2) (undo-tree-id1339 . -2) 11071) nil (25364 42581 943825 511000) 0 nil])
([nil nil ((11079 . 11081) (t 25364 42582 4503 51000)) nil (25364 42614 917176 122000) 0 nil])
([nil nil ((11081 . 11085)) nil (25364 42614 917174 874000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11081) (undo-tree-id1372 . -1) (#("h" 0 1 (fontified t)) . -11082) (undo-tree-id1373 . -1) (#("e" 0 1 (fontified t)) . -11083) (undo-tree-id1374 . -1) (#("r" 0 1 (fontified t)) . -11084) (undo-tree-id1375 . -1) 11085) nil (25364 42614 917172 786000) 0 nil])
([nil nil ((11081 . 11084)) nil (25364 42614 917167 210000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -11083) (undo-tree-id1371 . -1) 11084) nil (25364 42614 917165 862000) 0 nil])
([nil nil ((11083 . 11089)) nil (25364 42614 917163 655000) 0 nil])
([nil nil ((11086 . 11092) (#("thr" 0 3 (fontified t)) . -11086) (undo-tree-id1370 . -3) 11089) nil (25364 42614 917162 265000) 0 nil])
([nil nil ((11092 . 11095)) nil (25364 42614 917159 923000) 0 nil])
([nil nil ((11095 . 11096)) nil (25364 42614 917158 958000) 0 nil])
([nil nil ((11094 . 11099) (#("sl" 0 2 (fontified nil)) . 11094) (11094 . 11096) (#("sleep" 0 5 (fontified nil)) . -11094) (11094 . 11099) (#("sl" 0 2 (fontified t)) . -11094) (undo-tree-id1369 . -2) 11096) nil (25364 42614 917157 85000) 0 nil])
([nil nil ((11100 . 11101) (11099 . 11101)) nil (25364 42614 917153 753000) 0 nil])
([nil nil ((11101 . 11102)) nil (25364 42614 917152 437000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-type-face fontified t)) . -11100) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -11101) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) 11102) nil (25364 42614 917150 687000) 0 nil])
([nil nil ((11100 . 11103)) nil (25364 42614 917145 550000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -11102) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) 11103) nil (25364 42614 917144 204000) 0 nil])
([nil nil ((11102 . 11112)) nil (25364 42614 917141 81000) 0 nil])
([nil nil ((11111 . 11119) (#("D" 0 1 (fontified nil)) . 11111) (11111 . 11112) (#("Duration" 0 8 (fontified nil)) . -11111) (11111 . 11119) (#("D" 0 1 (face font-lock-type-face fontified t)) . -11111) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) 11112) nil (25364 42614 917138 714000) 0 nil])
([nil nil ((11119 . 11122)) nil (25364 42614 917134 666000) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-type-face fontified t)) . -11121) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) 11122) nil (25364 42614 917133 209000) 0 nil])
([nil nil ((11121 . 11124)) nil (25364 42614 917129 677000) 0 nil])
([nil nil ((11121 . 11130) (#("fro" 0 3 (fontified nil)) . 11121) (11121 . 11124) (#("from_secs" 0 9 (fontified nil)) . -11121) (11121 . 11130) (#("fro" 0 3 (fontified t)) . -11121) (undo-tree-id1355 . -3) (undo-tree-id1356 . -1) (undo-tree-id1357 . -2) (undo-tree-id1358 . -3) 11124) nil (25364 42614 917126 687000) 0 nil])
([nil nil ((11131 . 11132) (11130 . 11132)) nil (25364 42614 917114 18000) 0 nil])
([nil nil ((11134 . 11135)) nil (25364 42614 917107 959000) 0 nil])
([nil nil ((11142 . 11143) (t 25364 42614 944505 73000)) nil (25364 42648 43289 339000) 0 nil])
([nil nil ((11143 . 11147) (#("join" 0 4 (fontified t)) . -11143) (undo-tree-id1376 . -4) (11143 . 11147)) nil (25364 42648 43286 525000) 0 nil])
([nil nil ((11147 . 11149)) nil (25364 42648 43274 506000) 0 nil])
([nil nil ((11149 . 11152) (t 25364 42648 97840 438000)) nil (25364 42655 129409 149000) 0 nil])
([nil nil ((11150 . 11156) (#("un" 0 2 (fontified nil)) . 11150) (11150 . 11152) (#("unwrap" 0 6 (fontified nil)) . -11150) (11150 . 11156) (#("un" 0 2 (fontified t)) . -11150) (undo-tree-id1377 . -2) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) 11152) nil (25364 42655 129405 166000) 0 nil])
([nil nil ((11156 . 11158)) nil (25364 42655 129386 193000) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11150) (undo-tree-id1403 . -7) (undo-tree-id1404 . 1) (undo-tree-id1405 . -8) (undo-tree-id1406 . 1) (undo-tree-id1407 . -8) (undo-tree-id1408 . 2) (undo-tree-id1409 . -7) (undo-tree-id1410 . -8) 11158 (t 25364 42655 184507 540000)) nil (25364 42714 849176 644000) 0 nil])
([nil nil ((#("join()." 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t) 6 7 (fontified t)) . -11143) (undo-tree-id1394 . -7) (undo-tree-id1395 . -7) (undo-tree-id1396 . -7) (undo-tree-id1397 . -7) (undo-tree-id1398 . -7) (undo-tree-id1399 . -7) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7) (undo-tree-id1402 . -7) 11150) nil (25364 42714 851058 736000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11142) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) 11143) nil (25364 42717 43702 11000) 0 nil] [nil nil ((#("1));
    })." 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-5-face) fontified t) 2 3 (face (rainbow-delimiters-depth-4-face) fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 12 (fontified t)) . -11131) (undo-tree-id1384 . -12) (undo-tree-id1385 . -12) (undo-tree-id1386 . -12) (undo-tree-id1387 . -12) (undo-tree-id1388 . -12) (undo-tree-id1389 . -12) (undo-tree-id1390 . -12) (undo-tree-id1391 . -12) (undo-tree-id1392 . -12) (undo-tree-id1393 . -5) 11143) ((11131 . 11143)) (25364 42714 849154 485000) 0 nil])
([nil nil ((10996 . 10998) (t 25364 42717 94511 339000)) nil (25364 42738 102973 328000) 0 nil])
nil
([nil nil ((10998 . 11005)) nil (25364 42738 102972 144000) 0 nil])
([nil nil ((11005 . 11010) (11006 . 11007) (#("	    " 0 5 (face (rainbow-delimiters-depth-4-face) fontified nil)) . 11005) (11005 . 11010) (11004 . 11006)) nil (25364 42738 102970 811000) 0 nil])
([nil nil ((#("println!(\"{:?}\",AtomicU64::load(&TIME_MS, std::sync::atomic::Ordering::Relaxed));
	std::thread::sleep(std::time::Duration::from_secs(1));" 0 8 (face rust-builtin-formatting-macro fontified t) 8 9 (face (rainbow-delimiters-depth-4-face) fontified t) 9 10 (face font-lock-string-face fontified t) 10 13 (face rust-string-interpolation fontified t) 13 14 (face rust-string-interpolation fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (fontified t) 16 25 (face font-lock-type-face fontified t) 25 27 (fontified t) 27 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-5-face) fontified t) 32 33 (face rust-ampersand-face fontified t) 33 40 (face font-lock-type-face fontified t) 40 42 (fontified t) 42 45 (face font-lock-constant-face fontified t) 45 47 (fontified t) 47 51 (face font-lock-constant-face fontified t) 51 53 (fontified t) 53 59 (face font-lock-constant-face fontified t) 59 61 (fontified t) 61 69 (face font-lock-type-face fontified t) 69 71 (fontified t) 71 78 (face font-lock-type-face fontified t) 78 79 (face (rainbow-delimiters-depth-5-face) fontified t) 79 80 (face (rainbow-delimiters-depth-4-face) fontified t) 80 82 (fontified t) 82 83 (fontified t) 83 86 (face font-lock-constant-face fontified t) 86 88 (fontified t) 88 94 (face font-lock-constant-face fontified t) 94 96 (fontified t) 96 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-4-face) fontified t) 102 105 (face font-lock-constant-face fontified t) 105 107 (fontified t) 107 111 (face font-lock-constant-face fontified t) 111 113 (fontified t) 113 121 (face font-lock-type-face fontified t) 121 123 (fontified t) 123 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-5-face) fontified t) 133 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-5-face) fontified t) 135 136 (face (rainbow-delimiters-depth-4-face) fontified t) 136 137 (fontified t)) . 11015) (undo-tree-id1422 . -137) (undo-tree-id1423 . -122) (undo-tree-id1424 . -137) (undo-tree-id1425 . -7)) nil (25364 42738 102968 81000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11142 . 11143) (nil fontified nil 11142 . 11143) (nil fontified nil 11141 . 11142) (nil fontified nil 11140 . 11141) (nil fontified nil 11139 . 11140) (nil fontified nil 11138 . 11139) (nil fontified nil 11129 . 11138) (nil fontified nil 11127 . 11129) (nil fontified nil 11119 . 11127) (nil fontified nil 11117 . 11119) (nil fontified nil 11113 . 11117) (nil fontified nil 11111 . 11113) (nil fontified nil 11108 . 11111) (nil fontified nil 11107 . 11108) (nil fontified nil 11102 . 11107) (nil fontified nil 11100 . 11102) (nil fontified nil 11094 . 11100) (nil fontified nil 11092 . 11094) (nil fontified nil 11089 . 11092) (nil fontified nil 11088 . 11089) (nil fontified nil 11086 . 11088) (nil fontified nil 11085 . 11086) (nil fontified nil 11084 . 11085) (nil fontified nil 11077 . 11084) (nil fontified nil 11075 . 11077) (nil fontified nil 11067 . 11075) (nil fontified nil 11065 . 11067) (nil fontified nil 11059 . 11065) (nil fontified nil 11057 . 11059) (nil fontified nil 11053 . 11057) (nil fontified nil 11051 . 11053) (nil fontified nil 11048 . 11051) (nil fontified nil 11046 . 11048) (nil fontified nil 11039 . 11046) (nil fontified nil 11038 . 11039) (nil fontified nil 11037 . 11038) (nil fontified nil 11033 . 11037) (nil fontified nil 11031 . 11033) (nil fontified nil 11022 . 11031) (nil fontified nil 11021 . 11022) (nil fontified nil 11020 . 11021) (nil fontified nil 11019 . 11020) (nil fontified nil 11016 . 11019) (nil fontified nil 11015 . 11016) (nil fontified nil 11014 . 11015) (nil fontified nil 11006 . 11014) (11006 . 11143)) nil (25364 42738 102955 764000) 0 nil])
([nil nil ((11089 . 11093) 11143) nil (25364 42738 102944 297000) 0 nil])
([nil nil ((11006 . 11010) 11064) nil (25364 42738 102938 494000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 11159) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -2) (t 25364 42738 157845 965000)) nil (25364 42741 93454 922000) 0 nil])
([nil nil ((11020 . 11025) (t 25364 42741 147846 148000)) nil (25364 42781 504783 318000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -11023) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -11024) (undo-tree-id1432 . -1) 11025) nil (25364 42781 504780 235000) 0 nil])
([nil nil ((11023 . 11025)) nil (25364 42781 504768 462000) 0 nil])
([nil nil ((11029 . 11030)) nil (25364 42781 504762 752000) 0 nil])
([nil nil ((11029 . 11030) (t 25364 42781 561181 962000)) nil (25364 42786 282541 181000) 0 nil])
([nil nil ((11096 . 11104) (t 25364 42786 334515 588000)) nil (25364 42838 836143 487000) 0 nil])
([nil nil ((11104 . 11106)) nil (25364 42838 836142 10000) 0 nil])
([nil nil ((10779 . 10784)) nil (25364 42838 836140 878000) 0 nil])
([nil nil ((10784 . 10789)) nil (25364 42838 836139 709000) 0 nil])
([nil nil ((10789 . 10794)) nil (25364 42838 836138 503000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -10791) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -10792) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10793) (undo-tree-id1446 . -1) 10794) nil (25364 42838 836135 924000) 0 nil])
([nil nil ((10791 . 10795)) nil (25364 42838 836128 595000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10794) (undo-tree-id1441 . -1) 10795) nil (25364 42838 836127 265000) 0 nil])
([nil nil ((10794 . 10795) (#(")" 0 1 (face font-lock-variable-name-face fontified nil)) . -10794) (10794 . 10795)) nil (25364 42838 836124 491000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -10794) (undo-tree-id1438 . -1) (undo-tree-id1439 . 1) (undo-tree-id1440 . -1) 10795) nil (25364 42838 836122 488000) 0 nil])
([nil nil ((10794 . 10807)) nil (25364 42838 836117 777000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10805) (undo-tree-id1437 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 10806)) nil (25364 42838 836116 387000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -10804) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 10805) nil (25364 42838 836113 149000) 0 nil])
([nil nil ((10804 . 10806)) nil (25364 42838 836109 11000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10805) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) 10806) nil (25364 42838 836106 847000) 0 nil])
([nil nil ((10805 . 10807)) nil (25364 42838 836097 303000) 0 nil])
([nil nil ((10807 . 10818) (#("sample_rate" 0 11 (fontified nil)) . -10807) (10807 . 10818)) nil (25364 42838 836094 524000) 0 nil])
([nil nil ((10818 . 10819)) nil (25364 42838 836087 447000) 0 nil])
([nil nil ((10818 . 10823) (t 25364 42838 891185 482000)) nil (25364 42853 972935 808000) 0 nil])
([nil nil ((10823 . 10824)) nil (25364 42853 972934 159000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -10823) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 10824) nil (25364 42853 972931 312000) 0 nil])
([nil nil ((10823 . 10825)) nil (25364 42853 972917 625000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11151) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (#("." 0 1 (fontified t)) . -11152) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) 11153 (t 25364 42853 997853 75000)) nil (25364 42863 86677 35000) 0 nil])
([nil nil ((11151 . 11155)) nil (25364 42863 86669 285000) 0 nil])
([nil nil ((11151 . 11162) (#("samp" 0 4 (fontified nil)) . 11151) (11151 . 11155) (#("sample_rate" 0 11 (fontified t)) . -11151) (undo-tree-id1449 . -11) (undo-tree-id1450 . -11) (11151 . 11162) (#("samp" 0 4 (fontified t)) . -11151) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) 11155) nil (25364 42863 86663 624000) 0 nil])
([nil nil ((11039 . 11044) (t 25364 42863 107853 635000)) nil (25364 42872 445951 455000) 0 nil])
([nil nil ((8814 . 8815) (t 25364 42872 497854 211000)) nil (25364 43035 703604 575000) 0 nil])
([nil nil ((8815 . 8817)) nil (25364 43035 703602 873000) 0 nil])
([nil nil ((8815 . 8824) (#("en" 0 2 (fontified nil)) . 8815) (8815 . 8817) (#("enumerate (as Iterator)" 0 23 (fontified nil)) . -8815) (8815 . 8838) (#("en" 0 2 (fontified t)) . -8815) (undo-tree-id1460 . -1) (undo-tree-id1461 . -2) (undo-tree-id1462 . -1) (undo-tree-id1463 . -2) 8817) nil (25364 43035 703599 280000) 0 nil])
([nil nil ((8824 . 8826)) nil (25364 43035 703406 411000) 0 nil])
([nil nil ((8771 . 8772) (t 25364 43035 727864 242000)) nil (25364 43045 467912 650000) 0 nil])
([nil nil ((8772 . 8774)) nil (25364 43045 467911 60000) 0 nil])
([nil nil ((8771 . 8773)) nil (25364 43045 467909 317000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) fontified t)) . 8772) (undo-tree-id1464 . 1)) nil (25364 43045 467906 699000) 0 nil])
([nil nil ((8780 . 8781) (#(")" 0 1 (fontified nil)) . -8780) (8780 . 8781)) nil (25364 43045 467891 790000) 0 nil])
([nil nil ((8890 . 8898) (t 25364 43045 521198 176000)) nil (25364 43476 742301 517000) 0 nil])
([nil nil ((#("AtomicU64::fetch_add(&TIME_MS,1,std::sync::atomic::Ordering::Relaxed);" 0 9 (face font-lock-type-face fontified t) 9 11 (fontified t) 11 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-8-face) fontified t) 21 22 (face rust-ampersand-face fontified t) 22 29 (face font-lock-type-face fontified t) 29 32 (fontified t) 32 35 (face font-lock-constant-face fontified t) 35 37 (fontified t) 37 41 (face font-lock-constant-face fontified t) 41 43 (fontified t) 43 49 (face font-lock-constant-face fontified t) 49 51 (fontified t) 51 59 (face font-lock-type-face fontified t) 59 61 (fontified t) 61 68 (face font-lock-type-face fontified t) 68 69 (face (rainbow-delimiters-depth-8-face) fontified t) 69 70 (fontified t)) . 8906) (undo-tree-id1472 . -56) (undo-tree-id1473 . -56) (undo-tree-id1474 . -32) (undo-tree-id1475 . -52) (undo-tree-id1476 . -9) (undo-tree-id1477 . -70)) nil (25364 43476 742299 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8898) (undo-tree-id1471 . -1)) nil (25364 43476 742292 259000) 0 nil])
([nil nil ((#("			    
" 0 7 (fontified t) 7 8 (fontified t)) . 8898) (undo-tree-id1465 . -7) (undo-tree-id1466 . -7) (undo-tree-id1467 . -7) (undo-tree-id1468 . -7) (undo-tree-id1469 . -7) (undo-tree-id1470 . -8)) nil (25364 43476 742288 340000) 0 nil])
([nil nil ((#("                            " 0 8 (fontified t) 8 28 (fontified t)) . -8898)) nil (25364 43480 998045 960000) 0 nil])
([nil nil ((9033 . 9037) (t 25364 43476 764557 754000)) nil (25364 43491 376300 463000) 0 nil] [nil nil ((9033 . 9037) (t 25364 43476 764557 754000)) ((#("
			" 0 4 (fontified t)) . 9033) (undo-tree-id1478 . -4) (undo-tree-id1479 . -1)) (25364 43480 997654 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9106 . 9107) (nil fontified nil 9106 . 9107) (nil fontified nil 9105 . 9106) (nil fontified nil 9098 . 9105) (nil fontified nil 9096 . 9098) (nil fontified nil 9088 . 9096) (nil fontified nil 9086 . 9088) (nil fontified nil 9080 . 9086) (nil fontified nil 9078 . 9080) (nil fontified nil 9074 . 9078) (nil fontified nil 9072 . 9074) (nil fontified nil 9069 . 9072) (nil fontified nil 9066 . 9069) (nil fontified nil 9059 . 9066) (nil fontified nil 9058 . 9059) (nil fontified nil 9057 . 9058) (nil fontified nil 9048 . 9057) (nil fontified nil 9046 . 9048) (nil fontified nil 9037 . 9046) (9037 . 9107)) nil (25364 43491 376298 141000) 0 nil])
nil
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-6-face) fontified t)) . -8780) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . 1) (undo-tree-id1502 . -1) 8781) nil (25364 43491 376293 27000) 0 nil])
([nil nil ((#("i, " 0 1 (fontified t) 1 3 (fontified t)) . -8772) (undo-tree-id1495 . 3) (undo-tree-id1496 . -3) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) 8775) nil (25364 43491 376288 311000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-6-face) fontified t)) . -8771) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) 8772) nil (25364 43491 376283 233000) 0 nil])
([nil nil ((#("enumerate()" 0 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-6-face) fontified t) 10 11 (face (rainbow-delimiters-depth-6-face) fontified t)) . -8815) (undo-tree-id1483 . -10) (undo-tree-id1484 . -11) (undo-tree-id1485 . -11) (undo-tree-id1486 . 1) (undo-tree-id1487 . -11) (undo-tree-id1488 . 2) (undo-tree-id1489 . -10) 8826) nil (25364 43491 376529 59000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8814) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) 8815) nil (25364 43493 16366 773000) 0 nil] [nil nil ((#("into())." 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-7-face) fontified t) 5 6 (face (rainbow-delimiters-depth-7-face) fontified t) 6 7 (face (rainbow-delimiters-depth-6-face) fontified t) 7 8 (fontified t)) . -8807) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (undo-tree-id1482 . -8) 8815) ((8807 . 8815)) (25364 43491 376264 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 644 . 645) (nil fontified nil 617 . 645) (617 . 645) (t 25364 43493 37892 73000)) nil (25364 43960 551853 593000) 0 nil])
nil
([nil nil ((#("atomic" 0 6 (fontified t)) . -279) (undo-tree-id1519 . -6) (undo-tree-id1520 . -6) (undo-tree-id1521 . -6) (undo-tree-id1522 . -6) (undo-tree-id1523 . -6) 285 (t 25364 43960 607920 481000)) nil (25364 43967 949642 649000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -277) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (#(" " 0 1 (fontified t)) . -278) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) 279) nil (25364 43967 949631 521000) 0 nil])
([nil nil ((#("Ordering" 0 8 (face font-lock-type-face fontified t)) . -171) (undo-tree-id1534 . -8) (undo-tree-id1535 . -8) (undo-tree-id1536 . -8) 179 (t 25364 43967 971254 266000)) nil (25364 43978 76325 819000) 0 nil])
([nil nil ((#("cmp::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -166) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) 171) nil (25364 43978 76319 417000) 0 nil])
([nil nil ((166 . 169)) nil (25364 43978 76313 449000) 0 nil])
([nil nil ((166 . 170) (#("syn" 0 3 (fontified nil)) . 166) (166 . 169) (#("sync" 0 4 (fontified nil)) . -166) (166 . 170) (#("syn" 0 3 (fontified t)) . -166) (undo-tree-id1529 . -3) (undo-tree-id1530 . -3) 169) nil (25364 43978 76310 527000) 0 nil])
([nil nil ((170 . 174)) nil (25364 43978 76304 701000) 0 nil])
([nil nil ((172 . 178) (#("at" 0 2 (fontified nil)) . 172) (172 . 174) (#("atomic" 0 6 (fontified nil)) . -172) (172 . 178) (#("at" 0 2 (fontified t)) . -172) (undo-tree-id1526 . -2) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) 174) nil (25364 43978 76302 750000) 0 nil])
([nil nil ((178 . 181)) nil (25364 43978 76298 90000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -180) (undo-tree-id1525 . -1) 181) nil (25364 43978 76296 749000) 0 nil])
([nil nil ((180 . 182)) nil (25364 43978 76293 808000) 0 nil])
([nil nil ((180 . 188) (#("Or" 0 2 (fontified nil)) . 180) (180 . 182) (#("Ordering" 0 8 (fontified nil)) . -180) (180 . 188) (#("Or" 0 2 (face font-lock-type-face fontified t)) . -180) (undo-tree-id1524 . -2) 182) nil (25364 43978 76288 929000) 0 nil])
([nil nil ((#("Sample, " 0 6 (face font-lock-type-face fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -12) (undo-tree-id1537 . -8) (undo-tree-id1538 . -6) (undo-tree-id1539 . -8) 20 (t 25364 43978 131254 890000)) nil (25364 43988 111353 637000) 0 nil])
([nil nil ((#("atomic::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -9084) (undo-tree-id1544 . -8) (undo-tree-id1545 . -8) 9092 (t 25364 43988 161255 507000)) nil (25364 44005 968509 792000) 0 nil])
([nil nil ((#("sync::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -9078) (undo-tree-id1542 . -6) (undo-tree-id1543 . -6) 9084) nil (25364 44005 968505 119000) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -9073) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) 9078) nil (25364 44005 968497 994000) 0 nil])
([nil nil ((#("atomic::" 0 6 (face font-lock-constant-face fontified t) 6 8 (fontified t)) . -11099) (undo-tree-id1552 . -8) (undo-tree-id1553 . -8) 11107 (t 25364 44005 991256 601000)) nil (25364 44012 957061 915000) 0 nil])
([nil nil ((#("sync::" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t)) . -11093) (undo-tree-id1549 . -6) (undo-tree-id1550 . -6) (undo-tree-id1551 . -6) 11099) nil (25364 44012 957057 363000) 0 nil])
([nil nil ((#("std::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -11088) (undo-tree-id1546 . -5) (undo-tree-id1547 . -5) (undo-tree-id1548 . -5) 11093) nil (25364 44012 957048 774000) 0 nil])
([nil nil ((10585 . 10590) (t 25364 44012 971257 29000)) nil (25364 44059 3729 541000) 0 nil])
([nil nil ((10590 . 10593)) nil (25364 44059 3728 271000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10585) (undo-tree-id1561 . -1) (#(" " 0 1 (fontified t)) . -10586) (undo-tree-id1562 . -1) (#(" " 0 1 (fontified t)) . -10587) (undo-tree-id1563 . -1) (#(" " 0 1 (fontified t)) . -10588) (undo-tree-id1564 . -1) (#(" " 0 1 (fontified t)) . -10589) (undo-tree-id1565 . -1) (#("l" 0 1 (fontified t)) . -10590) (undo-tree-id1566 . -1) (#("e" 0 1 (fontified t)) . -10591) (undo-tree-id1567 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -10592) (undo-tree-id1568 . -1) 10593) nil (25364 44059 3725 473000) 0 nil])
([nil nil ((11207 . 11210)) nil (25364 44059 3714 388000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11207) (undo-tree-id1558 . -1) (#("e" 0 1 (fontified t)) . -11208) (undo-tree-id1559 . -1) (#("t" 0 1 (fontified t)) . -11209) (undo-tree-id1560 . -1) 11210) nil (25364 44059 3712 637000) 0 nil])
([nil nil ((11207 . 11217)) nil (25364 44398 793150 919000) 0 nil])
([nil nil ((11217 . 11221)) ((#("Proi" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 11217) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4)) (25364 44399 43293 329000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . 11220) (undo-tree-id1786 . -1)) ((11220 . 11221)) (25364 44399 703258 746000) 0 nil])
([nil nil ((11220 . 11222)) ((#("gr" 0 2 (face font-lock-type-face fontified t)) . 11220) (undo-tree-id1782 . -2) (undo-tree-id1783 . -2)) (25364 44399 736265 665000) 0 nil])
([nil nil ((11222 . 11225)) ((#("ess" 0 3 (face font-lock-type-face fontified t)) . 11222) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3)) (25364 44399 776233 345000) 0 nil])
([nil nil ((11217 . 11228) (#("Progress" 0 8 (fontified nil)) . 11217) (11217 . 11225) (#("ProgressBar" 0 11 (fontified nil)) . 11217) (11217 . 11228) (#("Progress" 0 3 (face font-lock-type-face fontified t) 3 5 (face font-lock-type-face fontified t) 5 8 (face font-lock-type-face fontified t)) . 11217) (undo-tree-id1787 . -5) (undo-tree-id1788 . -5) (undo-tree-id1789 . -3)) ((11217 . 11225) (#("ProgressBar" 0 11 (fontified nil)) . 11217) (11217 . 11228) (#("Progress" 0 8 (fontified nil)) . 11217) (11217 . 11225) (#("ProgressBar" 0 11 (face font-lock-type-face fontified t)) . 11217) (undo-tree-id1770 . -11) (undo-tree-id1771 . -6) (undo-tree-id1772 . -11) (undo-tree-id1773 . -11) (undo-tree-id1774 . -6) (undo-tree-id1775 . -11) (undo-tree-id1776 . -11) (undo-tree-id1777 . -11) (undo-tree-id1778 . -11) (undo-tree-id1779 . -11)) (25364 44399 816741 925000) 0 nil])
([nil nil ((11228 . 11231)) ((#("::n" 0 2 (fontified t) 2 3 (fontified t)) . 11228) (undo-tree-id1762 . -2) (undo-tree-id1763 . -2) (undo-tree-id1764 . -2) (undo-tree-id1765 . -2) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -2) (undo-tree-id1769 . -2)) (25364 44399 856841 18000) 0 nil])
([nil nil ((11230 . 11233) (#("n" 0 1 (fontified nil)) . 11230) (11230 . 11231) (#("new" 0 3 (fontified nil)) . 11230) (11230 . 11233) (#("n" 0 1 (fontified t)) . 11230)) ((11230 . 11231) (#("new" 0 3 (fontified nil)) . 11230) (11230 . 11233) (#("n" 0 1 (fontified nil)) . 11230) (11230 . 11231) (#("new" 0 3 (fontified t)) . 11230) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3)) (25364 44399 896704 417000) 0 nil])
([nil nil ((11234 . 11238) (11233 . 11235)) ((#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 11233) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (#("1024" 0 4 (fontified t)) . 11234)) (25364 44399 937914 603000) 0 nil])
([nil nil ((11239 . 11240)) ((#(";" 0 1 (fontified t)) . 11239) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1)) (25364 44399 978020 890000) 0 nil])
([nil nil ((11240 . 11245)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 11240) (undo-tree-id1730 . -5) (undo-tree-id1731 . -5) (undo-tree-id1732 . -5) (undo-tree-id1733 . -5) (undo-tree-id1734 . -5) (undo-tree-id1735 . -5) (undo-tree-id1736 . -5) (undo-tree-id1737 . -5)) (25364 44400 16298 396000) 0 nil])
([nil nil ((11245 . 11248)) ((#("bar" 0 3 (fontified t)) . 11245) (undo-tree-id1722 . -3) (undo-tree-id1723 . -3) (undo-tree-id1724 . -3) (undo-tree-id1725 . -3) (undo-tree-id1726 . -3) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (undo-tree-id1729 . -3)) (25364 44400 263115 371000) 0 nil])
([nil nil ((11248 . 11249)) ((#("." 0 1 (fontified t)) . 11248) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1)) (25364 44400 511048 9000) 0 nil])
([nil nil ((11249 . 11255) (#("prefix" 0 6 (fontified nil)) . 11249) (11249 . 11255)) ((#("prefix" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("prefix" 0 5 (fontified t) 5 6 (fontified t)) . 11249) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6)) (25364 44400 779695 301000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 11254)) ((11254 . 11255)) (25364 44401 32382 938000) 0 nil])
([nil nil ((#("prefi" 0 5 (fontified t)) . 11249) (undo-tree-id1790 . -5) (undo-tree-id1791 . -5)) ((11249 . 11254)) (25364 44401 231659 937000) 0 nil])
([nil nil ((11249 . 11252)) ((#("len" 0 3 (fontified t)) . 11249) (undo-tree-id1710 . -3) (undo-tree-id1711 . -3)) (25364 44401 458565 352000) 0 nil])
([nil nil ((11249 . 11255) (#("len" 0 3 (fontified nil)) . 11249) (11249 . 11252) (#("length" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("len" 0 3 (fontified t)) . 11249)) ((11249 . 11252) (#("length" 0 6 (fontified nil)) . 11249) (11249 . 11255) (#("len" 0 3 (fontified nil)) . 11249) (11249 . 11252) (#("length" 0 6 (fontified t)) . 11249) (undo-tree-id1707 . -6) (undo-tree-id1708 . -6) (undo-tree-id1709 . -6)) (25364 44401 716300 576000) 0 nil])
([nil nil ((#("length" 0 6 (fontified t)) . 11249) (undo-tree-id1792 . -6)) ((11249 . 11255)) (25364 44401 936436 127000) 0 nil])
([nil nil ((11249 . 11255)) ((#("setpro" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 11249) (undo-tree-id1705 . -6) (undo-tree-id1706 . -6)) (25364 44402 172044 886000) 0 nil])
([nil nil ((#("pro" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 11252)) ((11252 . 11255)) (25364 44402 371637 757000) 0 nil])
([nil nil ((11252 . 11253)) ((#("p" 0 1 (fontified t)) . 11252) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1)) (25364 44402 611471 636000) 0 nil])
([nil nil ((11249 . 11261) (#("setp" 0 4 (fontified nil)) . 11249) (11249 . 11253) (#("set_position" 0 12 (fontified nil)) . 11249) (11249 . 11261) (#("setp" 0 3 (fontified t) 3 4 (fontified t)) . 11249) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3)) ((11249 . 11253) (#("set_position" 0 12 (fontified nil)) . 11249) (11249 . 11261) (#("setp" 0 4 (fontified nil)) . 11249) (11249 . 11253) (#("set_position" 0 12 (fontified t)) . 11249) (undo-tree-id1696 . -9) (undo-tree-id1697 . -12) (undo-tree-id1698 . -9) (undo-tree-id1699 . -12) (undo-tree-id1700 . -12) (undo-tree-id1701 . -12) (undo-tree-id1702 . -12)) (25364 44402 792824 222000) 0 nil])
([nil nil ((11261 . 11263)) ((#("()" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . 11261) (undo-tree-id1692 . -1) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2)) (25364 44403 23065 506000) 0 nil])
([nil nil ((11263 . 11264)) ((#(";" 0 1 (fontified t)) . 11263)) (25364 44407 930894 76000) 0 nil])
([nil nil ((#("1024" 0 4 (fontified t)) . -11234) (undo-tree-id1831 . -4) (undo-tree-id1832 . -4) 11238) nil (25364 44478 151099 299000) 0 nil] [nil nil ((10803 . 10808)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 10803) (undo-tree-id1804 . -5) (undo-tree-id1805 . -5) (undo-tree-id1806 . -1) (undo-tree-id1807 . -5)) (25364 44407 600595 95000) 0 nil])
([nil nil ((10803 . 10808)) nil (25364 44478 151095 400000) 0 nil])
([nil nil ((10808 . 10809)) ((#(";" 0 1 (fontified t)) . 10808)) (25364 44407 198993 782000) 0 nil])
([nil nil ((10808 . 10811)) nil (25364 44478 151094 81000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 10808)) ((10808 . 10809)) (25364 44406 978997 412000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10808) (undo-tree-id1828 . -1) (#("e" 0 1 (fontified t)) . -10809) (undo-tree-id1829 . -1) (#("t" 0 1 (fontified t)) . -10810) (undo-tree-id1830 . -1) 10811) nil (25364 44478 151091 745000) 0 nil])
([nil nil ((10808 . 10814)) ((#("let tu" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 10808) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4)) (25364 44406 773886 884000) 0 nil])
([nil nil ((10808 . 10812)) nil (25364 44478 151086 168000) 0 nil])
([nil nil ((#("tu" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . 10812)) ((10812 . 10814)) (25364 44406 512042 124000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10810) (undo-tree-id1826 . -1) (#("t" 0 1 (fontified t)) . -10811) (undo-tree-id1827 . -1) 10812) nil (25364 44478 151084 334000) 0 nil])
([nil nil ((10812 . 10815)) ((#("dyu" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t)) . 10812) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1)) (25364 44406 322963 408000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -10809) (undo-tree-id1825 . -1) 10810) nil (25364 44478 151079 894000) 0 nil])
([nil nil ((#("yu" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . 10813)) ((10813 . 10815)) (25364 44406 140616 88000) 0 nil])
([nil nil ((10809 . 10817)) nil (25364 44478 151076 822000) 0 nil])
([nil nil ((10813 . 10827)) ((#("uration = clop" 0 7 (face font-lock-variable-name-face fontified t) 7 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 10813) (undo-tree-id1795 . -12) (undo-tree-id1796 . -12) (undo-tree-id1797 . -12)) (25364 44405 962775 649000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -10812) (undo-tree-id1820 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -10813) (undo-tree-id1821 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -10814) (undo-tree-id1822 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -10815) (undo-tree-id1823 . -1) (#(" " 0 1 (fontified t)) . -10816) (undo-tree-id1824 . -1) 10817) nil (25364 44478 151066 275000) 0 nil])
([nil nil ((#("op" 0 1 (fontified t) 1 2 (fontified t)) . 10825)) ((10825 . 10827)) (25364 44405 652597 182000) 0 nil])
([nil nil ((10812 . 10828)) nil (25364 44478 151057 594000) 0 nil])
([nil nil ((10825 . 10827)) ((#("up" 0 1 (fontified t) 1 2 (fontified t)) . 10825) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2)) (25364 44395 32644 673000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10826) (undo-tree-id1819 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 10827)) nil (25364 44478 151055 827000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10825) (undo-tree-id1575 . -1) (#("p" 0 1 (fontified t)) . -10826) (undo-tree-id1576 . -1) 10827) ((10825 . 10827)) (25364 44394 991966 19000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -10825) (undo-tree-id1818 . -1) 10826) nil (25364 44478 151052 987000) 0 nil])
([nil nil ((10825 . 10827)) ((#("ui" 0 1 (fontified t) 1 2 (fontified t)) . 10825) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2)) (25364 44394 951203 135000) 0 nil])
([nil nil ((10825 . 10828)) nil (25364 44478 151050 478000) 0 nil])
([nil nil ((10827 . 10828)) ((#("p" 0 1 (fontified t)) . 10827) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1)) (25364 44394 912614 70000) 0 nil])
([nil nil ((10828 . 10829)) nil (25364 44478 151049 233000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10825) (undo-tree-id1572 . -1) (#("i" 0 1 (fontified t)) . -10826) (undo-tree-id1573 . -1) (#("p" 0 1 (fontified t)) . -10827) (undo-tree-id1574 . -1) 10828) ((10825 . 10828)) (25364 44394 871199 674000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10828) (undo-tree-id1817 . -1) 10829) nil (25364 44478 151047 702000) 0 nil])
([nil nil ((10825 . 10828)) (("ip." . 10825)) (25364 44394 832302 907000) 0 nil])
([nil nil ((10828 . 10830)) nil (25364 44478 151045 184000) 0 nil])
([nil nil ((1741 . 1746)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 1741) (undo-tree-id1661 . -5) (undo-tree-id1662 . -5) (undo-tree-id1663 . -5) (undo-tree-id1664 . -5) (undo-tree-id1665 . -1) (undo-tree-id1666 . -5)) (25364 44394 795041 300000) 0 nil])
([nil nil ((10828 . 10835) (#("sa" 0 2 (fontified nil)) . 10828) (10828 . 10830) (#("samples" 0 7 (fontified nil)) . -10828) (10828 . 10835) (#("sa" 0 2 (fontified t)) . -10828) (undo-tree-id1816 . -2) 10830) nil (25364 44478 151042 905000) 0 nil])
([nil nil ((1746 . 1764)) ((#("pub duration: u64." 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 14 (fontified t) 14 17 (face font-lock-type-face fontified t) 17 18 (fontified t)) . 1746) (undo-tree-id1656 . -4) (undo-tree-id1657 . -18) (undo-tree-id1658 . -18) (undo-tree-id1659 . -4) (undo-tree-id1660 . -17)) (25364 44394 759273 592000) 0 nil])
([nil nil ((10835 . 10841)) nil (25364 44478 151038 997000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1763) (undo-tree-id1569 . -1) (undo-tree-id1571 . -1) 1764) ((1763 . 1764)) (25364 44394 711733 658000) 0 nil])
([nil nil ((10841 . 10849)) nil (25364 44478 151037 776000) 0 nil])
([nil nil ((1763 . 1764)) ((#("," 0 1 (fontified t)) . 1763) (t 25364 44245 107937 945000)) (25364 44394 679333 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10848) (undo-tree-id1815 . -1) 10849) nil (25364 44478 151036 260000) 0 nil])
([nil nil ((2431 . 2437) (t 25364 44245 107937 945000)) ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 2431) (undo-tree-id1649 . -6) (undo-tree-id1650 . -6) (undo-tree-id1651 . -6) (undo-tree-id1652 . -1) (undo-tree-id1653 . -6) (undo-tree-id1654 . -1) (undo-tree-id1655 . -6)) (25364 44394 18785 853000) 0 nil])
([nil nil ((10848 . 10851)) nil (25364 44478 151033 590000) 0 nil])
([nil nil ((2437 . 2441)) ((#("dura" 0 4 (fontified t)) . 2437) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4)) (25364 44391 787930 700000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10849) (undo-tree-id1813 . -1) (#("a" 0 1 (fontified t)) . -10850) (undo-tree-id1814 . -1) 10851) nil (25364 44478 151031 763000) 0 nil])
([nil nil ((2437 . 2445) (#("dura" 0 4 (fontified nil)) . 2437) (2437 . 2441) (#("duration" 0 8 (fontified nil)) . -2437) (2437 . 2445) (#("dura" 0 4 (fontified t)) . -2437) (undo-tree-id1604 . -4) 2441) ((2437 . 2441) (#("duration" 0 8 (fontified nil)) . 2437) (2437 . 2445) (#("dura" 0 4 (fontified nil)) . 2437) (2437 . 2441) (#("duration" 0 8 (fontified t)) . 2437) (undo-tree-id1642 . -8) (undo-tree-id1643 . -8) (undo-tree-id1644 . -8)) (25364 44391 390658 836000) 0 nil])
([nil nil ((10849 . 10854)) nil (25364 44478 151027 576000) 0 nil])
([nil nil ((2445 . 2446)) ((#("." 0 1 (fontified t)) . 2445) (undo-tree-id1641 . -1)) (25364 44391 10780 199000) 0 nil])
([nil nil ((10854 . 10865) (#("sample_rate" 0 11 (fontified nil)) . -10854) (10854 . 10865)) nil (25364 44478 151026 50000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2445) (undo-tree-id1603 . -1) 2446) ((2445 . 2446)) (25364 44389 910100 914000) 0 nil])
([nil nil ((10865 . 10870)) nil (25364 44478 151024 267000) 0 nil])
([nil nil ((2445 . 2446)) ((#("," 0 1 (fontified t)) . 2445) (undo-tree-id1640 . -1)) (25364 44389 459207 506000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -10869) (undo-tree-id1812 . -1) 10870) nil (25364 44478 151022 610000) 0 nil])
([nil nil ((4265 . 4266) (#("	" 0 1 (fontified nil)) . 4264) (4264 . 4265) (4264 . 4265)) ((#("
" 0 1 (fontified nil)) . 4264) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#("	" 0 1 (fontified nil)) . 4264) (4264 . 4265) (#("	" 0 1 (fontified t)) . 4265) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1)) (25364 44389 240926 979000) 0 nil])
([nil nil ((10869 . 10874)) nil (25364 44478 151019 33000) 0 nil])
([nil nil ((4266 . 4281)) ((#("let duration = " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 12 (face font-lock-variable-name-face fontified t) 12 15 (fontified t)) . 4266) (undo-tree-id1625 . -15) (undo-tree-id1626 . -15) (undo-tree-id1627 . -15) (undo-tree-id1628 . -15)) (25364 44389 11223 327000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -10870) (undo-tree-id1808 . -1) (#("6" 0 1 (fontified t)) . -10871) (undo-tree-id1809 . -1) (#("e" 0 1 (fontified t)) . -10872) (undo-tree-id1810 . -1) (#("4" 0 1 (fontified t)) . -10873) (undo-tree-id1811 . -1) 10874) nil (25364 44478 151016 76000) 0 nil])
([nil nil ((4281 . 4285)) ((#("trac" 0 4 (fontified t)) . 4281) (undo-tree-id1624 . -4)) (25364 44388 815195 134000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10866) (10866 . 10867) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10866) (10866 . 10867) (10865 . 10867)) nil (25364 44478 150999 702000) 0 nil])
([nil nil ((4281 . 4286) (#("trac" 0 4 (fontified nil)) . 4281) (4281 . 4285) (#("track" 0 5 (fontified nil)) . -4281) (4281 . 4286) (#("trac" 0 4 (fontified t)) . -4281) (undo-tree-id1602 . -4) 4285) ((4281 . 4285) (#("track" 0 5 (fontified nil)) . 4281) (4281 . 4286) (#("trac" 0 4 (fontified nil)) . 4281) (4281 . 4285) (#("track" 0 5 (fontified t)) . 4281) (undo-tree-id1620 . -5) (undo-tree-id1621 . -5) (undo-tree-id1622 . -5) (undo-tree-id1623 . -5)) (25364 44388 626835 28000) 0 nil])
([nil nil ((10872 . 10875)) nil (25364 44478 150992 85000) 0 nil])
([nil nil ((4286 . 4288)) ((#(".f" 0 1 (fontified t) 1 2 (fontified t)) . 4286) (undo-tree-id1616 . -2) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1)) (25364 44388 432850 968000) 0 nil])
([nil nil ((11306 . 11307) (t 25364 44478 204618 920000)) nil (25364 44494 932150 476000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -4287) (undo-tree-id1601 . -1) 4288) ((4287 . 4288)) (25364 44388 242603 552000) 0 nil])
([nil nil ((11307 . 11309)) nil (25364 44494 932149 94000) 0 nil])
([nil nil ((4287 . 4288)) ((#("c" 0 1 (fontified t)) . 4287) (undo-tree-id1615 . -1)) (25364 44388 61271 552000) 0 nil])
([nil nil ((11306 . 11314) (#("dur" 0 3 (fontified nil)) . 11306) (11306 . 11309) (#("duration" 0 8 (fontified nil)) . -11306) (11306 . 11314) (#("dur" 0 3 (fontified t)) . -11306) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -2) (undo-tree-id1845 . -3) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 11309) nil (25364 44494 932146 666000) 0 nil])
([nil nil ((4287 . 4299) (#("c" 0 1 (fontified nil)) . 4287) (4287 . 4288) (#("codec_params" 0 12 (fontified nil)) . -4287) (4287 . 4299) (#("c" 0 1 (fontified t)) . -4287) (undo-tree-id1600 . -1) 4288) ((4287 . 4288) (#("codec_params" 0 12 (fontified nil)) . 4287) (4287 . 4299) (#("c" 0 1 (fontified nil)) . 4287) (4287 . 4288) (#("codec_params" 0 12 (fontified t)) . 4287) (undo-tree-id1611 . -12) (undo-tree-id1612 . -12) (undo-tree-id1613 . -12) (undo-tree-id1614 . -12)) (25364 44387 831100 68000) 0 nil])
([nil nil ((11314 . 11317)) nil (25364 44494 932138 467000) 0 nil])
([nil nil ((4299 . 4302)) ((#(".du" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 4299) (undo-tree-id1607 . -3) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1)) (25364 44387 451926 809000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11314) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("a" 0 1 (fontified t)) . -11315) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -11316) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) 11317) nil (25364 44494 932135 85000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -4300) (undo-tree-id1598 . -1) (#("u" 0 1 (fontified t)) . -4301) (undo-tree-id1599 . -1) 4302) ((4300 . 4302)) (25364 44386 821278 127000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -11320) (11320 . 11321) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -11320) (11320 . 11321) (11314 . 11321)) nil (25364 44494 932114 2000) 0 nil])
([nil nil ((4300 . 4301)) ((#("t" 0 1 (fontified t)) . 4300) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1)) (25364 44386 736189 46000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10865) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10866) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . 1) (undo-tree-id1855 . -1) 10867 (t 25364 44494 954619 949000)) nil (25364 44503 655841 50000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4300) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) 4301) ((4300 . 4301)) (25364 44386 735097 724000) 0 nil])
([nil nil ((10849 . 10851) (t 25364 44503 707953 819000)) nil (25364 44511 558484 279000) 0 nil])
nil
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 10850) (undo-tree-id1856 . 1)) nil (25364 44511 558481 816000) 0 nil])
([nil nil ((10873 . 10874) (#(")" 0 1 (face font-lock-type-face fontified nil)) . -10873) (10873 . 10874)) nil (25364 44511 558468 738000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -11320) (undo-tree-id1883 . -1) (undo-tree-id1884 . 1) (undo-tree-id1885 . -1) 11321 (t 25364 44511 581287 637000)) nil (25364 44529 327312 502000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -11319) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 11320)) nil (25364 44529 327307 442000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11314) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (#("i" 0 1 (fontified t)) . -11315) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -11316) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (#("t" 0 1 (fontified t)) . -11317) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (#("o" 0 1 (fontified t)) . -11318) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) 11319) nil (25364 44529 327302 119000) 0 nil])
([nil nil ((11314 . 11318)) nil (25364 44529 327277 957000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11317) (undo-tree-id1858 . -1) 11318) nil (25364 44529 327276 254000) 0 nil])
([nil nil ((11317 . 11319)) nil (25364 44529 327273 407000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11318) (undo-tree-id1857 . -1) 11319) nil (25364 44529 327271 38000) 0 nil])
([nil nil ((11321 . 11322) (#(")" 0 1 (face font-lock-type-face fontified nil)) . -11321) (11318 . 11322)) nil (25364 44529 327258 608000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -11130) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) 11131 (t 25364 44529 381288 728000)) nil (25364 44546 864466 891000) 0 nil])
([nil nil ((11131 . 11133)) nil (25364 44546 864463 856000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -11131) (undo-tree-id1887 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -11132) (undo-tree-id1888 . -1) 11133) nil (25364 44546 864462 552000) 0 nil])
([nil nil ((11131 . 11133)) nil (25364 44546 864458 674000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face fontified t)) . -11132) (undo-tree-id1886 . -1) 11133) nil (25364 44546 864456 490000) 0 nil])
([nil nil ((11132 . 11133)) nil (25364 44546 864446 329000) 0 nil])
([nil nil ((11346 . 11348) (t 25364 44546 884623 136000)) nil (25364 44596 203627 769000) 0 nil])
([nil nil ((11346 . 11355) (#("At" 0 2 (fontified nil)) . 11346) (11346 . 11348) (#("AtomicU64" 0 9 (fontified nil)) . -11346) (11346 . 11355) (#("At" 0 2 (face font-lock-type-face fontified t)) . -11346) (undo-tree-id1926 . -2) (undo-tree-id1927 . -2) 11348) nil (25364 44596 203625 761000) 0 nil])
([nil nil ((11355 . 11359)) nil (25364 44596 203622 28000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11357) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (#("p" 0 1 (fontified t)) . -11358) (undo-tree-id1925 . -1) 11359) nil (25364 44596 203620 504000) 0 nil])
([nil nil ((11357 . 11359)) nil (25364 44596 203616 760000) 0 nil])
([nil nil ((11357 . 11361) (#("lo" 0 2 (fontified nil)) . 11357) (11357 . 11359) (#("load" 0 4 (fontified t)) . -11357) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (11357 . 11361) (#("lo" 0 2 (fontified t)) . -11357) (undo-tree-id1921 . -2) (undo-tree-id1922 . -2) 11359) nil (25364 44596 203614 959000) 0 nil])
([nil nil ((11361 . 11363)) nil (25364 44596 203609 655000) 0 nil])
([nil nil ((11362 . 11367)) nil (25364 44596 203608 721000) 0 nil])
([nil nil ((11363 . 11370) (#("TIME" 0 4 (fontified nil)) . 11363) (11363 . 11367) (#("TIME_MS" 0 7 (face font-lock-type-face fontified t)) . -11363) (undo-tree-id1914 . -7) (undo-tree-id1915 . -7) (11363 . 11370) (#("TIME" 0 4 (face font-lock-type-face fontified t)) . -11363) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) 11367) nil (25364 44596 203606 710000) 0 nil])
([nil nil ((11370 . 11376)) nil (25364 44596 203599 848000) 0 nil])
([nil nil ((11371 . 11379) (#("Order" 0 5 (fontified nil)) . 11371) (11371 . 11376) (#("Ordering" 0 8 (face font-lock-type-face fontified t)) . -11371) (undo-tree-id1910 . -8) (undo-tree-id1911 . -8) (11371 . 11379) (#("Order" 0 5 (face font-lock-type-face fontified t)) . -11371) (undo-tree-id1912 . -5) (undo-tree-id1913 . -5) 11376) nil (25364 44596 203597 880000) 0 nil])
([nil nil ((11379 . 11382)) nil (25364 44596 203591 675000) 0 nil])
([nil nil ((11381 . 11388) (#("R" 0 1 (fontified nil)) . 11381) (11381 . 11382) (#("Relaxed" 0 7 (fontified nil)) . -11381) (11381 . 11388) (#("R" 0 1 (face font-lock-type-face fontified t)) . -11381) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) 11382) nil (25364 44596 203589 245000) 0 nil])
([nil nil ((11389 . 11396)) nil (25364 44596 203581 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11389) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (#("a" 0 1 (fontified t)) . -11390) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -11391) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#(" " 0 1 (fontified t)) . -11392) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (#("f" 0 1 (fontified t)) . -11393) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (#("6" 0 1 (fontified t)) . -11394) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#("4" 0 1 (face font-lock-type-face fontified t)) . -11395) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) 11396) nil (25364 44596 203574 771000) 0 nil])
([nil nil ((11324 . 11329) (t 25364 44596 257959 501000)) nil (25364 44687 169915 630000) 0 nil])
([nil nil ((11329 . 11338)) nil (25364 44687 169913 230000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11335) (undo-tree-id2031 . -1) (#("e" 0 1 (fontified t)) . -11336) (undo-tree-id2032 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -11337) (undo-tree-id2033 . -1) 11338) nil (25364 44687 169910 335000) 0 nil])
([nil nil ((11335 . 11339)) nil (25364 44687 169903 44000) 0 nil])
([nil nil ((11339 . 11344)) nil (25364 44687 169901 387000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11343) (undo-tree-id2030 . -1) 11344) nil (25364 44687 169899 394000) 0 nil])
([nil nil ((11343 . 11345)) nil (25364 44687 169895 807000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -11344) (undo-tree-id2029 . -1) 11345) nil (25364 44687 169893 742000) 0 nil])
([nil nil ((11344 . 11349)) nil (25364 44687 169890 25000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11346) (undo-tree-id2026 . -1) (#("t" 0 1 (fontified t)) . -11347) (undo-tree-id2027 . -1) (#("r" 0 1 (fontified t)) . -11348) (undo-tree-id2028 . -1) 11349) nil (25364 44687 169887 331000) 0 nil])
([nil nil ((11346 . 11349)) nil (25364 44687 169879 890000) 0 nil])
([nil nil ((11349 . 11350)) nil (25364 44687 169878 171000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11347) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (#("e" 0 1 (fontified t)) . -11348) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (#("c" 0 1 (fontified t)) . -11349) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) 11350) nil (25364 44687 169875 142000) 0 nil])
([nil nil ((11347 . 11349)) nil (25364 44687 169863 163000) 0 nil])
([nil nil ((11349 . 11351)) nil (25364 44687 169861 360000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11335) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (#("e" 0 1 (fontified t)) . -11336) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -11337) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#(" " 0 1 (fontified t)) . -11338) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -11339) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -11340) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -11341) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -11342) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -11343) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -11344) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . -11345) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#("." 0 1 (fontified t)) . -11346) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (#("r" 0 1 (fontified t)) . -11347) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#("e" 0 1 (fontified t)) . -11348) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (#("c" 0 1 (fontified t)) . -11349) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (#("v" 0 1 (fontified t)) . -11350) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) 11351) nil (25364 44687 169847 418000) 0 nil])
([nil nil ((11335 . 11338)) nil (25364 44687 169707 326000) 0 nil])
([nil nil ((11338 . 11341)) nil (25364 44687 169705 929000) 0 nil])
([nil nil ((11338 . 11347) (#("let" 0 3 (fontified nil)) . 11338) (11338 . 11341) (#("while let" 0 9 (fontified nil)) . -11338) (11338 . 11347) (#("let" 0 3 (face font-lock-keyword-face fontified t)) . -11338) (undo-tree-id1931 . -3) (undo-tree-id1932 . -3) 11341) nil (25364 44687 169702 514000) 0 nil])
([nil nil ((#("while " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -11338) (undo-tree-id1930 . -6) 11344) nil (25364 44687 169694 606000) 0 nil])
([nil nil ((#("if " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . -11335) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) 11338) nil (25364 44687 169689 669000) 0 nil])
([nil nil ((11338 . 11339)) nil (25364 44687 169678 252000) 0 nil])
([nil nil ((11411 . 11413)) nil (25364 44687 169672 898000) 0 nil])
([nil nil ((11339 . 11345) (t 25364 44687 224631 752000)) nil (25364 44721 721018 815000) 0 nil])
([nil nil ((11345 . 11346)) nil (25364 44723 775241 537000) 0 nil])
([nil nil ((#("while let done_rx" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 15 (face font-lock-variable-name-face fontified t) 15 17 (face font-lock-variable-name-face fontified t)) . 11329) (undo-tree-id2056 . -10) (undo-tree-id2057 . -10) (undo-tree-id2058 . -17) (undo-tree-id2059 . -5) (undo-tree-id2060 . -17)) nil (25364 44726 527375 945000) 0 nil] [nil nil ((#("rx" 0 2 (face font-lock-variable-name-face fontified t)) . -11344) (undo-tree-id2042 . -2) 11346) ((11344 . 11346)) (25364 44723 466273 152000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11329) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1)) nil (25364 44726 527367 794000) 0 nil])
([nil nil ((#("done_" 0 5 (face font-lock-variable-name-face fontified t)) . -11339) (undo-tree-id2041 . -5) 11344) ((11339 . 11344)) (25364 44723 47251 874000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11329)) nil (25364 44726 527354 580000) 0 nil])
([nil nil ((#("let " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -11335) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) 11339) ((11335 . 11339)) (25364 44722 707372 764000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11396) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -11397) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) 11398 (t 25364 44726 551300 832000)) nil (25364 44730 828561 209000) 0 nil])
([nil nil ((#("while " 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . -11329) (undo-tree-id2035 . -6) (undo-tree-id2036 . -6) (undo-tree-id2037 . -6) 11335) ((11329 . 11335)) (25364 44722 416302 979000) 0 nil])
([nil nil ((#("bar.set_position(AtomicU64::load(&TIME_MS,Ordering::Relaxed));" 0 3 (fontified t) 3 4 (fontified t) 4 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 26 (face font-lock-type-face fontified t) 26 28 (fontified t) 28 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t) 33 34 (face rust-ampersand-face fontified t) 34 41 (face font-lock-type-face fontified t) 41 42 (fontified t) 42 50 (face font-lock-type-face fontified t) 50 52 (fontified t) 52 59 (face font-lock-type-face fontified t) 59 60 (face (rainbow-delimiters-depth-3-face) fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 62 (fontified t)) . 11329) (undo-tree-id2067 . -13) (undo-tree-id2068 . -4) (undo-tree-id2069 . -13) (undo-tree-id2070 . -33) (undo-tree-id2071 . -62) (undo-tree-id2072 . -62) (undo-tree-id2073 . -3) (undo-tree-id2074 . -62) (t 25364 44730 881301 98000)) nil (25364 44738 535822 948000) 0 nil])
([nil nil ((11329 . 11333)) ((#("donr" 0 4 (fontified t)) . 11329) (undo-tree-id2053 . -4)) (25364 44722 37032 533000) 0 nil])
([nil nil ((11261 . 11266) (#("   " 0 3 (fontified nil)) . 11261) (#(" " 0 1 (fontified nil)) . 11260) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (11261 . 11262)) nil (25364 44738 535813 811000) 0 nil])
([nil nil ((11329 . 11336) (#("donr" 0 4 (fontified nil)) . 11329) (11329 . 11333) (#("done_rx" 0 7 (fontified nil)) . -11329) (11329 . 11336) (#("donr" 0 4 (fontified t)) . -11329) (undo-tree-id2034 . -4) 11333) ((11329 . 11333) (#("done_rx" 0 7 (fontified nil)) . 11329) (11329 . 11336) (#("donr" 0 4 (fontified nil)) . 11329) (11329 . 11333) (#("done_rx" 0 7 (fontified t)) . 11329) (undo-tree-id2049 . -7) (undo-tree-id2050 . -7) (undo-tree-id2051 . -7) (undo-tree-id2052 . -5)) (25364 44721 723473 898000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11327 . 11328) (nil fontified nil 11327 . 11328) (nil fontified nil 11326 . 11327) (nil fontified nil 11325 . 11326) (nil fontified nil 11318 . 11325) (nil fontified nil 11316 . 11318) (nil fontified nil 11308 . 11316) (nil fontified nil 11307 . 11308) (nil fontified nil 11300 . 11307) (nil fontified nil 11299 . 11300) (nil fontified nil 11298 . 11299) (nil fontified nil 11294 . 11298) (nil fontified nil 11292 . 11294) (nil fontified nil 11283 . 11292) (nil fontified nil 11282 . 11283) (nil fontified nil 11270 . 11282) (nil fontified nil 11269 . 11270) (nil fontified nil 11266 . 11269) (11266 . 11328)) nil (25364 44738 535800 522000) 0 nil])
([nil nil ((11336 . 11337)) ((#("." 0 1 (fontified nil)) . 11336) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1)) (25364 44721 721837 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11388) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (#(" " 0 1 (fontified t)) . -11389) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (#(" " 0 1 (fontified t)) . -11390) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (#(" " 0 1 (fontified t)) . -11391) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (#(" " 0 1 (fontified t)) . -11392) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) 11393 (t 25364 44738 587968 238000)) nil (25364 44746 714414 874000) 0 nil])
([nil nil ((11337 . 11349) (#("recv_timeout" 0 12 (fontified nil)) . -11337) (11337 . 11349)) ((#("recv_timeout" 0 12 (fontified nil)) . 11337) (11337 . 11349) (#("recv_timeout" 0 12 (fontified t)) . 11337) (undo-tree-id2043 . -12) (undo-tree-id2044 . -12) (undo-tree-id2045 . -12)) (25364 44721 720982 27000) 0 nil])
([nil nil ((#("let bar = ProgressBar::new(duration as u64);" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-variable-name-face fontified t) 7 10 (fontified t) 10 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-2-face) fontified t) 27 36 (fontified t) 36 38 (face font-lock-keyword-face fontified t) 38 39 (fontified t) 39 42 (face font-lock-type-face fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (fontified t)) . 11344) (undo-tree-id2075 . -44) (undo-tree-id2076 . -16) (undo-tree-id2077 . -44) (undo-tree-id2078 . -16) (undo-tree-id2079 . -44) (undo-tree-id2080 . -44) (undo-tree-id2081 . -44) (undo-tree-id2082 . -44) (undo-tree-id2083 . -44) (undo-tree-id2084 . -44)) nil (25364 44746 714052 123000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11107 . 11108) (nil fontified nil 11107 . 11108) (nil fontified nil 11106 . 11107) (nil fontified nil 11103 . 11106) (nil fontified nil 11102 . 11103) (nil fontified nil 11100 . 11102) (nil fontified nil 11091 . 11100) (nil fontified nil 11090 . 11091) (nil fontified nil 11087 . 11090) (nil fontified nil 11085 . 11087) (nil fontified nil 11074 . 11085) (nil fontified nil 11071 . 11074) (nil fontified nil 11068 . 11071) (nil fontified nil 11067 . 11068) (nil fontified nil 11064 . 11067) (11064 . 11108)) nil (25364 44746 714037 749000) 0 nil])
([nil nil ((11064 . 11068) 11108) nil (25364 44746 714030 235000) 0 nil])
([nil nil ((11063 . 11068) (t 25364 44746 764635 406000)) nil (25364 44750 384837 418000) 0 nil])
([nil nil ((11164 . 11166) (t 25364 44750 394635 629000)) nil (25364 44773 433133 549000) 0 nil])
([nil nil ((11381 . 11382) (t 25364 44773 487970 381000)) nil (25364 44809 218570 400000) 0 nil])
([nil nil ((11382 . 11385)) nil (25364 44809 218568 917000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11381) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("a" 0 1 (fontified t)) . -11382) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -11383) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (#(" " 0 1 (fontified t)) . -11384) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) 11385) nil (25364 44809 218566 522000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -11381) (undo-tree-id2132 . -1) (undo-tree-id2133 . 1) (undo-tree-id2134 . -1) 11382) nil (25364 44809 218556 283000) 0 nil])
([nil nil ((11381 . 11382) (#(")" 0 1 (face (rainbow-delimiters-depth-6-face) fontified nil)) . -11381) (11381 . 11382)) nil (25364 44809 218551 601000) 0 nil])
([nil nil ((11381 . 11382)) nil (25364 44809 218550 72000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11381) (undo-tree-id2131 . -1) 11382) nil (25364 44809 218548 684000) 0 nil])
([nil nil ((11381 . 11387)) nil (25364 44809 218546 243000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -11386) (undo-tree-id2130 . -1) 11387) nil (25364 44809 218544 663000) 0 nil])
([nil nil ((11386 . 11392)) nil (25364 44809 218541 330000) 0 nil])
([nil nil ((11389 . 11400) (#("sam" 0 3 (fontified nil)) . 11389) (11389 . 11392) (#("sample_rate" 0 11 (fontified t)) . -11389) (undo-tree-id2126 . -11) (undo-tree-id2127 . -11) (11389 . 11400) (#("sam" 0 3 (fontified t)) . -11389) (undo-tree-id2128 . -3) (undo-tree-id2129 . -3) 11392) nil (25364 44809 218535 196000) 0 nil])
([nil nil ((11400 . 11405) (t 25364 44809 237972 576000)) nil (25364 44836 313170 254000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -11404) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) 11405) nil (25364 44836 313168 514000) 0 nil])
([nil nil ((11408 . 11409) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified nil)) . -11408) (11408 . 11409) (#(")" 0 1 (fontified nil)) . -11407) (11407 . 11408) (#(")" 0 1 (face font-lock-type-face fontified nil)) . -11407) (11404 . 11408)) nil (25364 44836 313164 105000) 0 nil])
([nil nil ((11337 . 11338) (11337 . 11338) (#("(" 0 1 (fontified nil)) . -11337) (11337 . 11338)) nil (25364 44836 313161 71000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . 11338) (undo-tree-id2144 . 1)) nil (25364 44836 313158 957000) 0 nil])
([nil nil ((11409 . 11414)) nil (25364 44836 313156 7000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11413) (undo-tree-id2143 . -1) 11414) nil (25364 44836 313152 987000) 0 nil])
([nil nil ((11413 . 11416)) nil (25364 44836 313140 596000) 0 nil])
([nil nil ((#("secs" 0 4 (fontified t)) . -11306) (undo-tree-id2156 . -3) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) 11310 (t 25364 44836 337974 239000)) nil (25364 45081 41553 210000) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -11301) (undo-tree-id2153 . -5) (undo-tree-id2154 . -5) (undo-tree-id2155 . -5) 11306) nil (25364 45081 41548 503000) 0 nil])
([nil nil ((11301 . 11302)) nil (25364 45081 41544 203000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -11301) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) 11302) nil (25364 45081 41542 832000) 0 nil])
([nil nil ((11301 . 11303)) nil (25364 45081 41539 504000) 0 nil])
([nil nil ((11301 . 11312) (#("fr" 0 2 (fontified nil)) . 11301) (11301 . 11303) (#("from_millis" 0 11 (fontified nil)) . -11301) (11301 . 11312) (#("fr" 0 2 (fontified t)) . -11301) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -1) (undo-tree-id2150 . -2) 11303) nil (25364 45081 41536 235000) 0 nil])
([nil nil ((11314 . 11316)) nil (25364 45081 41520 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 669 . 670) (nil fontified nil 639 . 670) (639 . 670) (t 25364 45081 57989 176000)) nil (25366 757 273072 194000) 0 nil])
([nil nil ((756 . 758) (t 25366 757 312598 403000)) nil (25366 869 412625 227000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1080 . 1081) (nil fontified nil 757 . 1081) (757 . 1081)) nil (25366 869 412624 37000) 0 nil])
([nil nil ((#("/// Simple program to greet a person" 0 36 (fontified t face font-lock-doc-face)) . 757) (undo-tree-id1 . -6) (undo-tree-id2 . -36) (undo-tree-id3 . -36)) nil (25366 869 412621 947000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 757) (undo-tree-id0 . -1)) nil (25366 869 412615 167000) 0 nil])
([nil nil ((756 . 757) (t 25366 869 435930 521000)) nil (25366 894 808055 147000) 0 nil])
([nil nil ((#("name" 0 4 (fontified t face font-lock-variable-name-face)) . -924) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) 928 (t 25366 894 819263 572000)) nil (25366 933 892461 831000) 0 nil])
([nil nil ((924 . 928)) nil (25366 933 892457 717000) 0 nil])
([nil nil ((#("   /// Number of times to greet
   #[clap(short, long, value_parser, default_value_t = 1)]
   count: u8," 0 3 (fontified t) 3 32 (fontified t face font-lock-doc-face) 32 35 (fontified t) 35 36 (fontified t face font-lock-preprocessor-face) 36 37 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 37 41 (fontified t face font-lock-preprocessor-face) 41 42 (fontified t face (rainbow-delimiters-depth-3-face font-lock-preprocessor-face)) 42 88 (fontified t face font-lock-preprocessor-face) 88 89 (fontified t face (rainbow-delimiters-depth-3-face font-lock-preprocessor-face)) 89 90 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 90 94 (fontified t) 94 99 (fontified t face font-lock-variable-name-face) 99 101 (fontified t) 101 103 (fontified t face font-lock-type-face) 103 104 (fontified t)) . 939) (undo-tree-id12 . -104) (undo-tree-id13 . -94) (undo-tree-id14 . -94) (undo-tree-id15 . -104) (undo-tree-id16 . -104)) nil (25366 933 892455 936000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -938) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 939) nil (25366 933 892441 943000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -938) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 939) nil (25366 933 892432 103000) 0 nil])
([nil nil ((#("greet" 0 5 (fontified t face font-lock-doc-face)) . -877) (undo-tree-id33 . -5) (undo-tree-id34 . -5) 882 (t 25366 933 915929 810000)) nil (25366 939 205095 800000) 0 nil])
([nil nil ((#("to " 0 3 (fontified t face font-lock-doc-face)) . -874) (undo-tree-id31 . -3) (undo-tree-id32 . -3) 877) nil (25366 939 205093 134000) 0 nil])
([nil nil ((#("person " 0 7 (fontified t face font-lock-doc-face)) . -867) (undo-tree-id29 . -7) (undo-tree-id30 . -7) 874) nil (25366 939 205090 839000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t face font-lock-doc-face)) . -863) (undo-tree-id27 . -4) (undo-tree-id28 . -4) 867) nil (25366 939 205088 231000) 0 nil])
([nil nil ((#("of " 0 3 (fontified t face font-lock-doc-face)) . -860) (undo-tree-id25 . -3) (undo-tree-id26 . -3) 863) nil (25366 939 205085 652000) 0 nil])
([nil nil ((#("Name " 0 5 (fontified t face font-lock-doc-face)) . -855) (undo-tree-id22 . -5) (undo-tree-id23 . -3) (undo-tree-id24 . -5) 860) nil (25366 939 205082 929000) 0 nil])
([nil nil ((855 . 859)) nil (25366 939 205079 159000) 0 nil])
([nil nil ((859 . 861)) nil (25366 939 205078 283000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-doc-face)) . -860) (undo-tree-id21 . -1) 861) nil (25366 939 205076 432000) 0 nil])
([nil nil ((860 . 865)) nil (25366 939 205065 789000) 0 nil])
([nil nil ((901 . 904) (t 25366 939 225929 752000)) nil (25366 950 498257 24000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-preprocessor-face)) . -903) (undo-tree-id39 . -1) 904) nil (25366 950 498254 758000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-preprocessor-face)) . -901) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t face font-lock-preprocessor-face)) . -902) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 903) nil (25366 950 498247 964000) 0 nil])
([nil nil ((10785 . 10789) (#("    " 0 4 (fontified nil)) . 10784) (undo-tree-id40 . -4) (10783 . 10789) (t 25366 950 522596 293000)) nil (25366 972 927290 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10817 . 10818) (nil fontified nil 10789 . 10818) (10789 . 10818)) nil (25366 972 927284 268000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -10789) 10795) nil (25366 972 927278 661000) 0 nil])
([nil nil ((10816 . 10820) (#("    " 0 4 (fontified nil)) . 10815) (10815 . 10819) (10815 . 10816) (t 25366 972 979262 713000)) nil (25366 1025 310292 851000) 0 nil])
([nil nil ((10815 . 10819)) nil (25366 1025 310291 134000) 0 nil])
([nil nil ((10816 . 10820) (#("    " 0 4 (fontified nil)) . 10815) (undo-tree-id63 . -4) (10819 . 10820)) nil (25366 1025 310289 918000) 0 nil])
([nil nil ((10820 . 10823)) nil (25366 1025 310287 851000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10820) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -10821) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -10822) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 10823) nil (25366 1025 310286 140000) 0 nil])
([nil nil ((10820 . 10827)) nil (25366 1025 310279 990000) 0 nil])
([nil nil ((10827 . 10831)) nil (25366 1025 310278 787000) 0 nil])
([nil nil ((#("Subcommand" 0 10 (fontified t face font-lock-type-face)) . -658) (undo-tree-id50 . -10) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) 668) nil (25366 1025 310509 16000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . -655) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("," 0 1 (fontified t)) . -656) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t)) . -657) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 658) nil (25366 1029 976895 146000) 0 nil] [nil nil ((#("Parser, " 0 6 (fontified t face font-lock-type-face) 6 8 (fontified t)) . -650) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -6) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) 658) ((650 . 658)) (25366 1025 310266 207000) 0 nil])
([nil nil ((655 . 656)) nil (25366 1029 976876 254000) 0 nil])
nil
([nil nil ((650 . 656) (#("Parser" 0 6 (fontified nil)) . 650) (650 . 656) (#("Parser" 0 6 (fontified t face font-lock-type-face)) . -650) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -5) (undo-tree-id67 . -6) 656) nil (25366 1029 976871 90000) 0 nil])
([nil nil ((#("args" 0 4 (fontified t face font-lock-variable-name-face)) . -10815) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) 10819 (t 25366 1030 32595 415000)) nil (25366 1146 529629 931000) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -10811) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) 10815) nil (25366 1146 529617 853000) 0 nil])
([nil nil ((#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . -10808) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) 10811) nil (25366 1146 529607 386000) 0 nil])
([nil nil ((10803 . 10807) (t 25366 1146 552594 137000)) nil (25366 1271 845092 255000) 0 nil])
([nil nil ((10807 . 10821)) nil (25366 1271 845091 123000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10819) (undo-tree-id108 . -1) (#(":" 0 1 (fontified t)) . -10820) (undo-tree-id109 . -1) 10821) nil (25366 1271 845089 857000) 0 nil])
([nil nil ((10819 . 10823)) nil (25366 1271 845087 224000) 0 nil])
([nil nil ((10821 . 10825) (#("pa" 0 2 (fontified nil)) . 10821) (10821 . 10823) (#("path" 0 4 (fontified nil)) . -10821) (10821 . 10825) (#("pa" 0 2 (fontified t)) . -10821) (undo-tree-id107 . -2) 10823) nil (25366 1271 845085 506000) 0 nil])
([nil nil ((10825 . 10828)) nil (25366 1271 845082 845000) 0 nil])
([nil nil ((10827 . 10831) (#("P" 0 1 (fontified nil)) . 10827) (10827 . 10828) (#("Path" 0 4 (fontified nil)) . -10827) (10827 . 10831) (#("P" 0 1 (fontified t face font-lock-type-face)) . -10827) (undo-tree-id106 . -1) 10828) nil (25366 1271 845081 493000) 0 nil])
([nil nil ((10816 . 10817)) nil (25366 1271 845078 731000) 0 nil])
([nil nil ((10832 . 10840)) nil (25366 1271 845077 904000) 0 nil])
([nil nil ((10840 . 10841)) nil (25366 1271 845076 989000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10840) (undo-tree-id105 . -1) 10841) nil (25366 1271 845075 293000) 0 nil])
([nil nil ((10840 . 10844)) nil (25366 1271 845068 969000) 0 nil])
([nil nil ((10844 . 10845)) nil (25366 1271 845064 718000) 0 nil])
([nil nil ((10849 . 10851) (#(")" 0 1 (fontified nil)) . -10849) (10844 . 10850) (t 25366 1271 899259 423000)) nil (25366 1392 999139 737000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -10850) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 10851) nil (25366 1405 107167 171000) 0 nil] [nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -10849) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . 1) (undo-tree-id115 . -1) (#("_" 0 1 (fontified t)) . -10850) (undo-tree-id116 . -1) 10851) ((10849 . 10851)) (25366 1392 976846 369000) 0 nil])
([nil nil ((768 . 772)) nil (25366 1405 107163 849000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10850) (10850 . 10851) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10850) (10850 . 10851) (10849 . 10851)) ((#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-2-face))) . 10849) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 10850) (10850 . 10851) (#(")" 0 1 (fontified nil)) . 10850) (10850 . 10851) (t 25366 1283 782592 625000)) (25366 1283 759277 520000) 0 nil])
([nil nil ((772 . 774)) nil (25366 1405 107162 186000) 0 nil])
nil
([nil nil ((770 . 777) (#("Defa" 0 4 (fontified nil)) . 770) (770 . 774) (#("Default" 0 7 (fontified t face font-lock-preprocessor-face)) . -770) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (770 . 777) (#("Defa" 0 4 (fontified t face font-lock-preprocessor-face)) . -770) (undo-tree-id122 . -4) (undo-tree-id123 . -4) 774) nil (25366 1405 107157 87000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -10858) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . 1) (undo-tree-id132 . -1) 10859 (t 25366 1405 132591 287000)) nil (25366 1480 32041 835000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -10859) (10859 . 10860) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -10859) (10859 . 10860) (10858 . 10860)) nil (25366 1480 32025 712000) 0 nil])
([nil nil ((10844 . 10845) (t 25366 1480 55923 786000)) nil (25366 1495 458901 616000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face rust-ampersand-face)) . -10844) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 10845 (t 25366 1495 509256 948000)) nil (25366 1498 707596 335000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -656) (undo-tree-id140 . -1) (undo-tree-id141 . 1) (undo-tree-id142 . -1) 657 (t 25366 1498 762590 244000)) nil (25366 1566 304435 173000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -649) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 650) nil (25366 1566 304428 867000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10851) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("i" 0 1 (fontified t)) . -10852) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -10853) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("t" 0 1 (fontified t)) . -10854) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("o" 0 1 (fontified t)) . -10855) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -10856) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -10857) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . 1) (undo-tree-id164 . -1) 10858 (t 25366 1566 329256 168000)) nil (25366 1746 466335 74000) 0 nil])
([nil nil ((#("Path" 0 4 (fontified t face font-lock-type-face)) . -10835) (undo-tree-id173 . -4) (undo-tree-id174 . -4) 10839 (t 25366 1746 489254 188000)) nil (25366 1750 245289 283000) 0 nil])
([nil nil ((#("path::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -10829) (undo-tree-id171 . -6) (undo-tree-id172 . -6) 10835) nil (25366 1750 245286 267000) 0 nil])
([nil nil ((#("std::" 0 1 (fontified t face font-lock-constant-face) 1 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -10824) (undo-tree-id169 . -5) (undo-tree-id170 . -5) 10829) nil (25366 1750 245282 808000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -10822) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t)) . -10823) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 10824) nil (25366 1750 245276 529000) 0 nil])
([nil nil ((10880 . 10882) (t 25366 1750 269254 146000)) nil (25366 1787 756789 834000) 0 nil])
([nil nil ((10904 . 10906)) nil (25366 1787 756788 721000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -10904) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -10905) (undo-tree-id186 . -1) 10906) nil (25366 1787 756786 925000) 0 nil])
([nil nil ((10905 . 10907)) nil (25366 1787 756782 856000) 0 nil])
([nil nil ((11022 . 11026) (#("    " 0 4 (fontified nil)) . 11021) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (11025 . 11026)) nil (25366 1787 756781 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11165 . 11166) (nil fontified nil 11162 . 11166) (nil fontified nil 11160 . 11162) (nil fontified nil 11159 . 11160) (nil fontified nil 11158 . 11159) (nil fontified nil 11157 . 11158) (nil fontified nil 11101 . 11157) (nil fontified nil 11100 . 11101) (nil fontified nil 11094 . 11100) (nil fontified nil 11088 . 11094) (nil fontified nil 11086 . 11088) (nil fontified nil 11085 . 11086) (nil fontified nil 11079 . 11085) (nil fontified nil 11078 . 11079) (nil fontified nil 11072 . 11078) (nil fontified nil 11066 . 11072) (nil fontified nil 11065 . 11066) (nil fontified nil 11057 . 11065) (nil fontified nil 11048 . 11057) (nil fontified nil 11046 . 11048) (nil fontified nil 11045 . 11046) (nil fontified nil 11042 . 11045) (nil fontified nil 11033 . 11042) (nil fontified nil 11031 . 11033) (nil fontified nil 11027 . 11031) (nil fontified nil 11026 . 11027) (nil fontified nil 11023 . 11026) (nil fontified nil 11021 . 11023) (11021 . 11166)) nil (25366 1787 756776 849000) 0 nil])
([nil nil ((11021 . 11025) 11025) nil (25366 1787 756769 988000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face font-lock-comment-face)) . -11053) (11053 . 11054) (#("	" 0 1 (fontified nil)) . 11053) (undo-tree-id181 . -1) (11049 . 11053) 11050) nil (25366 1787 756768 106000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11025) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11026) (undo-tree-id180 . -1) 11027) nil (25366 1787 756764 791000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -11051) (undo-tree-id176 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -11052) (undo-tree-id177 . -1) 11053) nil (25366 1787 756759 412000) 0 nil])
([nil nil ((11047 . 11048) (#("    " 0 4 (fontified t)) . 11047) (undo-tree-id175 . -4) 11051) nil (25366 1787 756751 241000) 0 nil])
([nil nil ((#("mp3\")" 0 4 (fontified t face font-lock-string-face) 4 5 (fontified t face (rainbow-delimiters-depth-3-face))) . -11153) (undo-tree-id228 . -4) (undo-tree-id229 . -5) (undo-tree-id230 . -4) (undo-tree-id231 . -5) (undo-tree-id232 . 1) (undo-tree-id233 . -5) 11158 (t 25366 1787 782587 64000)) nil (25366 1796 294419 730000) 0 nil])
([nil nil ((#("Young." 0 6 (fontified t face font-lock-string-face)) . -11147) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) 11153) nil (25366 1796 294413 78000) 0 nil])
([nil nil ((#("Die " 0 4 (fontified t face font-lock-string-face)) . -11143) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) 11147) nil (25366 1796 294405 391000) 0 nil])
([nil nil ((#("Fast, " 0 6 (fontified t face font-lock-string-face)) . -11137) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) 11143) nil (25366 1796 293639 917000) 0 nil])
([nil nil ((#("Live " 0 5 (fontified t face font-lock-string-face)) . -11132) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) 11137) nil (25366 1796 293634 880000) 0 nil])
([nil nil ((#("YOUTH - " 0 8 (fontified t face font-lock-string-face)) . -11124) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -8) 11132) nil (25366 1796 293630 87000) 0 nil])
([nil nil ((#("Downloads/" 0 10 (fontified t face font-lock-string-face)) . -11114) (undo-tree-id204 . -10) (undo-tree-id205 . -10) (undo-tree-id206 . -10) (undo-tree-id207 . -10) 11124) nil (25366 1796 293625 405000) 0 nil])
([nil nil ((#("zhang/" 0 6 (fontified t face font-lock-string-face)) . -11108) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) 11114) nil (25366 1796 293620 568000) 0 nil])
([nil nil ((#("home/" 0 5 (fontified t face font-lock-string-face)) . -11103) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) 11108) nil (25366 1796 293615 728000) 0 nil])
([nil nil ((#("from(\"/" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face)) 5 7 (fontified t face font-lock-string-face)) . -11096) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -7) 11103) nil (25366 1796 293610 483000) 0 nil])
([nil nil ((#("String::" 0 6 (fontified t face font-lock-type-face) 6 8 (fontified t)) . -11088) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -8) 11096) nil (25366 1796 293604 392000) 0 nil])
([nil nil ((11088 . 11092)) nil (25366 1796 293587 228000) 0 nil])
([nil nil ((743 . 744) (t 25366 1796 349253 636000)) nil (25366 2186 305143 992000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -743) (undo-tree-id247 . -1) 744) nil (25366 2186 305142 878000) 0 nil])
([nil nil ((743 . 744)) nil (25366 2186 305141 301000) 0 nil])
([nil nil ((744 . 745)) nil (25366 2186 305140 469000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -744) (undo-tree-id246 . -1) 745) nil (25366 2186 305139 573000) 0 nil])
([nil nil ((745 . 749) (744 . 746)) nil (25366 2186 305137 925000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-preprocessor-face)) . -748) (undo-tree-id245 . -1) 749) nil (25366 2186 305136 623000) 0 nil])
([nil nil ((750 . 754) (749 . 751) (748 . 750)) nil (25366 2186 305134 914000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face font-lock-preprocessor-face)) . -752) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("t" 0 1 (fontified t face font-lock-preprocessor-face)) . -753) (undo-tree-id244 . -1) 754) nil (25366 2186 305133 138000) 0 nil])
([nil nil ((752 . 754)) nil (25366 2186 305129 807000) 0 nil])
([nil nil ((#("#[cfg((test))]" 0 1 (fontified t face font-lock-preprocessor-face) 1 2 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 2 5 (fontified t face font-lock-preprocessor-face) 5 6 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face font-lock-preprocessor-face)) 7 11 (fontified t face font-lock-preprocessor-face) 11 12 (fontified t face (rainbow-delimiters-depth-3-face font-lock-preprocessor-face)) 12 13 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 13 14 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face))) . 743) (undo-tree-id239 . -11) (undo-tree-id240 . 3) (undo-tree-id241 . -14)) nil (25366 2186 305128 126000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 743) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . 1) (undo-tree-id238 . -1)) nil (25366 2186 305122 49000) 0 nil])
([nil nil ((nil rear-nonsticky nil 739 . 740) (nil fontified nil 692 . 740) (692 . 740) (t 25366 2186 329249 362000)) nil (25366 2239 872668 885000) 0 nil])
([nil nil ((742 . 743) (t 25366 2239 922582 97000)) nil (25366 2347 914231 638000) 0 nil])
([nil nil ((742 . 750)) nil (25366 2347 914230 614000) 0 nil])
([nil nil ((750 . 757)) nil (25366 2347 914229 884000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -755) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -756) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 757) nil (25366 2347 914228 729000) 0 nil])
([nil nil ((755 . 758)) nil (25366 2347 914224 888000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -755) (undo-tree-id265 . -1) (#("=" 0 1 (fontified t)) . -756) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -757) (undo-tree-id267 . -1) 758) nil (25366 2347 914223 607000) 0 nil])
([nil nil ((755 . 758)) nil (25366 2347 914220 458000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -762) (762 . 763) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -762) (762 . 763) (761 . 763) (#("\"" 0 1 (fontified nil face font-lock-type-face)) . -761) (758 . 762)) nil (25366 2347 914219 205000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -761) (undo-tree-id263 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -762) (undo-tree-id264 . -1) 763) nil (25366 2347 914217 18000) 0 nil])
([nil nil ((761 . 764)) nil (25366 2347 914214 453000) 0 nil])
([nil nil ((763 . 766) (#("n" 0 1 (fontified nil)) . 763) (763 . 764) (#("new" 0 3 (fontified nil)) . -763) (763 . 766) (#("n" 0 1 (fontified t)) . -763) (undo-tree-id262 . -1) 764) nil (25366 2347 914213 27000) 0 nil])
([nil nil ((767 . 770) (766 . 768)) nil (25366 2347 914210 346000) 0 nil])
([nil nil ((767 . 772) (#("Mut" 0 3 (fontified nil)) . 767) (767 . 770) (#("Mutex" 0 5 (fontified t face font-lock-type-face)) . -767) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (767 . 772) (#("Mut" 0 3 (fontified t face font-lock-type-face)) . -767) (undo-tree-id260 . -3) (undo-tree-id261 . -3) 770) nil (25366 2347 914208 553000) 0 nil])
([nil nil ((772 . 777)) nil (25366 2347 914201 606000) 0 nil])
([nil nil ((777 . 779)) nil (25366 2347 914200 339000) 0 nil])
([nil nil ((778 . 780)) nil (25366 2347 914198 960000) 0 nil])
([nil nil ((779 . 780)) nil (25366 2347 914197 587000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -779) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 780) nil (25366 2347 914195 885000) 0 nil])
([nil nil ((779 . 780)) nil (25366 2347 914191 890000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -779) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 780) nil (25366 2347 914190 226000) 0 nil])
([nil nil ((779 . 782)) nil (25366 2347 914186 325000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-type-face)) . -780) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("," 0 1 (fontified t)) . -781) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 782) nil (25366 2347 914184 303000) 0 nil])
([nil nil ((780 . 782)) nil (25366 2347 914176 893000) 0 nil])
([nil nil ((779 . 786) (#("Com" 0 3 (fontified nil)) . 779) (779 . 782) (#("Complex" 0 7 (fontified nil)) . -779) (779 . 786) (#("Com" 0 3 (fontified t face font-lock-type-face)) . -779) (undo-tree-id248 . -3) (undo-tree-id249 . -3) 782) nil (25366 2347 914174 365000) 0 nil])
([nil nil ((789 . 792) (786 . 790)) nil (25366 2347 914163 458000) 0 nil])
([nil nil ((793 . 798)) nil (25366 2347 914161 40000) 0 nil])
([nil nil ((801 . 802)) nil (25366 2347 914155 890000) 0 nil])
([nil nil ((#("f32>" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face (rainbow-delimiters-depth-4-face))) . -789) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . 1) (undo-tree-id293 . -4) 793 (t 25366 2347 969247 565000)) nil (25366 2381 303777 867000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -786) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#(":" 0 1 (fontified t)) . -787) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("<" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -788) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 789) nil (25366 2381 303770 609000) 0 nil])
([nil nil ((786 . 788)) nil (25366 2381 303754 831000) 0 nil])
([nil nil ((787 . 790)) nil (25366 2381 303753 744000) 0 nil])
([nil nil ((790 . 793)) nil (25366 2381 303752 461000) 0 nil])
([nil nil ((793 . 794)) nil (25366 2381 303750 881000) 0 nil])
([nil nil ((794 . 800)) nil (25366 2386 519062 828000) 0 nil])
([nil nil ((755 . 761) (t 25366 2381 359247 192000)) nil (25366 2419 809049 956000) 0 nil] [nil nil ((#(":new([Complex{re:0.0,im:0.0};1024]));
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 13 (fontified t face font-lock-type-face) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 16 (fontified t face font-lock-variable-name-face) 16 21 (fontified t) 21 23 (fontified t face font-lock-variable-name-face) 23 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 35 (fontified t face (rainbow-delimiters-depth-2-face)) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 37 (fontified t) 37 38 (fontified t)) . 773) (undo-tree-id294 . -38) (undo-tree-id295 . -38) (undo-tree-id296 . -21) (undo-tree-id297 . 11) (undo-tree-id298 . -38) (t 25366 2381 359247 192000)) ((773 . 811)) (25366 2386 189504 774000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -759) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#(":" 0 1 (fontified t)) . -760) (undo-tree-id317 . -1) (undo-tree-id318 . -1) 761) nil (25366 2419 809048 281000) 0 nil])
([nil nil ((773 . 774)) ((#("x" 0 1 (fontified t)) . 773) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1)) (25366 2386 189290 931000) 0 nil])
([nil nil ((760 . 764) (759 . 761)) nil (25366 2419 809044 468000) 0 nil])
nil
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . -763) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 764) nil (25366 2419 809043 217000) 0 nil])
([nil nil ((766 . 768) (763 . 767)) nil (25366 2419 809040 844000) 0 nil])
([nil nil ((767 . 771)) nil (25366 2419 809039 900000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -770) (undo-tree-id311 . -1) (undo-tree-id312 . -1) 771) nil (25366 2419 809038 888000) 0 nil])
([nil nil ((771 . 772) (770 . 772)) nil (25366 2419 809036 523000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -771) (undo-tree-id309 . -1) (undo-tree-id310 . -1) 772) nil (25366 2419 809035 193000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -770) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 771)) nil (25366 2419 809032 123000) 0 nil])
([nil nil ((770 . 773)) nil (25366 2419 809029 451000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -771) (undo-tree-id306 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 772)) nil (25366 2419 809028 262000) 0 nil])
([nil nil ((771 . 772)) nil (25366 2419 809025 935000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -771) (undo-tree-id305 . -1) 772) nil (25366 2419 809023 999000) 0 nil])
([nil nil ((771 . 779)) nil (25366 2419 809012 816000) 0 nil])
([nil nil ((756 . 757) (t 25366 2419 832580 102000)) nil (25366 2427 903906 186000) 0 nil])
([nil nil ((776 . 779) (775 . 777) (t 25366 2427 922580 12000)) nil (25366 2440 641436 389000) 0 nil])
([nil nil ((#("static buffer: Arc<Mutex<[Complex<f32>;1024]>> = Arc::new(Mutex::new([Complex{re:0.0,im:0.0};1024]));" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 16 (fontified t face font-lock-type-face) 16 18 (fontified t face font-lock-type-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 24 (fontified t face font-lock-type-face) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 33 (fontified t face font-lock-type-face) 33 34 (fontified t face (rainbow-delimiters-depth-4-face)) 34 37 (fontified t face font-lock-type-face) 37 38 (fontified t face (rainbow-delimiters-depth-4-face)) 38 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-3-face)) 44 45 (fontified t face (rainbow-delimiters-depth-2-face)) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 49 (fontified t) 49 52 (fontified t face font-lock-type-face) 52 54 (fontified t) 54 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-1-face)) 58 63 (fontified t face font-lock-type-face) 63 64 (fontified t) 64 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-2-face)) 69 70 (fontified t face (rainbow-delimiters-depth-3-face)) 70 77 (fontified t face font-lock-type-face) 77 78 (fontified t face (rainbow-delimiters-depth-4-face)) 78 80 (fontified t face font-lock-variable-name-face) 80 85 (fontified t) 85 87 (fontified t face font-lock-variable-name-face) 87 91 (fontified t) 91 92 (fontified t face (rainbow-delimiters-depth-4-face)) 92 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-3-face)) 98 99 (fontified t face (rainbow-delimiters-depth-2-face)) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 101 (fontified t)) . 742) (undo-tree-id322 . -33) (undo-tree-id323 . -34) (undo-tree-id324 . 64) (undo-tree-id325 . -49) (undo-tree-id326 . -31) (undo-tree-id327 . -7) (undo-tree-id328 . -13) (undo-tree-id329 . -49) (undo-tree-id330 . -100) (undo-tree-id331 . -7) (undo-tree-id332 . -101) (undo-tree-id333 . -101) (t 25366 2440 665913 204000)) nil (25366 2495 813489 192000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 742) (undo-tree-id319 . -1) (undo-tree-id320 . 1) (undo-tree-id321 . -1)) nil (25366 2495 813475 961000) 0 nil])
([nil nil ((10887 . 10892) (t 25366 2495 839245 932000)) nil (25366 2545 408199 170000) 0 nil])
([nil nil ((10892 . 10899)) nil (25366 2545 408198 175000) 0 nil])
([nil nil ((10884 . 10888) (#("    " 0 4 (fontified nil)) . 10883) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (10887 . 10888)) nil (25366 2545 408196 903000) 0 nil])
([nil nil ((10902 . 10906) (#("    " 0 4 (fontified nil)) . 10901) (undo-tree-id354 . -4) (10905 . 10906)) nil (25366 2545 408193 193000) 0 nil])
([nil nil ((10901 . 10905)) nil (25366 2545 408188 838000) 0 nil])
([nil nil ((10905 . 10918)) nil (25366 2545 408188 62000) 0 nil])
([nil nil ((10918 . 10919)) nil (25366 2545 408187 162000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10918) (undo-tree-id353 . -1) 10919) nil (25366 2545 408184 674000) 0 nil])
([nil nil ((10918 . 10927)) nil (25366 2545 406864 403000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10924) (undo-tree-id350 . -1) (#("e" 0 1 (fontified t)) . -10925) (undo-tree-id351 . -1) (#("w" 0 1 (fontified t)) . -10926) (undo-tree-id352 . -1) 10927) nil (25366 2545 406862 393000) 0 nil])
([nil nil ((10927 . 10938) (10924 . 10928)) nil (25366 2545 406858 29000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -10937) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) 10938) nil (25366 2545 406855 870000) 0 nil])
([nil nil ((10937 . 10939)) nil (25366 2545 406849 678000) 0 nil])
([nil nil ((10938 . 10940)) nil (25366 2545 406848 279000) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -10938) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 10939)) nil (25366 2545 406846 404000) 0 nil])
([nil nil ((10938 . 10939)) nil (25366 2545 406842 107000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-type-face)) . -10938) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 10939) nil (25366 2545 406840 574000) 0 nil])
([nil nil ((10939 . 10943) (10938 . 10940)) nil (25366 2545 406836 29000) 0 nil])
([nil nil ((149 . 185) (149 . 150) (10939 . 10939) (10939 . 10948) (#("Comp" 0 4 (fontified nil)) . 10939) (10939 . 10943) (#("Complex32 (use rustfft::num_complex::Complex32)" 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-5-face)) 11 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 35 (fontified t face font-lock-constant-face) 35 37 (fontified t) 37 46 (fontified t face font-lock-type-face) 46 47 (fontified t face (rainbow-delimiters-depth-5-face))) . -10939) (undo-tree-id334 . -47) (undo-tree-id335 . -47) (10939 . 10986) (#("Comp" 0 4 (fontified t face font-lock-type-face)) . -10939) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) 10943) nil (25366 2545 406831 653000) 0 nil])
([nil nil ((10985 . 10990)) nil (25366 2545 406810 55000) 0 nil])
([nil nil ((10993 . 10994)) nil (25366 2545 406804 975000) 0 nil])
([nil nil ((10985 . 10987) (t 25366 2545 432578 715000)) nil (25366 2561 42279 590000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -10985) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -10986) (undo-tree-id368 . -1) (undo-tree-id369 . 1) (undo-tree-id370 . -1) 10987) nil (25366 2561 42277 834000) 0 nil])
([nil nil ((10985 . 10989)) nil (25366 2561 42272 518000) 0 nil])
([nil nil ((10987 . 10994) (#("de" 0 2 (fontified nil)) . 10987) (10987 . 10989) (#("default (as Default)" 0 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-5-face)) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 19 (fontified t face font-lock-type-face) 19 20 (fontified t face (rainbow-delimiters-depth-5-face))) . -10987) (undo-tree-id358 . -20) (undo-tree-id359 . -20) (10987 . 11007) (#("de" 0 2 (fontified t)) . -10987) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -2) 10989) nil (25366 2561 42269 383000) 0 nil])
([nil nil ((10994 . 10996)) nil (25366 2561 42249 993000) 0 nil])
([nil nil ((11005 . 11010) (t 25366 2561 69245 209000)) nil (25366 2591 409012 467000) 0 nil])
([nil nil ((11010 . 11029)) nil (25366 2591 409011 200000) 0 nil])
([nil nil ((11025 . 11031) (#("buff" 0 4 (fontified nil)) . 11025) (11025 . 11029) (#("buffer" 0 6 (fontified nil)) . -11025) (11025 . 11031) (#("buff" 0 4 (fontified t)) . -11025) (undo-tree-id371 . -4) (undo-tree-id372 . -4) 11029) nil (25366 2591 409008 807000) 0 nil])
([nil nil ((11031 . 11036)) nil (25366 2591 409000 536000) 0 nil])
([nil nil ((11036 . 11037)) nil (25366 2591 408999 379000) 0 nil])
([nil nil ((11037 . 11039)) nil (25366 2591 408997 33000) 0 nil])
([nil nil ((11039 . 11040)) nil (25366 2591 408968 993000) 0 nil])
([nil nil ((11611 . 11615) (#("    " 0 4 (fontified nil)) . 11610) (undo-tree-id378 . -4) (11610 . 11615) (#("    " 0 4 (fontified nil)) . 11609) (undo-tree-id379 . -4) (11609 . 11614) (#("    " 0 4 (fontified nil)) . 11608) (undo-tree-id380 . -4) (11612 . 11613) (t 25366 2591 462578 206000)) nil (25366 2694 382558 937000) 0 nil])
([nil nil ((11609 . 11613)) nil (25366 2694 382553 884000) 0 nil])
([nil nil ((10958 . 10965) (10952 . 10959)) nil (25366 2694 382552 798000) 0 nil])
([nil nil ((10964 . 10965)) nil (25366 2694 382551 596000) 0 nil])
([nil nil ((10965 . 10968)) nil (25366 2694 382550 658000) 0 nil])
([nil nil ((10968 . 10969)) nil (25366 2694 382549 546000) 0 nil])
([nil nil ((10964 . 10973) (#("Compl" 0 5 (fontified nil)) . 10964) (10964 . 10969) (#("Complex32" 0 9 (fontified nil)) . -10964) (10964 . 10973) (#("Compl" 0 5 (fontified t face font-lock-type-face)) . -10964) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -4) (undo-tree-id376 . -3) (undo-tree-id377 . -4) 10969) nil (25366 2694 382546 380000) 0 nil])
([nil nil ((10974 . 10977) (10973 . 10975)) nil (25366 2694 382530 615000) 0 nil])
([nil nil ((#("let buffer: Arc<Mutex<Complex32<f32>>> = Arc::new(Mutex::new([Complex32::default();1024]));" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 10 (fontified t face font-lock-variable-name-face) 10 12 (fontified t) 12 15 (fontified t face font-lock-type-face) 15 16 (fontified t face (rainbow-delimiters-depth-2-face)) 16 21 (fontified t face font-lock-type-face) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 31 (fontified t face font-lock-type-face) 31 32 (fontified t face (rainbow-delimiters-depth-4-face)) 32 35 (fontified t face font-lock-type-face) 35 36 (fontified t face (rainbow-delimiters-depth-4-face)) 36 37 (fontified t face (rainbow-delimiters-depth-3-face)) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-2-face)) 50 55 (fontified t face font-lock-type-face) 55 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t face (rainbow-delimiters-depth-4-face)) 62 71 (fontified t face font-lock-type-face) 71 73 (fontified t) 73 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-5-face)) 81 82 (fontified t face (rainbow-delimiters-depth-5-face)) 82 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-4-face)) 88 89 (fontified t face (rainbow-delimiters-depth-3-face)) 89 90 (fontified t face (rainbow-delimiters-depth-2-face)) 90 91 (fontified t)) . 10942) (undo-tree-id385 . -22) (undo-tree-id386 . -22) (undo-tree-id387 . -22) (undo-tree-id388 . -32) (undo-tree-id389 . 56) (undo-tree-id390 . -9) (undo-tree-id391 . -39) (undo-tree-id392 . -91) (undo-tree-id393 . -22) (undo-tree-id394 . -31) (undo-tree-id395 . -31) (undo-tree-id396 . -36) (undo-tree-id397 . -61) (undo-tree-id398 . -88) (undo-tree-id399 . -50) (undo-tree-id400 . -60) (undo-tree-id401 . -26) (undo-tree-id402 . -7) (undo-tree-id403 . -38) (undo-tree-id404 . -40) (undo-tree-id405 . -38) (undo-tree-id406 . -91) (t 25366 2694 439243 732000)) nil (25366 2723 74524 950000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10942) (undo-tree-id383 . 1) (undo-tree-id384 . -1)) nil (25366 2723 74375 601000) 0 nil])
([nil nil ((#("    let buffer_2 = buffer.clone();" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 34 (fontified t)) . 10942) (undo-tree-id381 . 34) (undo-tree-id382 . -34)) nil (25366 2723 74368 930000) 0 nil])
([nil nil ((778 . 779) (t 25366 2723 102576 748000)) nil (25366 2737 416704 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 904 . 905) (nil fontified nil 904 . 905) (nil fontified nil 903 . 904) (nil fontified nil 902 . 903) (nil fontified nil 890 . 902) (nil fontified nil 887 . 890) (nil fontified nil 879 . 887) (nil fontified nil 878 . 879) (nil fontified nil 875 . 878) (nil fontified nil 871 . 875) (nil fontified nil 870 . 871) (nil fontified nil 869 . 870) (nil fontified nil 868 . 869) (nil fontified nil 867 . 868) (nil fontified nil 866 . 867) (nil fontified nil 861 . 866) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 852 . 859) (nil fontified nil 850 . 852) (nil fontified nil 841 . 850) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 834 . 839) (nil fontified nil 829 . 834) (nil fontified nil 828 . 829) (nil fontified nil 823 . 828) (nil fontified nil 820 . 823) (nil fontified nil 817 . 820) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 811 . 814) (nil fontified nil 810 . 811) (nil fontified nil 801 . 810) (nil fontified nil 800 . 801) (nil fontified nil 795 . 800) (nil fontified nil 794 . 795) (nil fontified nil 791 . 794) (nil fontified nil 789 . 791) (nil fontified nil 783 . 789) (nil fontified nil 782 . 783) (nil fontified nil 779 . 782) (779 . 905)) nil (25366 2737 416700 862000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-keyword-face)) . -781) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) 782) nil (25366 2737 416690 85000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -779) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (#("e" 0 1 (fontified t)) . -780) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 781) nil (25366 2737 416685 375000) 0 nil])
([nil nil ((779 . 785)) nil (25366 2737 416677 400000) 0 nil])
([nil nil ((#("    let buffer_2 = buffer.clone();" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t face (rainbow-delimiters-depth-1-face)) 33 34 (rear-nonsticky t fontified t)) . 874) (undo-tree-id409 . -4) (undo-tree-id410 . -5) (undo-tree-id411 . -16) (undo-tree-id412 . -17) (undo-tree-id413 . -16) (undo-tree-id414 . -17) (undo-tree-id415 . -16) (undo-tree-id416 . -17) (undo-tree-id417 . -17) (undo-tree-id418 . -18) (undo-tree-id419 . -25) (undo-tree-id420 . -26) (undo-tree-id421 . -25) (undo-tree-id422 . -26) (undo-tree-id423 . -25) (undo-tree-id424 . -26) (undo-tree-id425 . -25) (undo-tree-id426 . -26) (undo-tree-id427 . -31) (undo-tree-id428 . -32) (undo-tree-id429 . -4) (undo-tree-id430 . -7) (undo-tree-id431 . -4) (undo-tree-id432 . -34)) nil (25366 2737 416673 715000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 874) (undo-tree-id407 . -1) (undo-tree-id408 . -1)) nil (25366 2737 416648 958000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face font-lock-type-face)) . -816) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#(">" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -817) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . 1) (undo-tree-id459 . -1) 818 (t 25366 2737 445909 922000)) nil (25366 2754 193577 482000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -814) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("3" 0 1 (fontified t)) . -815) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) 816) nil (25366 2754 193565 310000) 0 nil])
([nil nil ((#("<" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -813) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#(">" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 814)) nil (25366 2754 193554 298000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -866) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) 867 (t 25366 2754 222576 403000)) nil (25366 2763 934276 499000) 0 nil])
([nil nil ((866 . 867)) nil (25366 2763 934259 236000) 0 nil])
([nil nil ((804 . 806) (t 25366 2763 952576 295000)) nil (25366 2773 655680 594000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 805) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1)) nil (25366 2773 655678 282000) 0 nil])
([nil nil ((814 . 815) (#("]" 0 1 (fontified nil face font-lock-type-face)) . -814) (814 . 815)) nil (25366 2773 655663 261000) 0 nil])
([nil nil ((814 . 819) (t 25366 2773 709242 854000)) nil (25366 2787 239385 480000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -814) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 815 (t 25366 2787 299242 704000)) nil (25366 2803 793837 317000) 0 nil])
([nil nil ((814 . 816)) nil (25366 2803 793828 647000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -815) (undo-tree-id474 . -1) 816) nil (25366 2803 793823 564000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -872) (872 . 873) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -872) (872 . 873) (t 25366 2803 852575 854000)) nil (25366 2819 883855 31000) 0 nil])
([nil nil ((873 . 875)) nil (25366 2819 883852 92000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 873) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1)) nil (25366 2819 883846 577000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -873) (undo-tree-id487 . -1) (undo-tree-id488 . 1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . 1) (undo-tree-id498 . -1) 874 (t 25366 2819 942575 675000)) nil (25366 2831 55767 199000) 0 nil])
([nil nil ((#("1024]" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face))) . -815) (undo-tree-id507 . -5) (undo-tree-id508 . -5) (undo-tree-id509 . 1) (undo-tree-id510 . -5) 820 (t 25366 2831 115908 885000)) nil (25366 2857 779872 794000) 0 nil])
([nil nil ((#("Complex32;" 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t)) . -805) (undo-tree-id504 . -10) (undo-tree-id505 . -9) (undo-tree-id506 . -10) 815) nil (25366 2857 779867 325000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -804) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) 805) nil (25366 2857 779862 777000) 0 nil])
([nil nil ((805 . 806)) nil (25366 2857 779856 299000) 0 nil])
([nil nil ((804 . 807)) nil (25366 2857 779854 538000) 0 nil])
([nil nil ((804 . 813) (#("Com" 0 3 (fontified nil)) . 804) (804 . 807) (#("Complex32" 0 9 (fontified nil)) . -804) (804 . 813) (#("Com" 0 3 (fontified t face font-lock-type-face)) . -804) (undo-tree-id499 . -3) 807) nil (25366 2857 779848 757000) 0 nil])
([nil nil ((804 . 806) (t 25366 2857 809241 923000)) nil (25366 2870 457367 688000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 805)) nil (25366 2870 457366 299000) 0 nil])
([nil nil ((814 . 815) (#("}" 0 1 (fontified nil face font-lock-type-face)) . -814) (814 . 815)) nil (25366 2870 457364 726000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -814) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . 1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) 815) nil (25366 2870 457361 295000) 0 nil])
([nil nil ((814 . 815) (#("]" 0 1 (fontified nil face font-lock-type-face)) . -814) (814 . 815)) nil (25366 2870 457336 699000) 0 nil])
([nil nil ((814 . 819) (t 25366 2870 485908 449000)) nil (25366 2884 815359 827000) 0 nil])
([nil nil ((#("default()" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 9 (fontified t face (rainbow-delimiters-depth-4-face))) . -857) (undo-tree-id530 . -9) (undo-tree-id531 . -9) (undo-tree-id532 . 1) (undo-tree-id533 . -9) (undo-tree-id534 . 2) (undo-tree-id535 . -8) (undo-tree-id536 . -9) 866 (t 25366 2884 872574 957000)) nil (25366 2968 400838 433000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -855) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#(":" 0 1 (fontified t)) . -856) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) 857) nil (25366 2968 400828 804000) 0 nil])
([nil nil ((856 . 866) (855 . 857)) nil (25366 2968 400815 825000) 0 nil])
([nil nil ((866 . 869)) nil (25366 2968 400810 66000) 0 nil])
([nil nil ((#("static buffer: Arc<Mutex<[Complex32;1024]>> = Arc::new(Mutex::new([Complex32{re:0.0,im:0.0};1024]));" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 18 (fontified t face font-lock-type-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 24 (fontified t face font-lock-type-face) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 35 (fontified t face font-lock-type-face) 35 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-3-face)) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 46 (fontified t) 46 49 (fontified t face font-lock-type-face) 49 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 60 (fontified t face font-lock-type-face) 60 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-2-face)) 66 67 (fontified t face (rainbow-delimiters-depth-3-face)) 67 76 (fontified t face font-lock-type-face) 76 77 (fontified t face (rainbow-delimiters-depth-4-face)) 77 79 (fontified t face font-lock-variable-name-face) 79 84 (fontified t) 84 86 (fontified t face font-lock-variable-name-face) 86 90 (fontified t) 90 91 (fontified t face (rainbow-delimiters-depth-4-face)) 91 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-3-face)) 97 98 (fontified t face (rainbow-delimiters-depth-2-face)) 98 99 (fontified t face (rainbow-delimiters-depth-1-face)) 99 100 (fontified t)) . 779) (undo-tree-id541 . -76) (undo-tree-id542 . -84) (undo-tree-id543 . 10) (undo-tree-id544 . -88) (undo-tree-id545 . -78) (undo-tree-id546 . -7) (undo-tree-id547 . -13) (undo-tree-id548 . -46) (undo-tree-id549 . -99) (undo-tree-id550 . -7) (undo-tree-id551 . -7) (undo-tree-id552 . -100) (undo-tree-id553 . -100) (t 25366 2968 459240 698000)) nil (25366 2985 576056 127000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 779) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . 1) (undo-tree-id540 . -1)) nil (25366 2985 575944 45000) 0 nil])
([nil nil ((2018 . 2023) (t 25366 2985 605907 175000)) nil (25366 3095 720643 7000) 0 nil])
([nil nil ((2023 . 2040)) nil (25366 3095 720641 588000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2038) (undo-tree-id568 . -1) (#(":" 0 1 (fontified t)) . -2039) (undo-tree-id569 . -1) 2040) nil (25366 3095 720639 642000) 0 nil])
([nil nil ((2038 . 2040)) nil (25366 3095 720634 281000) 0 nil])
([nil nil ((2039 . 2044)) nil (25366 3095 720632 639000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face font-lock-type-face)) . -2043) (undo-tree-id566 . -1) (undo-tree-id567 . -1) 2044) nil (25366 3095 720630 368000) 0 nil])
([nil nil ((2039 . 2044) (#("Mute" 0 4 (fontified nil)) . 2039) (2039 . 2043) (#("Mutex" 0 5 (fontified t face font-lock-type-face)) . -2039) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (2039 . 2044) (#("Mute" 0 4 (fontified t face font-lock-type-face)) . -2039) (undo-tree-id564 . -4) (undo-tree-id565 . -4) 2043) nil (25366 3095 720623 527000) 0 nil])
([nil nil ((2045 . 2047) (2044 . 2046)) nil (25366 3095 720613 604000) 0 nil])
([nil nil ((2046 . 2050)) nil (25366 3095 720611 777000) 0 nil])
([nil nil ((2050 . 2051)) nil (25366 3095 720610 276000) 0 nil])
([nil nil ((2046 . 2055) (#("Compl" 0 5 (fontified nil)) . 2046) (2046 . 2051) (#("Complex32" 0 9 (fontified nil)) . -2046) (2046 . 2055) (#("Compl" 0 5 (fontified t face font-lock-type-face)) . -2046) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -4) 2051) nil (25366 3095 720607 548000) 0 nil])
([nil nil ((2055 . 2056)) nil (25366 3095 720599 242000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2055) (undo-tree-id557 . -1) (undo-tree-id558 . -1) 2056) nil (25366 3095 720597 310000) 0 nil])
([nil nil ((2055 . 2060)) nil (25366 3095 720591 428000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -2059) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 2060) nil (25366 3095 720589 241000) 0 nil])
([nil nil ((2059 . 2060)) nil (25366 3095 720584 554000) 0 nil])
([nil nil ((2063 . 2064)) nil (25366 3095 720583 316000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2063) (undo-tree-id554 . -1) 2064) nil (25366 3095 720580 890000) 0 nil])
([nil nil ((2063 . 2064)) nil (25366 3095 720569 694000) 0 nil])
([nil nil ((2731 . 2737) (t 25366 3095 779239 288000)) nil (25366 3115 436975 179000) 0 nil])
([nil nil ((2737 . 2744)) nil (25366 3115 436969 571000) 0 nil])
([nil nil ((2737 . 2738) (t 25366 3115 485905 737000)) nil (25366 3143 251448 819000) 0 nil])
([nil nil ((2738 . 2741)) nil (25366 3143 251447 707000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2738) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("l" 0 1 (fontified t)) . -2739) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("f" 0 1 (fontified t)) . -2740) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 2741) nil (25366 3143 251445 784000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2737) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#("b" 0 1 (fontified t)) . -2738) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . 1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("u" 0 1 (fontified t)) . -2739) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#("f" 0 1 (fontified t)) . -2740) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("f" 0 1 (fontified t)) . -2741) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (#("e" 0 1 (fontified t)) . -2742) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (#("r" 0 1 (fontified t)) . -2743) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("," 0 1 (fontified t)) . -2744) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) 2745) nil (25366 3143 251434 581000) 0 nil])
([nil nil ((2737 . 2739)) nil (25366 3143 249802 831000) 0 nil])
([nil nil ((2739 . 2740) (t 25366 3143 305905 428000)) nil (25366 3150 853553 630000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2739) (undo-tree-id634 . -1) 2740) nil (25366 3150 853550 338000) 0 nil])
([nil nil ((2739 . 2740)) nil (25366 3150 853535 600000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2730) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("
" 0 1 (fontified t)) . -2731) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("	" 0 1 (fontified t)) . -2732) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (#(" " 0 1 (fontified t)) . -2733) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#(" " 0 1 (fontified t)) . -2734) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#(" " 0 1 (fontified t)) . -2735) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#(" " 0 1 (fontified t)) . -2736) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("." 0 1 (fontified t)) . -2737) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#("." 0 1 (fontified t)) . -2738) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("," 0 1 (fontified t)) . -2739) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) 2740 (t 25366 3150 915905 345000)) nil (25366 3158 725108 76000) 0 nil])
([nil nil ((2730 . 2731)) nil (25366 3158 724829 482000) 0 nil])
([nil nil ((2432 . 2438)) nil (25366 3158 724827 542000) 0 nil])
([nil nil ((2438 . 2440)) nil (25366 3158 724821 731000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2432) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("	" 0 1 (fontified t)) . -2433) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#(" " 0 1 (fontified t)) . -2434) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#(" " 0 1 (fontified t)) . -2435) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#(" " 0 1 (fontified t)) . -2436) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#(" " 0 1 (fontified t)) . -2437) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("." 0 1 (fontified t)) . -2438) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("." 0 1 (fontified t)) . -2439) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 2440 (t 25366 3158 752571 925000)) nil (25366 3163 874608 57000) 0 nil])
([nil nil ((2731 . 2737) (t 25366 3163 889238 535000)) nil (25366 3205 578402 323000) 0 nil])
([nil nil ((2737 . 2757)) nil (25366 3205 578400 984000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2754) (undo-tree-id734 . -1) (#("e" 0 1 (fontified t)) . -2755) (undo-tree-id735 . -1) (#("r" 0 1 (fontified t)) . -2756) (undo-tree-id736 . -1) 2757) nil (25366 3205 578398 355000) 0 nil])
([nil nil ((2754 . 2762)) nil (25366 3205 578388 753000) 0 nil])
([nil nil ((2762 . 2764)) nil (25366 3205 578386 576000) 0 nil])
([nil nil ((2764 . 2765)) nil (25366 3205 578381 421000) 0 nil])
([nil nil ((4822 . 4828) (t 25366 3205 595904 740000)) nil (25366 3303 459814 784000) 0 nil])
([nil nil ((4828 . 4838)) nil (25366 3303 459813 610000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -4836) (undo-tree-id769 . -1) (#("u" 0 1 (fontified t)) . -4837) (undo-tree-id770 . -1) 4838) nil (25366 3303 459812 249000) 0 nil])
([nil nil ((4836 . 4837)) nil (25366 3303 459809 125000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4836) (undo-tree-id768 . -1) 4837) nil (25366 3303 459807 935000) 0 nil])
([nil nil ((4836 . 4841)) nil (25366 3303 459805 830000) 0 nil])
([nil nil ((4841 . 4842)) nil (25366 3303 459804 828000) 0 nil])
([nil nil ((4841 . 4844) (#("n" 0 1 (fontified nil)) . 4841) (4841 . 4842) (#("new" 0 3 (fontified nil)) . -4841) (4841 . 4844) (#("n" 0 1 (fontified t)) . -4841) (undo-tree-id767 . -1) 4842) nil (25366 3303 459802 910000) 0 nil])
([nil nil ((4845 . 4850) (4844 . 4846)) nil (25366 3303 459799 579000) 0 nil])
([nil nil ((4845 . 4850) (#("Mutex" 0 5 (fontified nil)) . 4845) (4845 . 4850) (#("Mutex" 0 5 (fontified t face font-lock-type-face)) . -4845) (undo-tree-id765 . -5) (undo-tree-id766 . -5) 4850) nil (25366 3303 459797 698000) 0 nil])
([nil nil ((4850 . 4855)) nil (25366 3303 459794 99000) 0 nil])
([nil nil ((4857 . 4861) (4856 . 4858) (4855 . 4857)) nil (25366 3303 459792 914000) 0 nil])
([nil nil ((4857 . 4866) (#("Comp" 0 4 (fontified nil)) . 4857) (4857 . 4861) (#("Complex32" 0 9 (fontified nil)) . -4857) (4857 . 4866) (#("Comp" 0 4 (fontified t face font-lock-type-face)) . -4857) (undo-tree-id763 . -4) (undo-tree-id764 . -4) 4861) nil (25366 3303 459790 368000) 0 nil])
([nil nil ((4866 . 4868)) nil (25366 3303 459786 155000) 0 nil])
([nil nil ((4867 . 4870)) nil (25366 3303 459785 135000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4867) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("e" 0 1 (fontified t)) . -4868) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (#("." 0 1 (fontified t)) . -4869) (undo-tree-id761 . -1) (undo-tree-id762 . -1) 4870) nil (25366 3303 459783 177000) 0 nil])
([nil nil ((4867 . 4870)) nil (25366 3303 459776 343000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -4869) (undo-tree-id755 . -1) (undo-tree-id756 . -1) 4870) nil (25366 3303 459774 815000) 0 nil])
([nil nil ((4869 . 4871)) nil (25366 3303 459771 840000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4867) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#("m" 0 1 (fontified t)) . -4868) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#(":" 0 1 (fontified t)) . -4869) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (#(" " 0 1 (fontified t)) . -4870) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) 4871) nil (25366 3303 459769 28000) 0 nil])
([nil nil ((4867 . 4873)) nil (25366 3303 459753 221000) 0 nil])
([nil nil ((4873 . 4875)) nil (25366 3303 459752 53000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4874) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 4875) nil (25366 3303 459750 185000) 0 nil])
([nil nil ((4874 . 4880)) nil (25366 3303 459746 422000) 0 nil])
([nil nil ((4881 . 4886)) nil (25366 3303 459745 343000) 0 nil])
([nil nil ((4889 . 4890)) nil (25366 3303 459744 246000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4889) (undo-tree-id737 . -1) 4890) nil (25366 3303 459741 787000) 0 nil])
([nil nil ((4889 . 4890)) nil (25366 3303 459730 98000) 0 nil])
([nil nil ((779 . 782) (t 25366 3303 489236 989000)) nil (25366 3345 573149 124000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -780) (undo-tree-id776 . -1) (#("t" 0 1 (fontified t)) . -781) (undo-tree-id777 . -1) 782) nil (25366 3345 573146 865000) 0 nil])
([nil nil ((780 . 791)) nil (25366 3345 573142 922000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t face font-lock-type-face)) . -789) (undo-tree-id774 . -1) (#("F" 0 1 (fontified t face font-lock-type-face)) . -790) (undo-tree-id775 . -1) 791) nil (25366 3345 573141 28000) 0 nil])
([nil nil ((789 . 801)) nil (25366 3345 573136 603000) 0 nil])
([nil nil ((801 . 808)) nil (25366 3345 573135 402000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -807) (undo-tree-id772 . -1) (undo-tree-id773 . -1) 808) nil (25366 3345 573133 506000) 0 nil])
([nil nil ((807 . 809)) nil (25366 3345 573128 550000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -808) (undo-tree-id771 . -1) 809) nil (25366 3345 573125 422000) 0 nil])
([nil nil ((808 . 809)) nil (25366 3345 573112 438000) 0 nil])
([nil nil ((785 . 787) (t 25366 3345 602569 855000)) nil (25366 3350 345186 354000) 0 nil])
([nil nil ((787 . 788)) nil (25366 3350 345183 392000) 0 nil])
([nil nil ((785 . 786)) nil (25366 3350 345176 825000) 0 nil])
([nil nil ((#("ref" 0 3 (fontified t face font-lock-keyword-face)) . -786) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -1) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) 789 (t 25366 3350 375903 136000)) nil (25366 3359 265501 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -785) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) 786) nil (25366 3359 265488 478000) 0 nil])
([nil nil ((#("1024" 0 4 (fontified t)) . -2086) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) 2090 (t 25366 3359 325903 37000)) nil (25366 3374 934593 168000) 0 nil])
([nil nil ((2086 . 2090)) nil (25366 3374 934587 441000) 0 nil])
([nil nil ((2086 . 2096) (#("BUFF" 0 4 (fontified nil)) . 2086) (2086 . 2090) (#("BUFFER_LEN" 0 10 (fontified nil)) . -2086) (2086 . 2096) (#("BUFF" 0 4 (fontified t face font-lock-type-face)) . -2086) (undo-tree-id789 . -4) 2090) nil (25366 3374 934581 850000) 0 nil])
([nil nil ((2096 . 2103) (t 25366 3374 962569 530000)) nil (25366 3394 373929 975000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -799) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#("4" 0 1 (fontified t face font-lock-type-face)) . -800) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) 801 (t 25366 3394 429235 981000)) nil (25366 3409 426470 102000) 0 nil])
([nil nil ((799 . 803)) nil (25366 3409 426460 387000) 0 nil])
([nil nil ((798 . 803) (#("usize" 0 5 (fontified nil)) . 798) (798 . 803) (#("usize" 0 5 (fontified t face font-lock-type-face)) . -798) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -1) 803) nil (25366 3409 426454 822000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2098) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("i" 0 1 (fontified t)) . -2099) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -2100) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#("t" 0 1 (fontified t)) . -2101) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (#("o" 0 1 (fontified t)) . -2102) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -2103) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -2104) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . 1) (undo-tree-id825 . -1) 2105 (t 25366 3409 442569 149000)) nil (25366 3414 390568 616000) 0 nil])
([nil nil ((#("static" 0 6 (fontified t face font-lock-keyword-face)) . -779) (undo-tree-id827 . -6) (undo-tree-id828 . -6) 785 (t 25366 3414 442569 92000)) nil (25366 3430 842975 325000) 0 nil])
([nil nil ((779 . 781)) nil (25366 3430 842971 842000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -780) (undo-tree-id826 . -1) 781) nil (25366 3430 842969 779000) 0 nil])
([nil nil ((780 . 784)) nil (25366 3430 842958 424000) 0 nil])
([nil nil ((#("1024" 0 4 (fontified t)) . -4919) (undo-tree-id833 . -3) (undo-tree-id834 . -4) (undo-tree-id835 . -3) (undo-tree-id836 . -4) 4923 (t 25366 3430 899235 577000)) nil (25366 3452 542083 14000) 0 nil])
([nil nil ((4919 . 4923)) nil (25366 3452 542077 678000) 0 nil])
([nil nil ((4919 . 4929) (#("BUFF" 0 4 (fontified nil)) . 4919) (4919 . 4923) (#("BUFFER_LEN" 0 10 (fontified t face font-lock-type-face)) . -4919) (undo-tree-id829 . -10) (undo-tree-id830 . -10) (4919 . 4929) (#("BUFF" 0 4 (fontified t face font-lock-type-face)) . -4919) (undo-tree-id831 . -4) (undo-tree-id832 . -4) 4923) nil (25366 3452 542072 68000) 0 nil])
([nil nil ((9505 . 9509) (t 25366 3452 569235 337000)) nil (25366 3576 657134 18000) 0 nil])
([nil nil ((9509 . 9515)) nil (25366 3576 657132 744000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -9509) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (#("e" 0 1 (fontified t)) . -9510) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("l" 0 1 (fontified t)) . -9511) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -9512) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (#("." 0 1 (fontified t)) . -9513) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("/" 0 1 (fontified t)) . -9514) (undo-tree-id860 . -1) 9515) nil (25366 3576 657129 722000) 0 nil])
([nil nil ((9509 . 9512)) nil (25366 3576 657117 163000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9509) (undo-tree-id847 . -1) (#("e" 0 1 (fontified t)) . -9510) (undo-tree-id848 . -1) (#("t" 0 1 (fontified t)) . -9511) (undo-tree-id849 . -1) 9512) nil (25366 3576 657115 424000) 0 nil])
([nil nil ((9509 . 9512)) nil (25366 3576 657110 428000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9509) (undo-tree-id844 . -1) (#("e" 0 1 (fontified t)) . -9510) (undo-tree-id845 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -9511) (undo-tree-id846 . -1) 9512) nil (25366 3576 657108 620000) 0 nil])
([nil nil ((9509 . 9515)) nil (25366 3576 657103 800000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -9511) (undo-tree-id840 . -1) (#(" " 0 1 (fontified t)) . -9512) (undo-tree-id841 . -1) (#("l" 0 1 (fontified t)) . -9513) (undo-tree-id842 . -1) (#("e" 0 1 (fontified t)) . -9514) (undo-tree-id843 . -1) 9515) nil (25366 3576 657101 582000) 0 nil])
([nil nil ((9517 . 9522) (9511 . 9518)) nil (25366 3576 657095 366000) 0 nil])
([nil nil ((9522 . 9527)) nil (25366 3576 657093 962000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -9526) (undo-tree-id838 . -1) (undo-tree-id839 . -1) 9527) nil (25366 3576 657092 390000) 0 nil])
([nil nil ((9526 . 9527)) nil (25366 3576 657086 736000) 0 nil])
([nil nil ((9528 . 9542)) nil (25366 3576 657085 596000) 0 nil])
([nil nil ((8052 . 8057)) nil (25366 3576 657083 703000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8052) (undo-tree-id837 . -1) 8053) nil (25366 3576 657076 924000) 0 nil])
([nil nil ((9546 . 9548) (t 25366 3576 682567 297000)) nil (25366 3664 625251 840000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -9547) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) 9548) nil (25366 3664 625250 191000) 0 nil])
([nil nil ((#("buffer." 0 7 (fontified t)) . -9540) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -2) (undo-tree-id918 . -6) (undo-tree-id919 . -7) (undo-tree-id920 . -6) 9547) nil (25366 3664 625246 147000) 0 nil])
([nil nil ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . -9535) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) 9540) nil (25366 3664 625237 209000) 0 nil])
([nil nil ((#("guard) = " 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-7-face)) 6 9 (fontified t)) . -9526) (undo-tree-id903 . -9) (undo-tree-id904 . -9) (undo-tree-id905 . -9) (undo-tree-id906 . -9) (undo-tree-id907 . -9) (undo-tree-id908 . -9) 9535) nil (25366 3664 623322 325000) 0 nil])
([nil nil ((#("mut " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -9522) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) 9526) nil (25366 3664 623316 332000) 0 nil])
([nil nil ((#("let (&" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 6 (fontified t)) . -9516) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) 9522) nil (25366 3664 623310 423000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9513) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -9514) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (#(" " 0 1 (fontified t)) . -9515) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 9516) nil (25366 3664 623303 89000) 0 nil])
([nil nil ((9513 . 9518)) nil (25366 3664 623290 151000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9515) (undo-tree-id873 . -1) (#("f" 0 1 (fontified t)) . -9516) (undo-tree-id874 . -1) (#("/" 0 1 (fontified t)) . -9517) (undo-tree-id875 . -1) 9518) nil (25366 3664 623288 139000) 0 nil])
([nil nil ((9515 . 9518)) nil (25366 3664 623284 363000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9515) (undo-tree-id870 . -1) (#("l" 0 1 (fontified t)) . -9516) (undo-tree-id871 . -1) (#("f" 0 1 (fontified t)) . -9517) (undo-tree-id872 . -1) 9518) nil (25366 3664 623282 827000) 0 nil])
([nil nil ((9515 . 9522)) nil (25366 3664 623278 451000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9520) (undo-tree-id868 . -1) (#("f" 0 1 (fontified t)) . -9521) (undo-tree-id869 . -1) 9522) nil (25366 3664 623276 955000) 0 nil])
([nil nil ((9520 . 9526)) nil (25366 3664 623274 124000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9525) (undo-tree-id867 . -1) 9526) nil (25366 3664 623272 843000) 0 nil])
([nil nil ((9525 . 9529)) nil (25366 3664 623270 902000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -9527) (undo-tree-id865 . -1) (#("y" 0 1 (fontified t)) . -9528) (undo-tree-id866 . -1) 9529) nil (25366 3664 623269 486000) 0 nil])
([nil nil ((9527 . 9534)) nil (25366 3664 623266 596000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9532) (undo-tree-id863 . -1) (#("k" 0 1 (fontified t)) . -9533) (undo-tree-id864 . -1) 9534) nil (25366 3664 623264 872000) 0 nil])
([nil nil ((9532 . 9534)) nil (25366 3664 623261 749000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9532) (undo-tree-id861 . -1) (#("k" 0 1 (fontified t)) . -9533) (undo-tree-id862 . -1) 9534) nil (25366 3664 623259 546000) 0 nil])
([nil nil ((9532 . 9535)) nil (25366 3664 623251 281000) 0 nil])
([nil nil ((9535 . 9536)) nil (25366 3664 623246 210000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -9513) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#("e" 0 1 (fontified t)) . -9514) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (#("l" 0 1 (fontified t)) . -9515) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#("f" 0 1 (fontified t)) . -9516) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (#("." 0 1 (fontified t)) . -9517) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) 9518 (t 25366 3664 692566 324000)) nil (25366 3741 595713 307000) 0 nil])
([nil nil ((#("lock();" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 6 (fontified t face (rainbow-delimiters-depth-7-face)) 6 7 (fontified t)) . -9524) (undo-tree-id929 . -7) (undo-tree-id930 . 2) (undo-tree-id931 . -7) 9531) nil (25366 3741 595669 630000) 0 nil])
([nil nil ((#("try_" 0 4 (fontified t)) . -9520) (undo-tree-id927 . -4) (undo-tree-id928 . -4) 9524) nil (25366 3741 595661 19000) 0 nil])
([nil nil ((#("buffer." 0 7 (fontified t)) . -9513) (undo-tree-id924 . -7) (undo-tree-id925 . -4) (undo-tree-id926 . -7) 9520) nil (25366 3741 595650 774000) 0 nil])
([nil nil ((9076 . 9080) (t 25366 3741 625898 806000)) nil (25366 3804 224217 482000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9078) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("o" 0 1 (fontified t)) . -9079) (undo-tree-id983 . -1) 9080) nil (25366 3804 224215 533000) 0 nil])
([nil nil ((9078 . 9081)) nil (25366 3804 224211 437000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -9079) (undo-tree-id979 . -1) (#("u" 0 1 (fontified t)) . -9080) (undo-tree-id980 . -1) 9081) nil (25366 3804 224209 886000) 0 nil])
([nil nil ((9079 . 9082)) nil (25366 3804 224206 214000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9080) (undo-tree-id977 . -1) (#("g" 0 1 (fontified t)) . -9081) (undo-tree-id978 . -1) 9082) nil (25366 3804 224204 741000) 0 nil])
([nil nil ((9080 . 9089)) nil (25366 3804 224201 559000) 0 nil])
([nil nil ((9089 . 9091)) nil (25366 3804 224200 464000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -9089) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (#(":" 0 1 (fontified t)) . -9090) (undo-tree-id975 . -1) (undo-tree-id976 . -1) 9091) nil (25366 3804 224198 604000) 0 nil])
([nil nil ((9090 . 9095) (9089 . 9091)) nil (25366 3804 224193 642000) 0 nil])
([nil nil ((9090 . 9095) (#("Mutex" 0 5 (fontified nil)) . 9090) (9090 . 9095) (#("Mutex" 0 5 (fontified t face font-lock-type-face)) . -9090) (undo-tree-id971 . -5) (undo-tree-id972 . -5) 9095) nil (25366 3804 224191 629000) 0 nil])
([nil nil ((#("Mutex>" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t face (rainbow-delimiters-depth-4-face))) . -9090) (undo-tree-id967 . -6) (undo-tree-id968 . -6) (undo-tree-id969 . 1) (undo-tree-id970 . -6) 9096) nil (25366 3804 224187 290000) 0 nil])
([nil nil ((#("Arc<" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face (rainbow-delimiters-depth-4-face))) . -9086) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) 9090) nil (25366 3804 224180 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9119 . 9120) (nil fontified nil 9119 . 9120) (nil fontified nil 9118 . 9119) (nil fontified nil 9117 . 9118) (nil fontified nil 9107 . 9117) (nil fontified nil 9106 . 9107) (nil fontified nil 9097 . 9106) (nil fontified nil 9096 . 9097) (nil fontified nil 9095 . 9096) (nil fontified nil 9090 . 9095) (nil fontified nil 9089 . 9090) (nil fontified nil 9086 . 9089) (9086 . 9120)) nil (25366 3804 224157 327000) 0 nil])
([nil nil ((9557 . 9561) (t 25366 3804 252564 779000)) nil (25366 3820 781879 476000) 0 nil])
([nil nil ((9557 . 9563) (#("buff" 0 4 (fontified nil)) . 9557) (9557 . 9561) (#("buffer" 0 6 (fontified nil)) . -9557) (9557 . 9563) (#("buff" 0 4 (fontified t)) . -9557) (undo-tree-id993 . -4) (undo-tree-id994 . -4) 9561) nil (25366 3820 781876 719000) 0 nil])
([nil nil ((9563 . 9567)) nil (25366 3820 781871 880000) 0 nil])
([nil nil ((9564 . 9572) (#("try" 0 3 (fontified nil)) . 9564) (9564 . 9567) (#("try_lock" 0 8 (fontified nil)) . -9564) (9564 . 9572) (#("try" 0 3 (fontified t face font-lock-keyword-face)) . -9564) (undo-tree-id984 . -3) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -2) (undo-tree-id989 . -3) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -3) 9567) nil (25366 3820 781868 187000) 0 nil])
([nil nil ((9572 . 9574)) nil (25366 3820 781849 424000) 0 nil])
([nil nil ((9574 . 9575)) nil (25366 3820 781842 818000) 0 nil])
([nil nil ((9557 . 9564) (t 25366 3820 812564 595000)) nil (25366 3917 369589 603000) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -9560) (undo-tree-id998 . -4) (undo-tree-id999 . -4) 9564) nil (25366 3917 369587 446000) 0 nil])
([nil nil ((#("if " 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t)) . -9557) (undo-tree-id996 . -3) (undo-tree-id997 . -3) 9560) nil (25366 3917 369583 799000) 0 nil])
([nil nil ((9567 . 9577) (9557 . 9568)) nil (25366 3917 369579 117000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -9576) (undo-tree-id995 . -1) 9577) nil (25366 3917 369576 532000) 0 nil])
([nil nil ((9576 . 9577)) nil (25366 3917 369567 849000) 0 nil])
([nil nil ((9578 . 9581)) nil (25366 3917 369562 117000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9598) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 9599 (t 25366 3917 405896 867000)) nil (25366 3932 516044 898000) 0 nil])
([nil nil ((9598 . 9599)) nil (25366 3932 516032 705000) 0 nil])
([nil nil ((9599 . 9601)) nil (25366 3932 516030 740000) 0 nil])
([nil nil ((9601 . 9608) (9602 . 9605) (#("			    " 0 7 (fontified nil face (rainbow-delimiters-depth-7-face))) . 9601) (9601 . 9608) (9600 . 9602)) nil (25366 3932 516024 29000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face rust-ampersand-face)) . -9567) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (#("m" 0 1 (fontified t)) . -9568) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (#("u" 0 1 (fontified t)) . -9569) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("t" 0 1 (fontified t)) . -9570) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (#(" " 0 1 (fontified t)) . -9571) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) 9572 (t 25366 3932 549230 32000)) nil (25366 3942 812725 93000) 0 nil])
([nil nil ((9603 . 9608) (t 25366 3942 855896 585000)) nil (25366 3984 568306 534000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -9607) (undo-tree-id1047 . -1) 9608) nil (25366 3984 568304 683000) 0 nil])
([nil nil ((9607 . 9611)) nil (25366 3984 568302 529000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9609) (undo-tree-id1045 . -1) (#("m" 0 1 (fontified t)) . -9610) (undo-tree-id1046 . -1) 9611) nil (25366 3984 568300 943000) 0 nil])
([nil nil ((9609 . 9610)) nil (25366 3984 568297 271000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9609) (undo-tree-id1044 . -1) 9610) nil (25366 3984 568295 720000) 0 nil])
([nil nil ((9609 . 9610)) nil (25366 3984 568293 86000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -9609) (undo-tree-id1043 . -1) 9610) nil (25366 3984 568291 477000) 0 nil])
([nil nil ((9609 . 9612)) nil (25366 3984 568288 414000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9608) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("s" 0 1 (fontified t)) . -9609) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("e" 0 1 (fontified t)) . -9610) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("t" 0 1 (fontified t)) . -9611) (undo-tree-id1042 . -1) 9612) nil (25366 3984 568284 761000) 0 nil])
([nil nil ((9603 . 9604)) nil (25366 3984 568264 123000) 0 nil])
([nil nil ((9567 . 9571)) nil (25366 3984 568258 427000) 0 nil])
([nil nil ((9613 . 9616) (t 25366 3984 629229 455000)) nil (25366 4030 502142 395000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -9613) (undo-tree-id1116 . -1) (#(" " 0 1 (fontified t)) . -9614) (undo-tree-id1117 . -1) (#(" " 0 1 (fontified t)) . -9615) (undo-tree-id1118 . -1) 9616) nil (25366 4030 502140 215000) 0 nil])
([nil nil ((9613 . 9615)) nil (25366 4030 502135 304000) 0 nil])
([nil nil ((9614 . 9624)) nil (25366 4030 502133 597000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -9607) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#("g" 0 1 (fontified t)) . -9608) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("u" 0 1 (fontified t)) . -9609) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (#("a" 0 1 (fontified t)) . -9610) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("r" 0 1 (fontified t)) . -9611) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (#("d" 0 1 (fontified t)) . -9612) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-8-face))) . -9613) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#("s" 0 1 (fontified t)) . -9614) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#("t" 0 1 (fontified t)) . -9615) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("a" 0 1 (fontified t)) . -9616) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (#("t" 0 1 (fontified t)) . -9617) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("e" 0 1 (fontified t)) . -9618) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (#("." 0 1 (fontified t)) . -9619) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (#("t" 0 1 (fontified t)) . -9620) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (#("i" 0 1 (fontified t)) . -9621) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#("m" 0 1 (fontified t)) . -9622) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("e" 0 1 (fontified t)) . -9623) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-8-face))) . -9624) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . -1) 9625) nil (25366 4030 502121 672000) 0 nil])
([nil nil ((9607 . 9611) (t 25366 4030 562562 279000)) nil (25366 4121 420319 331000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -9608) (undo-tree-id1133 . -1) (#("a" 0 1 (fontified t)) . -9609) (undo-tree-id1134 . -1) (#("r" 0 1 (fontified t)) . -9610) (undo-tree-id1135 . -1) 9611) nil (25366 4121 420317 378000) 0 nil])
([nil nil ((9608 . 9612)) nil (25366 4121 420313 254000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -9611) (undo-tree-id1132 . -1) 9612) nil (25366 4121 420311 988000) 0 nil])
([nil nil ((9611 . 9613)) nil (25366 4121 420309 987000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9612) (undo-tree-id1131 . -1) 9613) nil (25366 4121 420308 728000) 0 nil])
([nil nil ((9612 . 9613)) nil (25366 4121 420306 693000) 0 nil])
([nil nil ((9613 . 9615)) nil (25366 4121 420305 770000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -9611) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (#("." 0 1 (fontified t)) . -9612) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (#("t" 0 1 (fontified t)) . -9613) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (#("r" 0 1 (fontified t)) . -9614) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) 9615) nil (25366 4121 420303 117000) 0 nil])
([nil nil ((9613 . 9620) (9611 . 9614)) nil (25366 4121 420294 65000) 0 nil])
([nil nil ((9619 . 9623) (#("t" 0 1 (fontified nil)) . 9619) (9619 . 9620) (#("time" 0 4 (fontified nil)) . -9619) (9619 . 9623) (#("t" 0 1 (fontified t)) . -9619) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) 9620) nil (25366 4121 420291 833000) 0 nil])
([nil nil ((9624 . 9627)) nil (25366 4121 420286 325000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9671 . 9672) (nil fontified nil 9669 . 9672) (nil fontified nil 9668 . 9669) (nil fontified nil 9667 . 9668) (nil fontified nil 9666 . 9667) (nil fontified nil 9656 . 9666) (nil fontified nil 9655 . 9656) (nil fontified nil 9649 . 9655) (nil fontified nil 9645 . 9649) (nil fontified nil 9644 . 9645) (nil fontified nil 9627 . 9644) (9627 . 9672)) nil (25366 4121 420284 563000) 0 nil])
([nil nil ((9672 . 9673)) nil (25366 4121 420280 713000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -9672) (undo-tree-id1119 . -1) 9673) nil (25366 4121 420278 498000) 0 nil])
([nil nil ((9672 . 9674) (#(")" 0 1 (fontified nil)) . -9672) (9672 . 9673)) nil (25366 4121 420266 598000) 0 nil])
([nil nil ((9627 . 9631) (t 25366 4121 452561 274000)) nil (25366 4147 476283 426000) 0 nil])
([nil nil ((9631 . 9632)) nil (25366 4162 424350 467000) 0 nil] [nil nil ((9627 . 9636) (#("Compstate" 0 4 (fontified nil) 4 9 (fontified nil face font-lock-type-face)) . 9627) (undo-tree-id1136 . 5) (9627 . 9631) (#("Complex32" 0 9 (fontified nil)) . -9627) (9627 . 9636) (#("Comp" 0 4 (fontified t face font-lock-type-face)) . -9627) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) 9631) ((9627 . 9631) (#("Complex32" 0 9 (fontified nil)) . 9627) (9627 . 9636) (#("Comp" 0 4 (fontified nil)) . 9627) (9627 . 9636) (#("Complex32" 0 9 (fontified t face font-lock-type-face)) . 9627) (undo-tree-id1139 . -9) (undo-tree-id1140 . -9)) (25366 4147 474407 465000) 0 nil])
([nil nil ((9631 . 9633)) nil (25366 4162 424349 431000) 0 nil])
nil
([nil nil ((9627 . 9636) (#("Comple" 0 6 (fontified nil)) . 9627) (9627 . 9633) (#("Complex32" 0 9 (fontified nil)) . -9627) (9627 . 9636) (#("Comple" 0 6 (fontified t face font-lock-type-face)) . -9627) (undo-tree-id1143 . -6) (undo-tree-id1144 . -3) (undo-tree-id1145 . -4) (undo-tree-id1146 . -6) 9633) nil (25366 4162 424347 91000) 0 nil])
([nil nil ((9636 . 9637)) nil (25366 4162 424340 291000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-type-face)) . -9636) (undo-tree-id1142 . -1) 9637) nil (25366 4162 424338 465000) 0 nil])
([nil nil ((9636 . 9638)) nil (25366 4162 424335 102000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-8-face))) . 9637) (undo-tree-id1141 . -1)) nil (25366 4162 424332 603000) 0 nil])
([nil nil ((9684 . 9685) (#("}" 0 1 (fontified nil face (rainbow-delimiters-depth-9-face))) . -9684) (9684 . 9685)) nil (25366 4162 424319 243000) 0 nil])
([nil nil ((9638 . 9640) (t 25366 4162 455894 154000)) nil (25366 4172 4357 693000) 0 nil])
([nil nil ((9640 . 9641)) nil (25366 4172 4355 350000) 0 nil])
([nil nil ((9687 . 9694)) nil (25366 4172 4349 962000) 0 nil])
([nil nil ((9687 . 9688) (t 25366 4172 65894 47000)) nil (25366 4174 778747 318000) 0 nil])
([nil nil ((9641 . 9642) (t 25366 4174 805894 17000)) nil (25366 4190 661828 278000) 0 nil])
([nil nil ((9641 . 9642) (t 25366 4190 689227 174000)) nil (25366 4198 733188 160000) 0 nil])
([nil nil ((9599 . 9607) (t 25366 4198 762560 418000)) nil (25366 4221 789900 849000) 0 nil])
([nil nil ((9607 . 9617)) nil (25366 4221 789899 684000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -9616) (undo-tree-id1151 . -1) 9617) nil (25366 4221 789898 534000) 0 nil])
([nil nil ((9616 . 9618)) nil (25366 4221 789896 296000) 0 nil])
([nil nil ((9616 . 9620) (#("ti" 0 2 (fontified nil)) . 9616) (9616 . 9618) (#("time" 0 4 (fontified nil)) . -9616) (9616 . 9620) (#("ti" 0 2 (fontified t)) . -9616) (undo-tree-id1150 . -2) 9618) nil (25366 4221 789894 820000) 0 nil])
([nil nil ((9620 . 9623)) nil (25366 4221 789891 671000) 0 nil])
([nil nil ((9623 . 9625)) nil (25366 4221 789890 649000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -9624) (undo-tree-id1149 . -1) 9625) nil (25366 4221 789889 546000) 0 nil])
([nil nil ((9624 . 9632)) nil (25366 4221 789887 331000) 0 nil])
([nil nil ((9629 . 9632) (#("len" 0 3 (fontified nil)) . 9629) (9629 . 9632) (#("len" 0 3 (fontified t)) . -9629) (undo-tree-id1148 . -3) 9632) nil (25366 4221 789885 534000) 0 nil])
([nil nil ((9632 . 9633)) nil (25366 4221 789881 777000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -9632) (undo-tree-id1147 . -1) 9633) nil (25366 4221 789879 441000) 0 nil])
([nil nil ((9632 . 9634)) nil (25366 4221 789868 424000) 0 nil])
([nil nil ((9634 . 9637) (t 25366 4221 819226 830000)) nil (25366 4232 971861 925000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-8-face))) . 9636)) nil (25366 4232 971860 387000) 0 nil])
([nil nil ((9734 . 9738) (9640 . 9641) (#("    " 0 4 (fontified nil)) . 9640) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (9736 . 9737)) nil (25366 4232 971858 298000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -9741) (9741 . 9742) (#("	" 0 1 (fontified nil)) . 9741) (undo-tree-id1152 . -1) (9737 . 9741) (9738 . 9739) (#("}" 0 1 (fontified nil)) . -9738) (9738 . 9739)) nil (25366 4232 971849 649000) 0 nil])
([nil nil ((10639 . 10646) (t 25366 4233 2560 39000)) nil (25366 4297 878628 145000) 0 nil])
([nil nil ((10646 . 10652) (#("buffer" 0 6 (fontified nil)) . -10646) (10646 . 10652)) nil (25366 4297 878620 8000) 0 nil])
([nil nil ((10876 . 10884) (t 25366 4297 912559 325000)) nil (25366 4304 334729 769000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -10883) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) 10884) nil (25366 4304 334727 382000) 0 nil])
([nil nil ((10883 . 10887)) nil (25366 4304 334721 798000) 0 nil])
([nil nil ((10883 . 10889) (#("buff" 0 4 (fontified nil)) . 10883) (10883 . 10887) (#("buffer" 0 6 (fontified t)) . -10883) (undo-tree-id1155 . -6) (undo-tree-id1156 . -6) (10883 . 10889) (#("buff" 0 4 (fontified t)) . -10883) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) 10887) nil (25366 4304 334714 815000) 0 nil])
([nil nil ((11113 . 11122) (t 25366 4304 365892 587000)) nil (25366 4311 778894 218000) 0 nil])
([nil nil ((11122 . 11124)) nil (25366 4311 778892 212000) 0 nil])
([nil nil ((11120 . 11126) (#("buff" 0 4 (fontified nil)) . 11120) (11120 . 11124) (#("buffer" 0 6 (fontified t)) . -11120) (undo-tree-id1161 . -6) (undo-tree-id1162 . -6) (11120 . 11126) (#("buff" 0 4 (fontified t)) . -11120) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -1) (undo-tree-id1166 . -2) (undo-tree-id1167 . -3) 11124) nil (25366 4311 778886 210000) 0 nil])
([nil nil ((10652 . 10658) (t 25366 4311 802559 171000)) nil (25366 4354 79109 338000) 0 nil])
([nil nil ((10653 . 10658) (#("clone" 0 5 (fontified nil)) . 10653) (10653 . 10658) (#("clone (as Clone)" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-6-face)) 7 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-type-face) 15 16 (fontified t face (rainbow-delimiters-depth-6-face))) . -10653) (undo-tree-id1168 . -16) (undo-tree-id1169 . -16) (10653 . 10669) (#("clone" 0 5 (fontified t)) . -10653) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -1) (undo-tree-id1173 . -2) (undo-tree-id1174 . -3) (undo-tree-id1175 . -4) (undo-tree-id1176 . -5) 10658) nil (25366 4354 79105 593000) 0 nil])
([nil nil ((10658 . 10660)) nil (25366 4354 79084 604000) 0 nil])
([nil nil ((10897 . 10902) (t 25366 4354 109225 369000)) nil (25366 4361 941363 56000) 0 nil])
([nil nil ((10898 . 10903) (#("clon" 0 4 (fontified nil)) . 10898) (10898 . 10902) (#("clone (as Clone)" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-6-face)) 7 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-type-face) 15 16 (fontified t face (rainbow-delimiters-depth-6-face))) . -10898) (undo-tree-id1177 . -16) (undo-tree-id1178 . -16) (10898 . 10914) (#("clon" 0 4 (fontified t)) . -10898) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) 10902) nil (25366 4361 941358 637000) 0 nil])
([nil nil ((10903 . 10905)) nil (25366 4361 941341 372000) 0 nil])
([nil nil ((11142 . 11146) (t 25366 4362 2558 615000)) nil (25366 4366 648477 15000) 0 nil])
([nil nil ((11143 . 11148) (#("clo" 0 3 (fontified nil)) . 11143) (11143 . 11146) (#("clone (as Clone)" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-6-face)) 7 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-type-face) 15 16 (fontified t face (rainbow-delimiters-depth-6-face))) . -11143) (undo-tree-id1181 . -16) (undo-tree-id1182 . -16) (11143 . 11159) (#("clo" 0 3 (fontified t)) . -11143) (undo-tree-id1183 . -3) (undo-tree-id1184 . -3) 11146) nil (25366 4366 648472 297000) 0 nil])
([nil nil ((11148 . 11150)) nil (25366 4366 648453 708000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -8052) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (#("u" 0 1 (fontified t)) . -8053) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("t" 0 1 (fontified t)) . -8054) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (#(" " 0 1 (fontified t)) . -8055) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) 8056 (t 25366 4366 682558 563000)) nil (25366 4398 812188 811000) 0 nil])
([nil nil ((#("pub buffer: Arc<Mutex<[Complex32;BUFFER_LEN]>>," 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 10 (fontified t face font-lock-variable-name-face) 10 12 (fontified t) 12 15 (fontified t face font-lock-type-face) 15 16 (fontified t face (rainbow-delimiters-depth-2-face)) 16 21 (fontified t face font-lock-type-face) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t face (rainbow-delimiters-depth-4-face)) 23 32 (fontified t face font-lock-type-face) 32 33 (fontified t) 33 43 (fontified t face font-lock-type-face) 43 44 (fontified t face (rainbow-delimiters-depth-4-face)) 44 45 (fontified t face (rainbow-delimiters-depth-3-face)) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t)) . 2054) (undo-tree-id1205 . -47) (undo-tree-id1206 . -12) (undo-tree-id1207 . -4) (undo-tree-id1208 . -46) (undo-tree-id1209 . -47) (undo-tree-id1210 . -47) (t 25366 4398 879224 867000)) nil (25366 4704 778019 654000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2054) (undo-tree-id1204 . -1)) nil (25366 4704 778011 830000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2050) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) 2054) nil (25366 4704 778005 599000) 0 nil])
([nil nil ((#("buffer: self.buffer.clone()," 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-4-face)) 26 27 (fontified t face (rainbow-delimiters-depth-4-face)) 27 28 (fontified t)) . 2722) (undo-tree-id1217 . -27) (undo-tree-id1218 . -6) (undo-tree-id1219 . -13) (undo-tree-id1220 . -19) (undo-tree-id1221 . -28) (undo-tree-id1222 . -28) (t 25366 4704 839221 496000)) nil (25366 4709 835816 347000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2722) (undo-tree-id1216 . -1)) nil (25366 4709 835807 86000) 0 nil])
([nil nil ((#("            " 0 4 (fontified t) 4 12 (fontified t)) . -2718) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -10) 2722) nil (25366 4709 835800 48000) 0 nil])
([nil nil ((#("buffer: Arc::new(Mutex::new([Complex32{re:0.0,im:0.0};BUFFER_LEN]))," 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t) 8 11 (fontified t face font-lock-type-face) 11 13 (fontified t) 13 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 22 (fontified t face font-lock-type-face) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-5-face)) 28 29 (fontified t face (rainbow-delimiters-depth-6-face)) 29 38 (fontified t face font-lock-type-face) 38 39 (fontified t face (rainbow-delimiters-depth-7-face)) 39 41 (fontified t face font-lock-variable-name-face) 41 46 (fontified t) 46 48 (fontified t face font-lock-variable-name-face) 48 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-7-face)) 53 54 (fontified t) 54 64 (fontified t face font-lock-type-face) 64 65 (fontified t face (rainbow-delimiters-depth-6-face)) 65 66 (fontified t face (rainbow-delimiters-depth-5-face)) 66 67 (fontified t face (rainbow-delimiters-depth-4-face)) 67 68 (fontified t)) . 4772) (undo-tree-id1229 . -67) (undo-tree-id1230 . -6) (undo-tree-id1231 . -68) (undo-tree-id1232 . -68) (t 25366 4709 899221 439000)) nil (25366 4720 304347 348000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4772) (undo-tree-id1228 . -1)) nil (25366 4720 304342 41000) 0 nil])
([nil nil ((#("            " 0 4 (fontified t) 4 12 (fontified t)) . -4768) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -10) 4772) nil (25366 4720 304336 708000) 0 nil])
([nil nil ((1097 . 1102) (t 25366 4720 362554 657000)) nil (25366 4744 990144 801000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1149 . 1150) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (nil fontified nil 1145 . 1146) (nil fontified nil 1135 . 1145) (nil fontified nil 1134 . 1135) (nil fontified nil 1125 . 1134) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1118 . 1123) (nil fontified nil 1117 . 1118) (nil fontified nil 1114 . 1117) (nil fontified nil 1112 . 1114) (nil fontified nil 1106 . 1112) (nil fontified nil 1105 . 1106) (nil fontified nil 1102 . 1105) (1102 . 1150)) nil (25366 4744 990141 634000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -1149) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) 1150) nil (25366 4744 990132 425000) 0 nil])
([nil nil ((#("pub " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -1102) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -3) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) 1106 (t 25366 4745 22554 383000)) nil (25366 4750 555667 850000) 0 nil])
([nil nil ((8421 . 8427) (t 25366 4750 585887 655000)) nil (25366 4765 944007 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8495 . 8496) (nil fontified nil 8495 . 8496) (nil fontified nil 8494 . 8495) (nil fontified nil 8493 . 8494) (nil fontified nil 8492 . 8493) (nil fontified nil 8491 . 8492) (nil fontified nil 8481 . 8491) (nil fontified nil 8480 . 8481) (nil fontified nil 8479 . 8480) (nil fontified nil 8475 . 8479) (nil fontified nil 8473 . 8475) (nil fontified nil 8468 . 8473) (nil fontified nil 8466 . 8468) (nil fontified nil 8465 . 8466) (nil fontified nil 8456 . 8465) (nil fontified nil 8455 . 8456) (nil fontified nil 8454 . 8455) (nil fontified nil 8449 . 8454) (nil fontified nil 8444 . 8449) (nil fontified nil 8443 . 8444) (nil fontified nil 8440 . 8443) (nil fontified nil 8438 . 8440) (nil fontified nil 8435 . 8438) (nil fontified nil 8433 . 8435) (nil fontified nil 8427 . 8433) (8427 . 8496)) nil (25366 4765 944005 132000) 0 nil])
([nil nil ((8496 . 8501)) nil (25366 4765 943998 917000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8498) (undo-tree-id1242 . -1) (#(" " 0 1 (fontified t)) . -8499) (undo-tree-id1243 . -1) (#(" " 0 1 (fontified t)) . -8500) (undo-tree-id1244 . -1) 8501) nil (25366 4765 943996 907000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8498) (undo-tree-id1241 . -1)) nil (25366 4765 943991 285000) 0 nil])
([nil nil ((#("         " 0 9 (fontified t)) . -8501) 8498) nil (25366 4765 943980 148000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . -10578) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) 10582 (t 25366 4765 962554 151000)) nil (25366 4795 216859 930000) 0 nil])
([nil nil ((10578 . 10583)) nil (25366 4795 216855 874000) 0 nil])
([nil nil ((10578 . 10586) (#("state" 0 5 (fontified nil)) . 10578) (10578 . 10583) (#("strategy (use core::num::flt2dec::strategy)" 0 43 (fontified nil)) . -10578) (10578 . 10621) (#("state" 0 5 (fontified t)) . -10578) (undo-tree-id1268 . -5) (undo-tree-id1269 . -5) (undo-tree-id1270 . -5) 10583) nil (25366 4795 216853 964000) 0 nil])
([nil nil ((186 . 219) (186 . 187) 10586) nil (25366 4795 216849 887000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . -10614) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (#("a" 0 1 (fontified t)) . -10615) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (#("t" 0 1 (fontified t)) . -10616) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (#("e" 0 1 (fontified t)) . -10617) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (#("g" 0 1 (fontified t)) . -10618) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (#("y" 0 1 (fontified t)) . -10619) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) 10620) nil (25366 4795 216846 515000) 0 nil])
([nil nil ((10614 . 10617)) nil (25366 4795 216834 978000) 0 nil])
([nil nil ((10612 . 10617) (#("state" 0 5 (fontified nil)) . 10612) (10612 . 10617) (#("state" 0 5 (fontified t)) . -10612) (undo-tree-id1253 . -5) (undo-tree-id1254 . -5) 10617) nil (25366 4795 216833 587000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . -10858) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) 10862) nil (25366 4795 216830 238000) 0 nil])
([nil nil ((10858 . 10863)) nil (25366 4795 216827 595000) 0 nil])
([nil nil ((10858 . 10863) (#("state" 0 5 (fontified nil)) . 10858) (10858 . 10863) (#("state" 0 5 (fontified t)) . -10858) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) 10863) nil (25366 4795 216826 161000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . -11104) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) 11108) nil (25366 4795 216822 583000) 0 nil])
([nil nil ((11104 . 11109)) nil (25366 4795 216818 930000) 0 nil])
([nil nil ((11104 . 11109) (#("state" 0 5 (fontified nil)) . 11104) (11104 . 11109) (#("state" 0 5 (fontified t)) . -11104) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) 11109) nil (25366 4795 216814 117000) 0 nil])
([nil nil ((10863 . 10864) (t 25366 4795 249220 494000)) nil (25366 4891 935869 177000) 0 nil])
([nil nil ((10863 . 10864)) nil (25366 4891 935867 644000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10863) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) 10864) nil (25366 4891 935865 876000) 0 nil])
([nil nil ((10863 . 10865)) nil (25366 4891 935861 7000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -10864) (undo-tree-id1277 . -1) 10865) nil (25366 4891 935859 199000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -10863) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) 10864) nil (25366 4891 935854 724000) 0 nil])
([nil nil ((10863 . 10864)) nil (25366 4891 935843 686000) 0 nil])
([nil nil ((10612 . 10613)) nil (25366 4891 935837 366000) 0 nil])
([nil nil ((10618 . 10619) (t 25366 4891 969219 423000)) nil (25366 4948 634102 762000) 0 nil])
([nil nil ((10618 . 10619)) nil (25366 4948 634101 481000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10618) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) 10619) nil (25366 4948 634100 263000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10618) (undo-tree-id1305 . -1) (undo-tree-id1306 . 1) 10619) nil (25366 4948 634097 259000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -10612) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) 10613) nil (25366 4948 634094 240000) 0 nil])
([nil nil ((10617 . 10620)) nil (25366 4948 634091 339000) 0 nil])
([nil nil ((10619 . 10620)) nil (25366 4948 634090 337000) 0 nil])
([nil nil ((9091 . 9092)) nil (25366 4948 634089 233000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9091) (undo-tree-id1302 . -1) 9092) nil (25366 4948 634088 1000) 0 nil])
([nil nil ((#("LEN]>>" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face (rainbow-delimiters-depth-6-face)) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 6 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-4-face))) . -9085) (undo-tree-id1298 . -6) (undo-tree-id1299 . -6) (undo-tree-id1300 . 1) (undo-tree-id1301 . -6) 9091) nil (25366 4948 634085 392000) 0 nil])
([nil nil ((#("BUFFER_" 0 7 (fontified t face font-lock-type-face)) . -9078) (undo-tree-id1296 . -7) (undo-tree-id1297 . -7) 9085) nil (25366 4948 634080 13000) 0 nil])
([nil nil ((#("Complex32;" 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t)) . -9068) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) 9078) nil (25366 4948 634076 657000) 0 nil])
([nil nil ((#("Mutex<[" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t face (rainbow-delimiters-depth-5-face)) 6 7 (fontified t face (rainbow-delimiters-depth-6-face))) . -9061) (undo-tree-id1292 . -7) (undo-tree-id1293 . -7) 9068) nil (25366 4948 634073 96000) 0 nil])
([nil nil ((#("Arc<" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t face (rainbow-delimiters-depth-4-face))) . -9057) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) 9061) nil (25366 4948 634069 424000) 0 nil])
([nil nil ((#("buffer: " 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t)) . -9049) (undo-tree-id1287 . -8) (undo-tree-id1288 . -8) (undo-tree-id1289 . -8) 9057) nil (25366 4948 634065 140000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -9047) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (#(" " 0 1 (fontified t)) . -9048) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) 9049) nil (25366 4948 634055 973000) 0 nil])
([nil nil ((#("clone()" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-6-face) fontified t) 6 7 (face (rainbow-delimiters-depth-6-face) fontified t)) . -10585) (undo-tree-id1340 . -7) (undo-tree-id1341 . -7) (undo-tree-id1342 . -7) (undo-tree-id1343 . 1) (undo-tree-id1344 . -7) (undo-tree-id1345 . 2) (undo-tree-id1346 . -6) 10592 (t 25366 4948 699218 794000)) nil (25366 4952 565674 337000) 0 nil])
([nil nil ((#("buffer." 0 7 (fontified t)) . -10578) (undo-tree-id1336 . -7) (undo-tree-id1337 . -7) (undo-tree-id1338 . -3) (undo-tree-id1339 . -7) 10585) nil (25366 4952 564913 490000) 0 nil])
([nil nil ((#("2. ." 0 3 (fontified t) 3 4 (fontified t)) . -10574) (undo-tree-id1328 . -4) (undo-tree-id1329 . -4) (undo-tree-id1330 . 2) (undo-tree-id1331 . -2) (undo-tree-id1332 . -3) (undo-tree-id1333 . -1) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) 10578) nil (25366 4952 564906 630000) 0 nil])
([nil nil ((#("state_" 0 6 (fontified t)) . -10568) (undo-tree-id1323 . -2) (undo-tree-id1324 . -6) (undo-tree-id1325 . -6) (undo-tree-id1326 . -2) (undo-tree-id1327 . -6) 10574) nil (25366 4952 564895 228000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10566) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (#(" " 0 1 (fontified t)) . -10567) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) 10568) nil (25366 4952 564882 97000) 0 nil])
([nil nil ((#("clone()" 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-6-face)) 6 7 (fontified t face (rainbow-delimiters-depth-6-face))) . -10807) (undo-tree-id1370 . -7) (undo-tree-id1371 . -7) (undo-tree-id1372 . -7) (undo-tree-id1373 . 1) (undo-tree-id1374 . -7) (undo-tree-id1375 . 2) (undo-tree-id1376 . -6) (undo-tree-id1377 . -7) 10814 (t 25366 4952 599218 751000)) nil (25366 4956 163961 919000) 0 nil])
([nil nil ((#("buffer." 0 7 (fontified t)) . -10800) (undo-tree-id1365 . -7) (undo-tree-id1366 . -7) (undo-tree-id1367 . -6) (undo-tree-id1368 . -7) (undo-tree-id1369 . -7) 10807) nil (25366 4956 163953 202000) 0 nil])
([nil nil ((#("state. ." 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -10792) (undo-tree-id1355 . -8) (undo-tree-id1356 . -8) (undo-tree-id1357 . -6) (undo-tree-id1358 . -7) (undo-tree-id1359 . -7) (undo-tree-id1360 . -8) (undo-tree-id1361 . -8) (undo-tree-id1362 . -8) (undo-tree-id1363 . -8) (undo-tree-id1364 . -8) 10800) nil (25366 4956 163946 356000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10790) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (#(" " 0 1 (fontified t)) . -10791) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) 10792) nil (25366 4956 163931 725000) 0 nil])
([nil nil ((#("clone()" 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-6-face)) 6 7 (fontified t face (rainbow-delimiters-depth-6-face))) . -11029) (undo-tree-id1405 . -6) (undo-tree-id1406 . -7) (undo-tree-id1407 . -7) (undo-tree-id1408 . -7) (undo-tree-id1409 . 1) (undo-tree-id1410 . -7) (undo-tree-id1411 . 2) (undo-tree-id1412 . -6) 11036 (t 25366 4956 225885 378000)) nil (25366 4959 166281 588000) 0 nil])
([nil nil ((#("buffer." 0 7 (fontified t)) . -11022) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7) (undo-tree-id1402 . -6) (undo-tree-id1403 . -7) (undo-tree-id1404 . -7) 11029) nil (25366 4959 166273 124000) 0 nil])
([nil nil ((#("state." 0 5 (fontified t) 5 6 (fontified t)) . -11016) (undo-tree-id1394 . -6) (undo-tree-id1395 . -6) (undo-tree-id1396 . -6) (undo-tree-id1397 . -6) (undo-tree-id1398 . -6) (undo-tree-id1399 . -6) 11022) nil (25366 4959 166266 789000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11014) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (#(" " 0 1 (fontified t)) . -11015) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) 11016) nil (25366 4959 166255 420000) 0 nil])
([nil nil ((9507 . 9512) (t 25366 4959 225885 344000)) nil (25366 4968 286820 101000) 0 nil])
([nil nil ((9512 . 9513)) nil (25366 4968 286815 324000) 0 nil])
([nil nil ((#("buffer: Arc::new(Mutex::new([Complex32{re:0.0,im:0.0};BUFFER_LEN]))," 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t) 8 11 (fontified t face font-lock-type-face) 11 13 (fontified t) 13 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 22 (fontified t face font-lock-type-face) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-5-face)) 28 29 (fontified t face (rainbow-delimiters-depth-6-face)) 29 38 (fontified t face font-lock-type-face) 38 39 (fontified t face (rainbow-delimiters-depth-7-face)) 39 41 (fontified t face font-lock-variable-name-face) 41 46 (fontified t) 46 48 (fontified t face font-lock-variable-name-face) 48 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-7-face)) 53 54 (fontified t) 54 64 (fontified t face font-lock-type-face) 64 65 (fontified t face (rainbow-delimiters-depth-6-face)) 65 66 (fontified t face (rainbow-delimiters-depth-5-face)) 66 67 (fontified t face (rainbow-delimiters-depth-4-face)) 67 68 (fontified t)) . 8461) (undo-tree-id1414 . -68) (undo-tree-id1415 . -68) (t 25366 4968 352551 910000)) nil (25366 5062 891430 643000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 8461) (undo-tree-id1413 . -1)) nil (25366 5062 891425 827000) 0 nil])
([nil nil ((#("	    " 0 2 (fontified t) 2 5 (fontified t)) . -8461)) nil (25366 5062 891415 141000) 0 nil])
([nil nil ((#("buffer: Arc<Mutex<[Complex32;BUFFER_LEN]>>," 0 6 (fontified t face font-lock-variable-name-face) 6 8 (fontified t) 8 11 (fontified t face font-lock-type-face) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 17 (fontified t face font-lock-type-face) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 19 (fontified t face (rainbow-delimiters-depth-4-face)) 19 28 (fontified t face font-lock-type-face) 28 29 (fontified t) 29 39 (fontified t face font-lock-type-face) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t face (rainbow-delimiters-depth-3-face)) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t)) . 1136) (undo-tree-id1418 . -43) (undo-tree-id1419 . -6) (undo-tree-id1420 . -43) (t 25366 5062 952550 862000)) nil (25366 5073 841613 307000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1136) (undo-tree-id1417 . -1)) nil (25366 5073 841606 624000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1136) (undo-tree-id1416 . -4)) nil (25366 5073 841598 902000) 0 nil])
([nil nil ((8677 . 8678) (#("	" 0 1 (fontified nil)) . 8676) (undo-tree-id1432 . -1) (8675 . 8678) (t 25366 5073 905884 75000)) nil (25366 5123 166377 4000) 0 nil])
([nil nil ((8678 . 8689)) nil (25366 5123 166373 722000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -8685) (undo-tree-id1428 . -1) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -8686) (undo-tree-id1429 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -8687) (undo-tree-id1430 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -8688) (undo-tree-id1431 . -1) 8689) nil (25366 5123 166371 361000) 0 nil])
([nil nil ((8685 . 8691)) nil (25366 5123 166364 797000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8688) (undo-tree-id1425 . -1) (#("=" 0 1 (fontified t)) . -8689) (undo-tree-id1426 . -1) (#(" " 0 1 (fontified t)) . -8690) (undo-tree-id1427 . -1) 8691) nil (25366 5123 166362 571000) 0 nil])
([nil nil ((8688 . 8689)) nil (25366 5123 166356 970000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8688) (undo-tree-id1424 . -1) 8689) nil (25366 5123 166355 409000) 0 nil])
([nil nil ((8688 . 8691)) nil (25366 5123 166352 604000) 0 nil])
([nil nil ((#("buffer = " 0 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t)) . -8682) (undo-tree-id1423 . -9) 8691) nil (25366 5123 166351 101000) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -8678) (undo-tree-id1422 . -4) 8682) nil (25366 5123 166347 823000) 0 nil])
([nil nil ((nil fontified nil 8746 . 8747) (nil fontified nil 8745 . 8746) (nil fontified nil 8744 . 8745) (nil fontified nil 8743 . 8744) (nil fontified nil 8742 . 8743) (nil fontified nil 8732 . 8742) (nil fontified nil 8731 . 8732) (nil fontified nil 8730 . 8731) (nil fontified nil 8726 . 8730) (nil fontified nil 8724 . 8726) (nil fontified nil 8719 . 8724) (nil fontified nil 8717 . 8719) (nil fontified nil 8716 . 8717) (nil fontified nil 8707 . 8716) (nil fontified nil 8706 . 8707) (nil fontified nil 8705 . 8706) (nil fontified nil 8700 . 8705) (nil fontified nil 8695 . 8700) (nil fontified nil 8694 . 8695) (nil fontified nil 8691 . 8694) (nil fontified nil 8689 . 8691) (nil fontified nil 8686 . 8689) (nil fontified nil 8684 . 8686) (nil fontified nil 8678 . 8684) (8678 . 8747)) nil (25366 5123 166342 292000) 0 nil])
([nil nil ((8678 . 8682)) nil (25366 5123 166334 439000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -8688) (undo-tree-id1421 . -1) 8689) nil (25366 5123 166331 493000) 0 nil])
([nil nil ((8688 . 8691)) nil (25366 5123 166318 674000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8751) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) 8752 (t 25366 5123 199216 862000)) nil (25366 5125 847147 526000) 0 nil])
([nil nil ((8751 . 8752)) nil (25366 5125 847138 350000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -8751) (undo-tree-id1433 . -1) 8752) nil (25366 5125 847133 382000) 0 nil])
([nil nil ((8751 . 8752)) nil (25366 5125 847114 729000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8691) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) 8692 (t 25366 5125 922550 165000)) nil (25366 5128 34114 365000) 0 nil])
([nil nil ((8752 . 8753) (t 25366 5128 65883 474000)) nil (25366 5143 48400 483000) 0 nil])
([nil nil ((8753 . 8756)) nil (25366 5143 48399 146000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -8753) (undo-tree-id1443 . -1) (#("e" 0 1 (fontified t)) . -8754) (undo-tree-id1444 . -1) (#("t" 0 1 (fontified t)) . -8755) (undo-tree-id1445 . -1) 8756) nil (25366 5143 48397 336000) 0 nil])
([nil nil ((8753 . 8772)) nil (25366 5143 48392 537000) 0 nil])
([nil nil ((8768 . 8774) (#("buff" 0 4 (fontified nil)) . 8768) (8768 . 8772) (#("buffer" 0 6 (fontified nil)) . -8768) (8768 . 8774) (#("buff" 0 4 (fontified t)) . -8768) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) 8772) nil (25366 5143 48389 642000) 0 nil])
([nil nil ((8774 . 8782)) nil (25366 5143 48379 707000) 0 nil])
([nil nil ((8782 . 8783)) nil (25366 5143 48374 289000) 0 nil])
([nil nil ((11166 . 11172) (t 25366 5143 69216 642000)) nil (25366 5177 864841 460000) 0 nil])
([nil nil ((11172 . 11178)) nil (25366 5177 864840 282000) 0 nil])
([nil nil ((1420 . 1425)) nil (25366 5177 864839 359000) 0 nil])
([nil nil ((1425 . 1432)) nil (25366 5177 864838 388000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1429) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("e" 0 1 (fontified t)) . -1430) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (#("r" 0 1 (fontified t)) . -1431) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) 1432) nil (25366 5177 864836 394000) 0 nil])
([nil nil ((1429 . 1432)) nil (25366 5177 864827 388000) 0 nil])
([nil nil ((#("buffer:" 0 6 (fontified t face font-lock-variable-name-face) 6 7 (fontified t)) . -1425) (undo-tree-id1449 . -7) (undo-tree-id1450 . -7) 1432) nil (25366 5177 864825 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1468 . 1469) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (nil fontified nil 1454 . 1464) (nil fontified nil 1453 . 1454) (nil fontified nil 1444 . 1453) (nil fontified nil 1443 . 1444) (nil fontified nil 1442 . 1443) (nil fontified nil 1437 . 1442) (nil fontified nil 1436 . 1437) (nil fontified nil 1433 . 1436) (nil fontified nil 1431 . 1433) (nil fontified nil 1425 . 1431) (1425 . 1469)) nil (25366 5177 864820 683000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -1468) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 1469) nil (25366 5177 864812 413000) 0 nil])
([nil nil ((11226 . 11232) (t 25366 5177 929216 256000)) nil (25366 5202 453620 76000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -11228) (undo-tree-id1461 . -1) (#(" " 0 1 (fontified t)) . -11229) (undo-tree-id1462 . -1) (#("v" 0 1 (fontified t)) . -11230) (undo-tree-id1463 . -1) (#("=" 0 1 (fontified t)) . -11231) (undo-tree-id1464 . -1) 11232) nil (25366 5202 453617 869000) 0 nil])
([nil nil ((11228 . 11232)) nil (25366 5202 453611 626000) 0 nil])
([nil nil ((11228 . 11236) (#("buff" 0 4 (fontified nil)) . 11228) (11228 . 11232) (#("buffer_2" 0 8 (fontified nil)) . -11228) (11228 . 11236) (#("buff" 0 4 (fontified t)) . -11228) (undo-tree-id1460 . -4) 11232) nil (25366 5202 453608 192000) 0 nil])
([nil nil ((11236 . 11237)) nil (25366 5202 453595 701000) 0 nil])
([nil nil ((9081 . 9086) (t 25366 5202 489215 983000)) nil (25366 5226 989345 561000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -9083) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (#("b" 0 1 (fontified t)) . -9084) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (#("b" 0 1 (fontified t)) . -9085) (undo-tree-id1475 . -1) 9086) nil (25366 5226 989343 454000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9126 . 9127) (nil fontified nil 9126 . 9127) (nil fontified nil 9125 . 9126) (nil fontified nil 9124 . 9125) (nil fontified nil 9123 . 9124) (nil fontified nil 9122 . 9123) (nil fontified nil 9112 . 9122) (nil fontified nil 9111 . 9112) (nil fontified nil 9102 . 9111) (nil fontified nil 9101 . 9102) (nil fontified nil 9100 . 9101) (nil fontified nil 9095 . 9100) (nil fontified nil 9094 . 9095) (nil fontified nil 9091 . 9094) (nil fontified nil 9089 . 9091) (nil fontified nil 9083 . 9089) (9083 . 9127)) nil (25366 5226 989336 404000) 0 nil])
([nil nil ((9127 . 9128)) nil (25366 5226 989331 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -9126) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (#("	" 0 1 (fontified t)) . -9127) (undo-tree-id1470 . -1) 9128) nil (25366 5226 989328 944000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -9125) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) 9126) nil (25366 5226 989319 562000) 0 nil])
([nil nil ((#("state." 0 6 (fontified t)) . -9585) (undo-tree-id1476 . -2) (undo-tree-id1477 . -6) (undo-tree-id1478 . -6) (undo-tree-id1479 . -6) (undo-tree-id1480 . -6) 9591 (t 25366 5227 49215 712000)) nil (25366 5230 785050 882000) 0 nil])
([nil nil ((10644 . 10649) (t 25366 5230 815882 336000)) nil (25366 5252 843023 848000) 0 nil])
([nil nil ((10649 . 10651)) nil (25366 5252 843022 218000) 0 nil])
([nil nil ((10645 . 10651) (#("buffer" 0 6 (fontified nil)) . 10645) (10645 . 10651) (#("buffer" 0 6 (fontified t)) . -10645) (undo-tree-id1487 . -6) (undo-tree-id1488 . -6) (undo-tree-id1489 . -6) 10651) nil (25366 5252 843020 51000) 0 nil])
([nil nil ((10875 . 10883)) nil (25366 5252 843013 528000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -10880) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#("e" 0 1 (fontified t)) . -10881) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (#("r" 0 1 (fontified t)) . -10882) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) 10883) nil (25366 5252 843010 282000) 0 nil])
([nil nil ((10880 . 10882)) nil (25366 5252 842999 487000) 0 nil])
([nil nil ((11106 . 11113)) nil (25366 5252 842998 587000) 0 nil])
([nil nil ((10645 . 10646)) nil (25366 5252 842997 489000) 0 nil])
([nil nil ((10877 . 10878)) nil (25366 5252 842995 681000) 0 nil])
([nil nil ((11109 . 11110)) nil (25366 5252 842990 564000) 0 nil])
([nil nil ((#("use core::num::flt2dec::strategy;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 8 (fontified t face font-lock-constant-face) 8 10 (fontified t) 10 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 22 (fontified t face font-lock-constant-face) 22 33 (fontified t)) . 186) (undo-tree-id1491 . -4) (undo-tree-id1492 . -32) (undo-tree-id1493 . -33) (undo-tree-id1494 . -4) (undo-tree-id1495 . -32) (undo-tree-id1496 . -33) (undo-tree-id1497 . -33) (t 25366 5252 905882 91000)) nil (25366 5287 198867 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 186) (undo-tree-id1490 . -1)) nil (25366 5287 198849 532000) 0 nil])
([nil nil ((10612 . 10613) (t 25366 5287 222548 383000)) nil (25366 5369 909436 848000) 0 nil])
([nil nil ((10845 . 10846)) nil (25366 5369 909434 145000) 0 nil])
([nil nil ((11078 . 11079)) nil (25366 5369 909427 891000) 0 nil])
([nil nil ((9057 . 9058) (t 25366 5369 972547 481000)) nil (25366 5379 871517 613000) 0 nil])
([nil nil ((9714 . 9722) (t 25366 5379 935880 703000)) nil (25366 5436 728661 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9772 . 9773) (nil fontified nil 9772 . 9773) (nil fontified nil 9771 . 9772) (nil fontified nil 9764 . 9771) (nil fontified nil 9762 . 9764) (nil fontified nil 9758 . 9762) (nil fontified nil 9754 . 9758) (nil fontified nil 9751 . 9754) (nil fontified nil 9744 . 9751) (nil fontified nil 9743 . 9744) (nil fontified nil 9742 . 9743) (nil fontified nil 9731 . 9742) (nil fontified nil 9722 . 9731) (9722 . 9773)) nil (25366 5436 728655 122000) 0 nil])
([nil nil ((9782 . 9784) (t 25366 5436 789213 418000)) nil (25366 5439 229453 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9782) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -9783) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) 9784 (t 25366 5439 249213 391000)) nil (25366 5451 882653 388000) 0 nil])
([nil nil ((9722 . 9724)) nil (25366 5451 882638 319000) 0 nil])
([nil nil ((12031 . 12037) (t 25366 5451 915879 922000)) nil (25366 5570 987302 637000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12036) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) 12037) nil (25366 5570 987301 194000) 0 nil])
([nil nil ((12036 . 12039)) nil (25366 5570 987298 332000) 0 nil])
([nil nil ((12036 . 12042) (#("thr" 0 3 (fontified t)) . -12036) (undo-tree-id1522 . -3) (undo-tree-id1523 . -1) (undo-tree-id1524 . -2) (undo-tree-id1525 . -3) 12039) nil (25366 5570 987296 876000) 0 nil])
([nil nil ((12042 . 12046)) nil (25366 5570 987291 451000) 0 nil])
([nil nil ((12044 . 12049) (#("sp" 0 2 (fontified nil)) . 12044) (12044 . 12046) (#("spawn" 0 5 (fontified nil)) . -12044) (12044 . 12049) (#("sp" 0 2 (fontified t)) . -12044) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) 12046) nil (25366 5570 987289 645000) 0 nil])
([nil nil ((12050 . 12052) (12049 . 12051)) nil (25366 5570 987285 475000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -12051) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) 12052) nil (25366 5570 987283 929000) 0 nil])
([nil nil ((12051 . 12054)) nil (25366 5570 987280 121000) 0 nil])
([nil nil ((12056 . 12057) (#("}" 0 1 (fontified nil face (rainbow-delimiters-mismatched-face))) . -12056) (12055 . 12057) (#("}" 0 1 (fontified nil)) . -12055) (12054 . 12056)) nil (25366 5570 987278 717000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -12055) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . 1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -12056) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) 12057) nil (25366 5570 987275 789000) 0 nil])
([nil nil ((12055 . 12059)) nil (25366 5570 987264 390000) 0 nil])
([nil nil ((12060 . 12061)) nil (25366 5570 987263 447000) 0 nil])
([nil nil ((12059 . 12060) (12060 . 12064) (#("	" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 12059) (12059 . 12060) (12058 . 12060)) nil (25366 5570 987262 92000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12144 . 12145) (nil fontified nil 12060 . 12145) (12060 . 12145)) nil (25366 5570 987259 992000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12060) 12096) nil (25366 5570 987258 147000) 0 nil])
([nil nil ((12097 . 12098) (#("    " 0 4 (fontified t)) . 12097) 12137) nil (25366 5570 987256 126000) 0 nil])
([nil nil ((#("100" 0 3 (fontified t)) . -12133) (undo-tree-id1504 . -1) (undo-tree-id1505 . -3) 12136) nil (25366 5570 987254 28000) 0 nil])
([nil nil ((12133 . 12134)) nil (25366 5570 987249 672000) 0 nil])
([nil nil ((12133 . 12143) (#("B" 0 1 (fontified nil)) . 12133) (12133 . 12134) (#("BUFFER_LEN" 0 10 (fontified nil)) . -12133) (12133 . 12143) (#("B" 0 1 (fontified t face font-lock-type-face)) . -12133) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) 12134) nil (25366 5570 987243 807000) 0 nil])
([nil nil ((12145 . 12147) (t 25366 5571 19211 951000)) nil (25366 5665 124236 699000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12145) (undo-tree-id1541 . -1) (#("\\" 0 1 (fontified t)) . -12146) (undo-tree-id1542 . -1) 12147) nil (25366 5665 124234 985000) 0 nil])
([nil nil ((12145 . 12147)) nil (25366 5665 124231 825000) 0 nil])
([nil nil ((12147 . 12154)) nil (25366 5665 124230 892000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12151) (undo-tree-id1538 . -1) (#("o" 0 1 (fontified t)) . -12152) (undo-tree-id1539 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -12153) (undo-tree-id1540 . -1) 12154) nil (25366 5665 124229 284000) 0 nil])
([nil nil ((12151 . 12153)) nil (25366 5665 124224 778000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -12152) (undo-tree-id1537 . -1) 12153) nil (25366 5665 124223 733000) 0 nil])
([nil nil ((12152 . 12154)) nil (25366 5665 124221 259000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -12153) (undo-tree-id1536 . -1) 12154) nil (25366 5665 124220 15000) 0 nil])
([nil nil ((12153 . 12156)) nil (25366 5665 124217 884000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12151) (undo-tree-id1531 . -1) (#("o" 0 1 (fontified t)) . -12152) (undo-tree-id1532 . -1) (#("w" 0 1 (fontified t)) . -12153) (undo-tree-id1533 . -1) (#("a" 0 1 (fontified t)) . -12154) (undo-tree-id1534 . -1) (#("r" 0 1 (fontified t)) . -12155) (undo-tree-id1535 . -1) 12156) nil (25366 5665 124215 585000) 0 nil])
([nil nil ((12151 . 12153)) nil (25366 5665 124208 718000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12151) (undo-tree-id1529 . -1) (#("p" 0 1 (fontified t)) . -12152) (undo-tree-id1530 . -1) 12153) nil (25366 5665 124206 862000) 0 nil])
([nil nil ((12151 . 12154)) nil (25366 5665 124203 133000) 0 nil])
([nil nil ((12151 . 12158) (#("pro" 0 3 (fontified nil)) . 12151) (12151 . 12154) (#("process (as Fft)" 0 16 (fontified nil)) . -12151) (12151 . 12167) (#("pro" 0 3 (fontified t)) . -12151) (undo-tree-id1528 . -3) 12154) nil (25366 5665 124201 129000) 0 nil])
([nil nil ((12158 . 12160)) nil (25366 5665 124192 668000) 0 nil])
([nil nil ((12145 . 12147)) nil (25366 5665 124191 483000) 0 nil])
([nil nil ((12147 . 12154)) nil (25366 5665 124190 369000) 0 nil])
([nil nil ((12154 . 12160) (#("buffer" 0 6 (fontified nil)) . -12154) (12154 . 12160)) nil (25366 5665 124188 311000) 0 nil])
([nil nil ((12147 . 12151)) nil (25366 5665 124185 814000) 0 nil])
([nil nil ((12159 . 12160) (12172 . 12173) (12151 . 12151) (12151 . 12159)) nil (25366 5665 124180 142000) 0 nil])
([nil nil ((12174 . 12176) (t 25366 5665 189210 943000)) nil (25366 5697 222540 143000) 0 nil])
([nil nil ((12176 . 12178)) nil (25366 5697 222539 23000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12176) (undo-tree-id1560 . -1) (#("l" 0 1 (fontified t)) . -12177) (undo-tree-id1561 . -1) 12178) nil (25366 5697 222537 624000) 0 nil])
([nil nil ((12176 . 12183)) nil (25366 5697 222534 587000) 0 nil])
([nil nil ((12183 . 12188) (12184 . 12185) (#("	    " 0 5 (fontified nil face (rainbow-delimiters-depth-4-face))) . 12183) (12183 . 12188) (12182 . 12184)) nil (25366 5697 222533 183000) 0 nil])
([nil nil ((#("fft.process()" 0 4 (fontified t) 4 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-4-face)) 12 13 (fontified t face (rainbow-delimiters-depth-4-face))) . 12193) (undo-tree-id1558 . -12) (undo-tree-id1559 . -13)) nil (25366 5697 222531 175000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12196 . 12197) (nil fontified nil 12196 . 12197) (nil fontified nil 12195 . 12196) (nil fontified nil 12188 . 12195) (nil fontified nil 12184 . 12188) (12184 . 12197)) nil (25366 5697 222528 213000) 0 nil])
([nil nil ((12184 . 12188) 12197) nil (25366 5697 222526 120000) 0 nil])
([nil nil ((12182 . 12188)) nil (25366 5697 222524 948000) 0 nil])
([nil nil ((12188 . 12189)) nil (25366 5697 222523 951000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -12188) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) 12189) nil (25366 5697 222522 742000) 0 nil])
([nil nil ((12188 . 12197)) nil (25366 5697 222519 766000) 0 nil])
([nil nil ((12195 . 12199) (#("lo" 0 2 (fontified nil)) . 12195) (12195 . 12197) (#("lock" 0 4 (fontified nil)) . -12195) (12195 . 12199) (#("lo" 0 2 (fontified t)) . -12195) (undo-tree-id1552 . -2) (undo-tree-id1553 . -1) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) 12197) nil (25366 5697 222517 714000) 0 nil])
([nil nil ((12199 . 12201)) nil (25366 5697 222511 730000) 0 nil])
([nil nil ((12201 . 12202)) nil (25366 5697 222510 759000) 0 nil])
([nil nil ((12201 . 12202)) nil (25366 5697 222509 569000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12201) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) 12202) nil (25366 5697 222508 11000) 0 nil])
([nil nil ((12201 . 12203)) nil (25366 5697 222502 538000) 0 nil])
([nil nil ((12202 . 12208) (#("u" 0 1 (fontified nil)) . 12202) (12202 . 12203) (#("unwrap" 0 6 (fontified t)) . -12202) (undo-tree-id1543 . -6) (undo-tree-id1544 . -6) (12202 . 12208) (#("u" 0 1 (fontified t)) . -12202) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) 12203) nil (25366 5697 222499 76000) 0 nil])
([nil nil ((12208 . 12210)) nil (25366 5697 222483 291000) 0 nil])
([nil nil ((12188 . 12200) (t 25366 5697 269210 587000)) nil (25366 5724 818444 943000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -12198) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -12199) (undo-tree-id1571 . -1) 12200) nil (25366 5724 818442 940000) 0 nil])
([nil nil ((12198 . 12199)) nil (25366 5724 818438 599000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-variable-name-face)) . -12196) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -12197) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -12198) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) 12199) nil (25366 5724 818436 136000) 0 nil])
([nil nil ((12196 . 12200)) nil (25366 5724 818427 707000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -12199) (undo-tree-id1562 . -1) 12200) nil (25366 5724 818424 948000) 0 nil])
([nil nil ((12199 . 12202)) nil (25366 5724 818412 713000) 0 nil])
([nil nil ((12243 . 12252) (t 25366 5724 852543 616000)) nil (25366 5744 822410 871000) 0 nil])
([nil nil ((12253 . 12254)) nil (25366 5744 822403 896000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -12244) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 12245 (t 25366 5744 852543 398000)) nil (25366 5753 284113 115000) 0 nil])
([nil nil ((12248 . 12249)) nil (25366 5753 284096 478000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12254) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#(" " 0 1 (fontified t)) . -12255) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) 12256 (t 25366 5753 345876 637000)) nil (25366 5765 858669 637000) 0 nil])
([nil nil ((12255 . 12260) (#("  " 0 2 (fontified nil)) . 12255) (12254 . 12255) (t 25366 5765 889209 832000)) nil (25366 5785 323439 932000) 0 nil])
([nil nil ((12260 . 12264)) nil (25366 5785 323438 341000) 0 nil])
([nil nil ((12260 . 12268) (#("prin" 0 4 (fontified nil)) . 12260) (12260 . 12264) (#("println!" 0 8 (fontified nil)) . -12260) (12260 . 12268) (#("prin" 0 4 (fontified t)) . -12260) (undo-tree-id1584 . -2) (undo-tree-id1585 . -4) 12264) nil (25366 5785 323436 476000) 0 nil])
([nil nil ((12269 . 12271) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -12269) (12269 . 12270) (12268 . 12270)) nil (25366 5785 323432 36000) 0 nil])
([nil nil ((12270 . 12274)) nil (25366 5785 323430 323000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-string-face)) . -12272) (undo-tree-id1582 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -12273) (undo-tree-id1583 . -1) 12274) nil (25366 5785 323428 60000) 0 nil])
([nil nil ((12272 . 12286)) nil (25366 5785 323419 365000) 0 nil])
([nil nil ((12288 . 12289)) nil (25366 5785 323414 284000) 0 nil])
([nil nil ((12289 . 12295) (t 25366 5785 355876 282000)) nil (25366 5813 587734 733000) 0 nil])
([nil nil ((12299 . 12300) (#(")" 0 1 (fontified nil)) . -12299) (12295 . 12300)) nil (25366 5813 587732 485000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -12299) (undo-tree-id1586 . -1) (undo-tree-id1587 . 1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) 12300) nil (25366 5813 587728 978000) 0 nil])
([nil nil ((12300 . 12303) (12299 . 12301)) nil (25366 5813 587713 129000) 0 nil])
([nil nil ((12304 . 12305)) nil (25366 5813 587705 759000) 0 nil])
([nil nil ((12260 . 12263) (t 25366 5813 619209 305000)) nil (25366 5927 448562 956000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-doc-face)) . -12262) (undo-tree-id1591 . -1) 12263 (t 25366 5927 482541 374000)) nil (25366 5931 84335 455000) 0 nil])
([nil nil ((9784 . 9786) (t 25366 5933 752541 305000)) nil (25366 5948 356942 684000) 0 nil] [nil nil ((12262 . 12263)) ((#("x" 0 1 (fontified t face font-lock-comment-face)) . 12262) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1)) (25366 5931 84121 305000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9722) (undo-tree-id1595 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -9723) (undo-tree-id1596 . -1) 9724) nil (25366 5948 356936 962000) 0 nil])
nil
([nil nil ((12307 . 12313) (t 25366 5948 389207 810000)) nil (25366 6015 565254 675000) 0 nil])
([nil nil ((12313 . 12316)) nil (25366 6015 565252 541000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . -12315) (undo-tree-id1627 . -1) 12316) nil (25366 6015 565250 424000) 0 nil])
([nil nil ((12315 . 12320)) nil (25366 6015 565246 616000) 0 nil])
([nil nil ((12318 . 12324) (#("th" 0 2 (fontified nil)) . 12318) (12318 . 12320) (#("thread" 0 6 (fontified nil)) . -12318) (12318 . 12324) (#("th" 0 2 (fontified t)) . -12318) (undo-tree-id1626 . -2) 12320) nil (25366 6015 565243 628000) 0 nil])
([nil nil ((12324 . 12328)) nil (25366 6015 565237 789000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -12327) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) 12328) nil (25366 6015 565235 542000) 0 nil])
([nil nil ((12327 . 12328)) nil (25366 6015 565230 180000) 0 nil])
([nil nil ((12326 . 12331) (#("sl" 0 2 (fontified nil)) . 12326) (12326 . 12328) (#("sleep" 0 5 (fontified nil)) . -12326) (12326 . 12331) (#("sl" 0 2 (fontified t)) . -12326) (undo-tree-id1619 . -2) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -2) 12328) nil (25366 6015 565226 781000) 0 nil])
([nil nil ((12332 . 12333) (12331 . 12333)) nil (25366 6015 565214 296000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face font-lock-type-face)) . -12332) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) 12333) nil (25366 6015 565211 532000) 0 nil])
([nil nil ((12332 . 12333)) nil (25366 6015 565206 68000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12332) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) 12333) nil (25366 6015 565203 847000) 0 nil])
([nil nil ((12332 . 12334)) nil (25366 6015 565198 473000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face font-lock-type-face)) . -12332) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -12333) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) 12334) nil (25366 6015 565195 179000) 0 nil])
([nil nil ((12332 . 12345)) nil (25366 6015 565180 935000) 0 nil])
([nil nil ((12343 . 12351) (#("Du" 0 2 (fontified nil)) . 12343) (12343 . 12345) (#("Duration" 0 8 (fontified nil)) . -12343) (12343 . 12351) (#("Du" 0 2 (fontified t face font-lock-type-face)) . -12343) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) 12345) nil (25366 6015 565177 745000) 0 nil])
([nil nil ((12351 . 12357)) nil (25366 6015 565170 11000) 0 nil])
([nil nil ((12353 . 12362) (#("from" 0 4 (fontified nil)) . 12353) (12353 . 12357) (#("from_secs" 0 9 (fontified t)) . -12353) (undo-tree-id1597 . -9) (undo-tree-id1598 . -9) (12353 . 12362) (#("from" 0 4 (fontified t)) . -12353) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -2) (undo-tree-id1604 . -3) (undo-tree-id1605 . -4) 12357) nil (25366 6015 565164 921000) 0 nil])
([nil nil ((12363 . 12364) (12362 . 12364)) nil (25366 6070 439077 748000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -12260) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -12261) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) 12262) nil (25366 6073 46107 119000) 0 nil] [nil nil ((12366 . 12367)) ((#(";" 0 1 (fontified t)) . 12366) (t 25366 6015 629207 66000)) (25366 6070 431108 891000) 0 nil])
([nil nil ((12260 . 12262) (t 25366 6073 79206 440000)) nil (25366 6087 878234 262000) 0 nil])
([nil nil ((#("buf);
	    //" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-5-face)) 4 6 (fontified t) 6 11 (fontified t) 11 13 (fontified t face font-lock-comment-delimiter-face)) . -12249) (undo-tree-id1631 . -13) (undo-tree-id1632 . -13) (undo-tree-id1633 . -13) (undo-tree-id1634 . -6) 12262 (t 25366 6015 629207 66000)) ((12249 . 12262)) (25366 6069 975540 816000) 0 nil])
([nil nil ((#("secs" 0 4 (fontified t)) . -12358) (undo-tree-id1648 . -4) (undo-tree-id1649 . -4) 12362 (t 25366 6087 942539 609000)) nil (25366 6130 258694 14000) 0 nil])
([nil nil ((#("mut *" 0 3 (fontified t face font-lock-keyword-face) 3 5 (fontified t)) . -12244) (undo-tree-id1628 . -5) (undo-tree-id1629 . -5) (undo-tree-id1630 . -5) 12249) ((12244 . 12249)) (25366 6069 975186 161000) 0 nil])
([nil nil ((#("from_" 0 5 (fontified t)) . -12353) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) 12358) nil (25366 6130 258690 121000) 0 nil])
nil
([nil nil ((12353 . 12355)) nil (25366 6130 258687 2000) 0 nil])
([nil nil ((12353 . 12364) (#("fr" 0 2 (fontified nil)) . 12353) (12353 . 12355) (#("from_millis" 0 11 (fontified nil)) . -12353) (12353 . 12364) (#("fr" 0 2 (fontified t)) . -12353) (undo-tree-id1644 . -2) (undo-tree-id1645 . -2) 12355) nil (25366 6130 258684 890000) 0 nil])
([nil nil ((12366 . 12367)) nil (25366 6130 258679 621000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -12366) (undo-tree-id1643 . -1) 12367) nil (25366 6130 258676 724000) 0 nil])
([nil nil ((12366 . 12367)) nil (25366 6130 258665 704000) 0 nil])
([nil nil ((12369 . 12370) (t 25366 6130 322539 139000)) nil (25366 6134 152123 15000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -12369) (undo-tree-id1651 . -1) 12370) nil (25366 6134 152121 12000) 0 nil])
([nil nil ((12369 . 12371)) nil (25366 6134 152117 87000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -12370) (undo-tree-id1650 . -1) 12371) nil (25366 6134 152112 441000) 0 nil])
([nil nil ((9255 . 9262) (t 25366 6134 185872 431000)) nil (25366 6227 323413 142000) 0 nil])
([nil nil ((9262 . 9265)) nil (25366 6227 323411 761000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -9262) (undo-tree-id1683 . -1) (#("o" 0 1 (fontified t)) . -9263) (undo-tree-id1684 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -9264) (undo-tree-id1685 . -1) 9265) nil (25366 6227 323409 533000) 0 nil])
([nil nil ((9262 . 9265)) nil (25366 6227 323400 818000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9255) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (#("	" 0 1 (fontified t)) . -9256) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (#("	" 0 1 (fontified t)) . -9257) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (#(" " 0 1 (fontified t)) . -9258) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (#(" " 0 1 (fontified t)) . -9259) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (#(" " 0 1 (fontified t)) . -9260) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (#(" " 0 1 (fontified t)) . -9261) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (#("l" 0 1 (fontified t)) . -9262) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (#("e" 0 1 (fontified t)) . -9263) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -9264) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) 9265) nil (25366 6227 323389 100000) 0 nil])
([nil nil ((9255 . 9262) (t 25366 6227 359204 756000)) nil (25366 6296 873643 653000) 0 nil])
([nil nil ((9262 . 9263)) nil (25366 6296 873642 182000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -9262) (undo-tree-id1730 . -1) 9263) nil (25366 6296 873640 759000) 0 nil])
([nil nil ((9262 . 9266)) nil (25366 6296 873638 195000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9263) (undo-tree-id1727 . -1) (#("e" 0 1 (fontified t)) . -9264) (undo-tree-id1728 . -1) (#("t" 0 1 (fontified t)) . -9265) (undo-tree-id1729 . -1) 9266) nil (25366 6296 873635 955000) 0 nil])
([nil nil ((9263 . 9266)) nil (25366 6296 873630 681000) 0 nil])
([nil nil ((9146 . 9152)) nil (25366 6296 873629 323000) 0 nil])
([nil nil ((9152 . 9160)) nil (25366 6296 873628 73000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-variable-name-face)) . -9156) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -9157) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -9158) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -9159) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) 9160) nil (25366 6296 873624 923000) 0 nil])
([nil nil ((9156 . 9157)) nil (25366 6296 873607 111000) 0 nil])
([nil nil ((9157 . 9159)) nil (25366 6296 873605 734000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9152) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("e" 0 1 (fontified t)) . -9153) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -9154) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (#(" " 0 1 (fontified t)) . -9155) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -9156) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -9157) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -9158) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) 9159) nil (25366 6296 873600 206000) 0 nil])
([nil nil ((#("	    
" 0 5 (fontified t) 5 6 (fontified t)) . 9147) (undo-tree-id1686 . -5) (undo-tree-id1687 . -5) (undo-tree-id1688 . 1) (undo-tree-id1689 . -6)) nil (25366 6296 873568 745000) 0 nil])
([nil nil ((9266 . 9272) (t 25366 6296 905870 626000)) nil (25366 6318 688740 637000) 0 nil])
([nil nil ((9272 . 9275)) nil (25366 6318 688739 408000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9274) (undo-tree-id1743 . -1) 9275) nil (25366 6318 688737 949000) 0 nil])
([nil nil ((9274 . 9280)) nil (25366 6318 688735 669000) 0 nil])
([nil nil ((9280 . 9285)) nil (25366 6318 688734 639000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -9283) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (#("y" 0 1 (fontified t)) . -9284) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) 9285) nil (25366 6318 688732 687000) 0 nil])
([nil nil ((9283 . 9284)) nil (25366 6318 688725 889000) 0 nil])
([nil nil ((9281 . 9289) (#("try" 0 3 (fontified nil)) . 9281) (9281 . 9284) (#("try_lock" 0 8 (fontified nil)) . -9281) (9281 . 9289) (#("try" 0 3 (fontified t face font-lock-keyword-face)) . -9281) (undo-tree-id1731 . -3) (undo-tree-id1732 . -1) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -3) 9284) nil (25366 6318 688721 66000) 0 nil])
([nil nil ((9289 . 9291)) nil (25366 6318 687901 493000) 0 nil])
([nil nil ((9291 . 9292)) nil (25366 6318 687894 571000) 0 nil])
([nil nil ((#("lock()" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 6 (fontified t face (rainbow-delimiters-depth-7-face))) . -9600) (undo-tree-id1766 . -6) (undo-tree-id1767 . -6) (undo-tree-id1768 . 1) (undo-tree-id1769 . -6) (undo-tree-id1770 . 2) (undo-tree-id1771 . -5) 9606 (t 25366 6318 719203 710000)) nil (25366 6344 615099 730000) 0 nil])
([nil nil ((#("try_" 0 4 (fontified t)) . -9596) (undo-tree-id1762 . -4) (undo-tree-id1763 . -4) (undo-tree-id1764 . -4) (undo-tree-id1765 . -4) 9600) nil (25366 6344 615092 621000) 0 nil])
([nil nil ((#("buffer." 0 6 (fontified t) 6 7 (fontified t)) . -9589) (undo-tree-id1758 . -7) (undo-tree-id1759 . -7) (undo-tree-id1760 . -7) (undo-tree-id1761 . -7) 9596) nil (25366 6344 615087 487000) 0 nil])
([nil nil ((9589 . 9594)) nil (25366 6344 615082 979000) 0 nil])
([nil nil ((9266 . 9273)) nil (25366 6344 615081 983000) 0 nil])
([nil nil ((#("guard" 0 5 (fontified t)) . -9596) (undo-tree-id1756 . -5) (undo-tree-id1757 . -5) 9601) nil (25366 6344 615080 636000) 0 nil])
([nil nil ((9596 . 9601)) nil (25366 6344 615077 485000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -9596) (undo-tree-id1751 . -1) (#("u" 0 1 (fontified t)) . -9597) (undo-tree-id1752 . -1) (#("f" 0 1 (fontified t)) . -9598) (undo-tree-id1753 . -1) (#("f" 0 1 (fontified t)) . -9599) (undo-tree-id1754 . -1) (#("f" 0 1 (fontified t)) . -9600) (undo-tree-id1755 . -1) 9601) nil (25366 6344 615075 233000) 0 nil])
([nil nil ((9596 . 9600)) nil (25366 6344 615068 796000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -9597) (undo-tree-id1748 . -1) (#("f" 0 1 (fontified t)) . -9598) (undo-tree-id1749 . -1) (#("f" 0 1 (fontified t)) . -9599) (undo-tree-id1750 . -1) 9600) nil (25366 6344 615066 937000) 0 nil])
([nil nil ((9597 . 9599)) nil (25366 6344 615062 483000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -9598) (undo-tree-id1747 . -1) 9599) nil (25366 6344 615060 920000) 0 nil])
([nil nil ((9598 . 9602)) nil (25366 6344 615057 489000) 0 nil])
([nil nil ((9596 . 9608) (#("buffer" 0 6 (fontified nil)) . 9596) (9596 . 9602) (#("buffer_guard" 0 12 (fontified nil)) . -9596) (9596 . 9608) (#("buffer" 0 6 (fontified t)) . -9596) (undo-tree-id1744 . -6) (undo-tree-id1745 . -5) (undo-tree-id1746 . -6) 9602) nil (25366 6344 615051 833000) 0 nil])
([nil nil ((9266 . 9268) (t 25366 6344 649203 410000)) nil (25366 6370 182209 244000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -9266) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -9267) (undo-tree-id1774 . -1) 9268) nil (25366 6370 182206 283000) 0 nil])
([nil nil ((9266 . 9269)) nil (25366 6370 182195 680000) 0 nil])
([nil nil ((9269 . 9270)) nil (25366 6370 182189 993000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -9266) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -9267) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -9268) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (#(" " 0 1 (fontified t)) . -9269) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) 9270 (t 25366 6370 215869 778000)) nil (25366 6382 172214 766000) 0 nil])
([nil nil ((9266 . 9270) (t 25366 6382 205869 640000)) nil (25366 6402 809179 382000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -9266) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -9267) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -9268) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (#(" " 0 1 (fontified t)) . -9269) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) 9270) nil (25366 6402 809172 71000) 0 nil])
([nil nil ((9587 . 9591) (t 25366 6402 845869 394000)) nil (25366 6422 576027 499000) 0 nil])
([nil nil ((9656 . 9660)) nil (25366 6422 576025 634000) 0 nil])
([nil nil ((9656 . 9665) (#("buf_guard" 0 4 (fontified nil) 4 9 (fontified nil)) . 9656) (undo-tree-id1800 . 5) (9656 . 9660) (#("buf_guard" 0 9 (fontified nil)) . -9656) (9656 . 9665) (#("buf_" 0 4 (fontified t)) . -9656) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) 9660) nil (25366 6422 576020 199000) 0 nil])
([nil nil ((9638 . 9642) (t 25366 6422 605869 177000)) nil (25366 6429 517603 634000) 0 nil])
([nil nil ((#("guard" 0 5 (fontified t)) . -9591) (undo-tree-id1871 . -5) (undo-tree-id1872 . -5) 9596 (t 25366 6429 575869 94000)) nil (25366 6555 359577 987000) 0 nil])
([nil nil ((#("buf_" 0 4 (fontified t)) . -9587) (undo-tree-id1869 . -4) (undo-tree-id1870 . -4) 9591) nil (25366 6555 359574 275000) 0 nil])
([nil nil ((#("mut " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . -9583) (undo-tree-id1867 . -4) (undo-tree-id1868 . -4) 9587) nil (25366 6555 359570 829000) 0 nil])
([nil nil ((#("guard" 0 5 (fontified t)) . -9594) (undo-tree-id1863 . -5) (undo-tree-id1864 . -5) (undo-tree-id1865 . -2) (undo-tree-id1866 . -5) 9599) nil (25366 6555 359567 69000) 0 nil])
([nil nil ((#("buffer_" 0 7 (fontified t)) . -9587) (undo-tree-id1859 . -7) (undo-tree-id1860 . -7) (undo-tree-id1861 . -7) (undo-tree-id1862 . -7) 9594) nil (25366 6555 359561 456000) 0 nil])
([nil nil ((#("Ok() = " 0 2 (fontified t face font-lock-type-face) 2 3 (fontified t face (rainbow-delimiters-depth-7-face)) 3 4 (fontified t face (rainbow-delimiters-depth-7-face)) 4 7 (fontified t)) . -9580) (undo-tree-id1850 . -7) (undo-tree-id1851 . -7) (undo-tree-id1852 . -7) (undo-tree-id1853 . -7) (undo-tree-id1854 . -7) (undo-tree-id1855 . -2) (undo-tree-id1856 . -3) (undo-tree-id1857 . -7) (undo-tree-id1858 . -7) 9587) nil (25366 6555 359555 555000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -9576) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (#("e" 0 1 (fontified t)) . -9577) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#("t" 0 1 (fontified t face font-lock-keyword-face)) . -9578) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (#(" " 0 1 (fontified t)) . -9579) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) 9580) nil (25366 6555 359542 513000) 0 nil])
([nil nil ((9576 . 9582)) nil (25366 6555 359502 346000) 0 nil])
([nil nil ((9576 . 9588) (#("buffer" 0 6 (fontified nil)) . 9576) (9576 . 9582) (#("buffer_guard" 0 12 (fontified nil)) . -9576) (9576 . 9588) (#("buffer" 0 6 (fontified t)) . -9576) (undo-tree-id1805 . -6) (undo-tree-id1806 . -5) (undo-tree-id1807 . -6) 9582) nil (25366 6555 359500 91000) 0 nil])
([nil nil ((9588 . 9589)) nil (25366 6555 359493 895000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -9588) (undo-tree-id1804 . -1) 9589) nil (25366 6555 359492 101000) 0 nil])
([nil nil ((9588 . 9589)) nil (25366 6555 359483 485000) 0 nil])
([nil nil ((9589 . 9594) (#("is_ok" 0 5 (fontified nil)) . -9589) (9589 . 9594)) nil (25366 6555 359476 961000) 0 nil])
([nil nil ((9623 . 9624) (t 25366 6555 395867 642000)) nil (25366 6562 566996 382000) 0 nil])
([nil nil ((9624 . 9626)) nil (25366 6562 566994 626000) 0 nil])
([nil nil ((9648 . 9649)) nil (25366 6562 566992 451000) 0 nil])
([nil nil ((9649 . 9651)) nil (25366 6562 566986 565000) 0 nil])
([nil nil ((9594 . 9596) (t 25366 6562 599200 884000)) nil (25366 6576 16521 819000) 0 nil])
([nil nil ((9622 . 9623) (t 25366 6576 42534 63000)) nil (25366 6605 571185 355000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -9622) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) 9623 (t 25366 6605 635867 54000)) nil (25366 6620 796354 736000) 0 nil])
([nil nil ((9266 . 9269) (t 25366 6620 855866 879000)) nil (25366 6650 19629 503000) 0 nil])
([nil nil ((9269 . 9270)) nil (25366 6650 19622 936000) 0 nil])
([nil nil ((9638 . 9639) (t 25366 6650 92533 208000)) nil (25366 6739 988760 845000) 0 nil])
([nil nil ((9638 . 9641)) nil (25366 6739 988758 805000) 0 nil])
([nil nil ((9639 . 9645) (#("un" 0 2 (fontified nil)) . 9639) (9639 . 9641) (#("unwrap" 0 6 (fontified nil)) . -9639) (9639 . 9645) (#("un" 0 2 (fontified t)) . -9639) (undo-tree-id1879 . -2) (undo-tree-id1880 . -2) (undo-tree-id1881 . -2) (undo-tree-id1882 . -2) 9641) nil (25366 6739 988755 556000) 0 nil])
([nil nil ((9645 . 9647)) nil (25366 6739 988745 136000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9647) (undo-tree-id1878 . -1) 9648) nil (25366 6739 988739 36000) 0 nil])
([nil nil ((9672 . 9677) (t 25366 6740 52532 121000)) nil (25366 6750 836634 922000) 0 nil])
([nil nil ((9673 . 9679) (#("unwa" 0 4 (fontified nil)) . 9673) (9673 . 9677) (#("unwrap" 0 6 (fontified t)) . -9673) (undo-tree-id1883 . -6) (undo-tree-id1884 . -6) (9673 . 9679) (#("unwa" 0 4 (fontified t)) . -9673) (undo-tree-id1885 . -4) (undo-tree-id1886 . -4) (undo-tree-id1887 . -1) (undo-tree-id1888 . -2) (undo-tree-id1889 . -3) (undo-tree-id1890 . -4) 9677) nil (25366 6750 836631 496000) 0 nil])
([nil nil ((9679 . 9681)) nil (25366 6750 836615 505000) 0 nil])
([nil nil ((9681 . 9682)) nil (25366 6763 714249 826000) 0 nil])
([nil nil ((#("unwrap()." 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-9-face)) 7 8 (fontified t face (rainbow-delimiters-depth-9-face)) 8 9 (fontified t)) . -9673) (undo-tree-id1966 . -9) (undo-tree-id1967 . -9) (undo-tree-id1968 . -7) 9682) nil (25366 6819 978175 339000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -9681) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) 9682 (t 25366 6750 899198 649000)) ((9681 . 9682) (t 25366 6754 909198 603000)) (25366 6754 878653 971000) 0 nil])
([nil nil ((#("guard." 0 6 (fontified t)) . -9667) (undo-tree-id1963 . -6) (undo-tree-id1964 . -6) (undo-tree-id1965 . -6) 9673) nil (25366 6819 978171 310000) 0 nil])
nil
([nil nil ((#("buffer_" 0 7 (fontified t)) . -9660) (undo-tree-id1960 . -7) (undo-tree-id1961 . -7) (undo-tree-id1962 . -7) 9667) nil (25366 6819 978166 665000) 0 nil])
([nil nil ((#("ok()" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-7-face)) 3 4 (fontified t face (rainbow-delimiters-depth-7-face))) . -9596) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (undo-tree-id1955 . -3) (undo-tree-id1956 . 1) (undo-tree-id1957 . -4) (undo-tree-id1958 . 2) (undo-tree-id1959 . -3) 9600) nil (25366 6819 978159 207000) 0 nil])
([nil nil ((#("is_" 0 3 (fontified t)) . -9593) (undo-tree-id1948 . -3) (undo-tree-id1949 . -3) (undo-tree-id1950 . -3) (undo-tree-id1951 . -3) 9596) nil (25366 6819 975306 8000) 0 nil])
([nil nil ((#("guard." 0 6 (fontified t)) . -9587) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) 9593) nil (25366 6819 975300 104000) 0 nil])
([nil nil ((#("buffer_" 0 7 (fontified t)) . -9580) (undo-tree-id1940 . -7) (undo-tree-id1941 . -7) (undo-tree-id1942 . -7) (undo-tree-id1943 . -7) 9587) nil (25366 6819 975295 173000) 0 nil])
([nil nil ((9580 . 9581)) nil (25366 6819 975290 713000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9579) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (#(";" 0 1 (fontified t)) . -9580) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) 9581) nil (25366 6819 975288 746000) 0 nil])
([nil nil ((9579 . 9583)) nil (25366 6819 975276 939000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -9580) (undo-tree-id1925 . -1) (#("e" 0 1 (fontified t)) . -9581) (undo-tree-id1926 . -1) (#("t" 0 1 (fontified t)) . -9582) (undo-tree-id1927 . -1) 9583) nil (25366 6819 975275 283000) 0 nil])
([nil nil ((9580 . 9584)) nil (25366 6819 975271 266000) 0 nil])
([nil nil ((9585 . 9591) (9584 . 9586)) nil (25366 6819 975270 168000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -9589) (undo-tree-id1923 . -1) (#("u" 0 1 (fontified t)) . -9590) (undo-tree-id1924 . -1) 9591) nil (25366 6819 975268 490000) 0 nil])
([nil nil ((9589 . 9590)) nil (25366 6819 975265 268000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9589) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) 9590) nil (25366 6819 975263 909000) 0 nil])
([nil nil ((9589 . 9592)) nil (25366 6819 975260 957000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -9591) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) 9592) nil (25366 6819 975259 684000) 0 nil])
([nil nil ((9591 . 9596)) nil (25366 6819 975256 740000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -9592) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (#("e" 0 1 (fontified t)) . -9593) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (#("r" 0 1 (fontified t)) . -9594) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (#("_" 0 1 (fontified t)) . -9595) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) 9596) nil (25366 6819 975253 751000) 0 nil])
([nil nil ((9592 . 9593)) nil (25366 6819 975233 959000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -9592) (undo-tree-id1898 . -1) 9593) nil (25366 6819 975232 763000) 0 nil])
([nil nil ((9592 . 9596)) nil (25366 6819 975230 559000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -9595) (undo-tree-id1897 . -1) 9596) nil (25366 6819 975229 323000) 0 nil])
([nil nil ((9595 . 9598)) nil (25366 6819 975226 975000) 0 nil])
([nil nil ((9599 . 9606)) nil (25366 6819 975225 891000) 0 nil])
([nil nil ((9602 . 9608) (#("buff" 0 4 (fontified nil)) . 9602) (9602 . 9606) (#("buffer" 0 6 (fontified nil)) . -9602) (9602 . 9608) (#("buff" 0 4 (fontified t)) . -9602) (undo-tree-id1896 . -4) 9606) nil (25366 6819 975223 742000) 0 nil])
([nil nil ((9608 . 9610)) nil (25366 6819 975219 79000) 0 nil])
([nil nil ((9602 . 9614) (#("buffer_g" 0 8 (fontified nil)) . 9602) (9602 . 9610) (#("buffer_guard" 0 12 (fontified nil)) . -9602) (9602 . 9614) (#("buffer_g" 0 8 (fontified t)) . -9602) (undo-tree-id1895 . -8) 9610) nil (25366 6819 975213 292000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -9643) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (#("e" 0 1 (fontified t)) . -9644) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (#("r" 0 1 (fontified t)) . -9645) (undo-tree-id1975 . -1) 9646 (t 25366 6820 9197 807000)) nil (25366 6825 92591 600000) 0 nil])
([nil nil ((9584 . 9586) (t 25366 6825 135864 410000)) nil (25366 6840 849861 582000) 0 nil])
([nil nil ((#("unwrap()" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-8-face)) 7 8 (fontified t face (rainbow-delimiters-depth-8-face))) . -9652) (undo-tree-id1981 . -8) (undo-tree-id1982 . -8) (undo-tree-id1983 . -6) (undo-tree-id1984 . -6) (undo-tree-id1985 . -8) (undo-tree-id1986 . 1) (undo-tree-id1987 . -8) (undo-tree-id1988 . 2) (undo-tree-id1989 . -7) 9660 (t 25366 6840 882530 886000)) nil (25366 6848 944422 698000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9651) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) 9652) nil (25366 6848 944411 136000) 0 nil])
([nil nil ((9664 . 9668) (t 25366 6848 959197 452000)) nil (25366 6859 456272 619000) 0 nil])
([nil nil ((9664 . 9673) (#("buf_" 0 4 (fontified nil)) . 9664) (9664 . 9668) (#("buf_guard" 0 9 (fontified t)) . -9664) (undo-tree-id1990 . -9) (undo-tree-id1991 . -9) (9664 . 9673) (#("buf_" 0 4 (fontified t)) . -9664) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) 9668) nil (25366 6859 456266 603000) 0 nil])
([nil nil ((#("mut" 0 3 (fontified t face font-lock-keyword-face)) . -9266) (undo-tree-id2001 . -3) (undo-tree-id2002 . -3) (undo-tree-id2003 . -3) 9269 (t 25366 6859 485863 994000)) nil (25366 6874 568723 198000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9265) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) 9266) nil (25366 6874 568715 991000) 0 nil])
([nil nil ((9586 . 9589) (t 25366 6874 595863 804000)) nil (25366 6881 904304 409000) 0 nil])
([nil nil ((9589 . 9590)) nil (25366 6881 904299 408000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9586) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (#("r" 0 1 (fontified t)) . -9587) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (#("e" 0 1 (fontified t)) . -9588) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -9589) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) 9590 (t 25366 6881 962530 385000)) nil (25366 6893 901532 695000) 0 nil])
([nil nil ((9583 . 9587)) nil (25366 6893 901506 612000) 0 nil])
([nil nil ((9266 . 9270) (t 25366 6893 959196 911000)) nil (25366 6904 440582 897000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -12424) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (#("6" 0 1 (fontified t)) . -12425) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) 12426 (t 25366 6904 465863 452000)) nil (25366 6996 334606 627000) 0 nil])
([nil nil ((12424 . 12425)) nil (25366 6996 334590 739000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -12319) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -12320) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) 12321 (t 25366 6996 369195 698000)) nil (25366 7043 560504 333000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -12422) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) 12423) nil (25366 7043 560496 794000) 0 nil])
([nil nil ((12422 . 12426)) nil (25366 7043 560482 593000) 0 nil])
([nil nil ((12319 . 12321) (t 25366 7043 622528 458000)) nil (25366 7061 187597 676000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -12424) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (#("0" 0 1 (fontified t)) . -12425) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (#("0" 0 1 (fontified t)) . -12426) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (#("0" 0 1 (fontified t)) . -12427) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) 12428 (t 25366 7061 222528 246000)) nil (25366 7066 983794 202000) 0 nil])
([nil current ((12424 . 12425)) nil (25366 7066 983756 665000) 0 nil])
nil
